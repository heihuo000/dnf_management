.版本 2

.程序集 __HIDDEN_TEMP_MOD__, , 公开
.子程序 系统_取系统版本, 文本型, 公开, 支持获取win98、win2000 、winXP、win2003 、win2008 、win7 、win8 、win2012、win8.1 、win10 系统版本。
    .参数 参_主版本, 整数型, 参考 可空, 变量储存返回值
    .参数 参_次版本, 整数型, 参考 可空, 变量储存返回值
    .参数 参_是否带名称, 逻辑型, 可空, 是否带版本名称描述，如 专业版，企业版等
    .参数 参_是否取位数, 逻辑型, 可空, 操作系统位数，如32位或64位
    .参数 参_取SP版本号, 逻辑型, 可空
    .参数 参_取内部版本, 逻辑型, 可空, build内部版本

    

.子程序 读内存代码, 整数型, 公开, 读内存整数型,如果表达式无效或地址无效返回-1
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 地址表达式, 文本型

    

.子程序 读内存整数型2, 整数型, 公开, 从内存中读取整数型数据,失败返回-1
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 内存地址, 整数型
    .参数 长度, 整数型, 可空
    .参数 偏移量, 整数型, 可空 数组

    

.子程序 asm_十六到十, 长整数型, 公开
    .参数 十六进制文本, 文本型

    

.子程序 asm_十到十六, 文本型, 公开
    .参数 十进制整数, 整数型

    

.子程序 asm_读整数型内存, 整数型, 公开
    .参数 内存地址, 整数型

    

.子程序 asm_读整数型内存2, 整数型, 公开
    .参数 内存地址, 整数型
    .参数 内存偏移, 整数型

    

.子程序 asm_读短整型内存, 短整数型, 公开
    .参数 内存地址, 整数型

    

.子程序 asm_读字节型内存, 字节型, 公开
    .参数 内存地址, 整数型

    

.子程序 asm_读字节型内存2, 字节型, 公开
    .参数 内存地址, 整数型
    .参数 内存偏移, 整数型

    

.子程序 asm_写字节集内存, , 公开
    .参数 写入地址, 整数型
    .参数 字节集, 字节集, 参考
    .参数 长度, 整数型

    

.子程序 进程是否存在, 逻辑型, 公开, 判断指定进程是否存在(此判断与进程其它信息无关联)(存在返回真,不存在或失败返回假)
    .参数 进程名, 文本型, , 欲检测的进程名(不区分大小写)

    

.子程序 写内存字节集, 逻辑型, 公开, 往内存中写入字节集数据(成功返回真,失败返回假)
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 地址, 整数型, , 内存地址
    .参数 数据, 字节集, , 写入数据 如果为其它数据类型,可以用 到字节集() 将数据转换为字节集
    .参数 写入长度, 整数型, 可空, 默认为全部数据,(参考: 1字节型 2短整数型 4长整数型,小数型,指针 8长整数型,双精度小数型,日期时间型)

    

.子程序 销毁线程, 逻辑型, 公开, 强制结束指定线程,不推荐使用(无返回值)
    .参数 线程句柄, 整数型, , 欲结束的线程号

    

.子程序 读内存整数型, 整数型, 公开, 从内存中读取整数型数据,失败返回失败内容
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 内存地址, 整数型
    .参数 失败内容, 整数型, 可空, 读内存失败后返回值的内容 默认为-1

    

.子程序 写内存整数型, 逻辑型, 公开, 往内存中写入四字节数据(成功返回真,失败返回假)
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 地址, 整数型, , 内存地址
    .参数 变量, 整数型, , 写入数据

    

.子程序 读内存文本型, 文本型, 公开, 从内存中读取文本型数据(返回文本,失败返回0字节长度空内容)
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 内存地址, 整数型

    

.子程序 读内存小数型, 小数型, 公开, 从内存中读取小数型数据,失败返回失败内容
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 地址, 整数型, , 内存地址
    .参数 失败内容, 小数型, 可空, 读内存失败后返回值的内容 默认为-1

    

.子程序 读内存字节集, 字节集, 公开, 从内存中读取字节集数据(返回字节集,失败返回0字节长度的空字节集)
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 地址, 整数型, , 内存地址
    .参数 长度, 整数型, 可空, 欲读取内存数据的长度 (留空则智能读取)

    

.子程序 程序_延时, 逻辑型, 公开, 不占用cpu，窗口不卡死，不影响其它代码执行
    .参数 延时间隔, 整数型, 可空, 1000毫秒 = 1秒  留空为无限等待
    .参数 延时单位, 长整数型, 可空, 默认为毫秒  0=毫秒  1=秒  2=分钟  3=小时

    

.子程序 监视热键, 整数型, 公开, 监视一个热键,当热键被触发时激活响应事件.(成功返回热键标识,失败返回0).注:必须真实的按键才会触发热键
    .参数 响应事件, 子程序指针, , 响应事件(热键标识,其它...),事件参数数目不限!如果再次监视热键将响应事件!
    .参数 键代码, 整数型, , 触发事件的基本键,事件在基本键按下时触发,负数为放开时触发,1鼠标左键,2鼠标右键,更多查询相关帮助
    .参数 功能键状态, 整数型, 可空, 1 Alt  2 Ctrl  4 Shift  8 Win 若要两个或以上的状态键,则把它们的值相加.
    .参数 其它键, 整数型, 可空, 如果你需要注册由两个普通键组合的热键,可设置一个其它键代码.
    .参数 周期, 整数型, 可空, 默认为10,监视热键的周期时间(建议5-200之间)
    .参数 直接触发, 逻辑型, 可空, 默认为假:创建新的线程事件 真:直接调用事件等待返回

    

.子程序 写内存代码, 逻辑型, 公开, 写内存整数型,如果表达式无效或地址无效返回假
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 地址表达式, 文本型
    .参数 还原表达式, 文本型, 参考 可空, 如果不接收地址中原有数据,留空

    

.子程序 读内存代码2, 字节集, 公开, 读内存整数型,如果表达式无效或地址无效返回-1
    .参数 进程ID, 整数型, , (进程ID为-1时,表示读写自进程内存)
    .参数 地址表达式, 文本型

    

.子程序 还原字节集, 字节集, 公开, 还原易语言形式字节集的文本到字节集
    .参数 文本, 文本型, , 如: { 102, 204, 14, 5 }

    

.子程序 读内存字节集2, 字节集, 公开, 从内存中读取字节集数据(返回字节集,失败返回0字节长度的空字节集)
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 内存地址, 整数型, , 内存地址
    .参数 长度, 整数型, 可空, 欲读取内存数据的长度 (留空则智能读取)
    .参数 偏移量, 整数型, 可空 数组

    

.子程序 查看字节集, 文本型, 公开, 以易语言文本方式查看字节集,返回文本内容   如:{ 102, 204, 14, 5 }
    .参数 字节集, 字节集, , 欲查看的字节集
    .参数 起始位置, 整数型, 可空, 查看字节集的起始查看位置
    .参数 查看长度, 整数型, 可空, 查看的长度,默认为查看全部

    

.子程序 写内存字节集2, 逻辑型, 公开, 往内存中写入字节集数据(成功返回真,失败返回假)
    .参数 进程ID, 整数型, , 进程ID (进程ID为-1时,表示读写自进程内存)
    .参数 内存地址, 整数型, , 内存地址
    .参数 数据, 字节集, , 写入数据 如果为其它数据类型,可以用 到字节集() 将数据转换为字节集
    .参数 写入长度, 整数型, 可空, 默认为全部数据,(参考: 1字节型 2短整数型 4长整数型,小数型,指针 8长整数型,双精度小数型,日期时间型)
    .参数 偏移量, 整数型, 可空 数组

    

.子程序 转换Ansi转Unicode文本, 文本型, 公开, 将汉字转成\u6613\u8BED\u8A00这样的内容
    .参数 待转值, 文本型

    

.子程序 转换ASCII转Unicode, 字节集, 公开, 将ASCII码转换为Unicode码 (返回转换后的字节集)
    .参数 ASCII文本, 文本型, , 欲转换的ASCII文本

    

.子程序 转换Ansi转Unicode, 字节集, 公开, 将Ansi码转换为Unicode码 (返回转换后的字节集)
    .参数 Ansi, 文本型, , 欲转换的Ansi文本

    

.子程序 到十六进制_单, 文本型, 公开, 将字节型转换成十六进制文本,保留0
    .参数 字节, 字节型, , 只能是255以内的数

    

.子程序 数组_去重复, 整数型, 公开, 返回剩余不重复数组的成员数量，可处理特殊字符效率较慢
    .参数 文本数组, 文本型, 可空 数组, 要去重复的 文本数组
    .参数 整数数组, 整数型, 可空 数组, 要去重复的 整数数组

    

.子程序 数组_寻找数组, 整数型, 公开, 寻找指定成员在数组中出现的次数，
    .参数 待查找的数组, 文本型, 数组
    .参数 待查找的成员, 文本型
    .参数 寻找到的数组, 整数型, 参考 数组, 返回出现的位置数组信息

    

.子程序 系统_处理事件, , 公开, 比普通的处理事件速度要快3倍左右；
    

.子程序 线程_枚举, 整数型, 公开, 枚举指定进程ID中所有线程列表，成功返回线程数量，失败返回零。
    .参数 进程ID, 整数型
    .参数 线程列表, 整数型, 数组, 变量储存返回值。

    

.子程序 线程_打开, 整数型, 公开, 成功返回线程句柄，失败返回0
    .参数 线程ID, 整数型, 可空, 目标线程ID

    

.子程序 线程_挂起, 整数型, 公开, 将指定线程的执行挂起,注意，同一个线程可以被挂起多次，如果挂起多次，就要恢复多次。
    .参数 线程句柄, 整数型, , 要等待的线程句柄,用 线程_启动() 返回的;

    

.子程序 线程_销毁, 逻辑型, 公开, 强制终止正在运行的线程,成功返回真,失败返回假.
    .参数 线程句柄, 整数型, , 创建线程返回的句柄

    

.子程序 进程_提升权限到Debug, 逻辑型, 公开, 成功返回真，把一个进程的权限提升到调试级权限
    .参数 进程ID, 整数型, 可空, 可空为提升当前进程

    

.子程序 线程_启动, 整数型, 公开, 成功返回线程句柄，失败返回0
    .参数 要启动的子程序, 子程序指针
    .参数 要传去子程序的参数, 整数型, 可空, 往子程序里面传递一个整数型的参数
    .参数 线程ID, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放新创建的线程ID。

    

.子程序 取指针_通用型, 整数型, 公开, 取到的是变量在栈中的地址,和 取变量地址() 一样
    .参数 变量, 通用型, 参考, 基本支持所有类型

    

.子程序 线程_置CPU, 整数型, 公开, 设置线程在指定CPU上运行
    .参数 参_线程句柄, 整数型
    .参数 参_CPU序号, 整数型, , CPU序号的或运算值：1（0001）代表只运行在CPU1，2（0010）代表只运行在CPU2，3（0011）代表可以运行在CPU1和CPU2，以此类推。

    

.子程序 系统_以管理员模式创建进程, 逻辑型, 公开, 在Vista/Win7及更高系统上,以管理员模式创建进程,成功返回真,失败返回假 警告：请勿放在 窗口创建完毕/首次被激活/死循环中
    .参数 进程路径, 文本型, 可空, 留空默认启动自身进程
    .参数 运行参数, 文本型, 可空, 命令行参数

    

.子程序 取特殊目录, 文本型, 公开, 取特定的目录(返回所要取的指定目录名 无效返回空)
    .参数 欲获取目录类型, 整数型, 可空, 0我的桌面 1临时目录 5我的文档 6我的收藏夹 7我的启动 11我的开始菜单 20系统字体 36Windows安装目录 37系统目录  [99更多]

    

.子程序 线程_初始化COM库, , 公开, 有时执行线程的时候，会自动关闭，此时，可以在多线程的程序里创建COM对象前先初始化，一个线程只能调用一次
    

.子程序 进程_结束1, 逻辑型, 公开, 结束指定进程。成功返回真，失败返回假。本命令为初级命令
    .参数 进程名, 文本型, 可空, 欲结束的进程名,如果为空将结束自己
    .参数 是否区分大小写, 逻辑型, 可空, 默认为不区分,真=区分

    

.子程序 进程_名取ID, 整数型, 公开, 通过进程名取进程ID；失败返回0 
    .参数 进程名, 文本型, , 取要进程ID的进程名
    .参数 是否区分大小写, 逻辑型, 可空, 默认为不区分,真=区分

    

.子程序 文本_取出中间文本, 文本型, 公开, 比如：欲取全文本为“12345”,现在要取出“3”，<3>的前面为“2”，<3>的后面为“4”，
    .参数 欲取全文本, 文本型, , 比如：欲取全文本为 12345
    .参数 前面文本, 文本型, , 3的前面为“2”，引号直接用 #引号，如："<font color="#引号red#引号">"
    .参数 后面文本, 文本型, , 3的后面为“4”，引号直接用 #引号，如："<font color="#引号red#引号">"
    .参数 起始搜寻位置, 整数型, 可空, 可空,这里是指搜寻 参数二 前面文本 的开始位置
    .参数 是否不区分大小写, 逻辑型, 可空, 为真不区分大小写，为假区分。

    

.子程序 时间_GMT转为时间, 日期时间型, 公开, 感谢会员shituo提供代码，将GMT文本时间 转换成日期时间型
    .参数 GMT时间, 文本型

    

.子程序 线程_取状态, 整数型, 公开, 0=线程已结束  1=线程正在运行  -1=线程句柄已失效或销毁
    .参数 参_线程句柄, 整数型

    

.子程序 文本_替换, 文本型, 公开, 批量替换文本；
    .参数 原文本, 文本型
    .参数 替换进行的次数, 整数型, 可空, 可空；参数值指定对子文本进行替换的次数。如果省略，默认进行所有可能的替换。
    .参数 替换的起始位置, 整数型, 可空, 可空；参数值指定被替换子文本的起始搜索位置。如果省略，默认从 1 开始
    .参数 是否区分大小写, 逻辑型, 可空, 可空； 初始值为“假”不区分大小写；为真区分大小写。
    .参数 欲被替换的子文本1, 文本型
    .参数 用作替换的子文本1, 文本型
    .参数 欲被替换的子文本2, 文本型, 可空
    .参数 用作替换的子文本2, 文本型, 可空
    .参数 欲被替换的子文本3, 文本型, 可空
    .参数 用作替换的子文本3, 文本型, 可空
    .参数 欲被替换的子文本4, 文本型, 可空
    .参数 用作替换的子文本4, 文本型, 可空
    .参数 欲被替换的子文本5, 文本型, 可空
    .参数 用作替换的子文本5, 文本型, 可空

    

.子程序 取指针_文本型, 整数型, 公开, 取到的是变量在堆中的地址,和 取变量数据地址() 一样
    .参数 文本, 文本型, 参考

    

.子程序 时间_取随机时间戳, 文本型, 公开, 生成一个随机的时间戳。如：0.842703761170252
    

.子程序 线程_取消COM库, , 公开, 取消COM库的初始化，如果你在线程头部加入了 线程_初始化COM库 请在尾部加入此命令
    

.子程序 编码_usc2到ansi, 文本型, 公开, 将usc2转变成ansi  如 %u0031%u0032%u0033 转换后为 123 失败返回空文本
    .参数 欲转换的文本, 文本型, , \u %u \u25 等3种格式,如果是其它格式,请先用子文本替换成这三种的任意一种才能正常转换

    

.子程序 取指针字节集_, 整数型, 公开
    .参数 参数_字节集, 字节集

    

.子程序 转换繁体到简体, 文本型, 公开, 将繁体中文转换成简体中文(返回转换后的简体内容)
    .参数 繁体文本, 文本型, , 欲转换的文本内容

    

.子程序 进制_十六到十, 长整数型, 公开, 感谢【@haishifu 】优化
    .参数 参_十六进制文本, 文本型, , 字母不区分大小写

    

.子程序 字节集_字节集转文本, 文本型, 公开, 以文本表示字节集，适合于字节集的调试用,查看字节集可以将一串字节集用文本形式表示出来，极大地方便了调试字节集变量。感谢易友[缘诚]提供优化查看速度方案
    .参数 原始字节集, 字节集, , 要查看的字节集

    

.子程序 字节集_字节集转文本ex, 文本型, 公开, 感谢【@贫民窟 】提供源码
    .参数 字节集, 字节集

    

.子程序 字节集_文本转字节集ex, 字节集, 公开, 感谢【@贫民窟 】提供源码
    .参数 参_文本, 文本型

    

.子程序 字节集_文本转字节集, 字节集, 公开, 将“字节集_字节集转文本”得到的文本字节集重新转换为字节集。感谢【御风软件】提供代码
    .参数 文本字节集, 文本型

    

.子程序 字节集_十六进制到字节集, 字节集, 公开, 将一串十六进制文本还原为字节集。还原为字节集可以将默认的16进制文本转换成字节集。如“00BFAD00”可还原为{0,191,173,0}
    .参数 原始16进制文本, 文本型, , 如“00BFAD00AFD4FD4F9E054F9FF91FC5FF2076FBAFDB071044”

    

.子程序 字节集_字节集到十六进制, 文本型, 公开, 将字节集用16进制表示.可以将字节集用系统标准16进制表示
    .参数 原始字节集, 字节集, , 用于转换的字节集

    

.子程序 字节集_寻找取左, 字节集, 公开, 从字节集的左边按 欲寻找的字节集 开始寻找 如 字节集_取左边({105,108,121,13,10,83,101},{13,10}) 将返回 {105,108,121}
    .参数 被查找的字节集, 字节集, , 被查找的字节集
    .参数 欲寻找的字节集, 字节集, , 欲寻找的字节集
    .参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。

    

.子程序 字节集_寻找取右, 字节集, 公开, 从字节集的右边按 欲寻找的字节集 开始寻找  如 字节集_取右边({105,108,121,13,10,83,101},{13,10}) 将返回 {83,101}
    .参数 被查找的字节集, 字节集, , 被查找的字节集
    .参数 欲寻找的字节集, 字节集, , 欲寻找的字节集
    .参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。

    

.子程序 字节集_寻找取中, 字节集, 公开
    .参数 要操作的字节集, 字节集
    .参数 前面字节集, 字节集
    .参数 后面字节集, 字节集
    .参数 起始搜寻位置, 整数型, 可空, 可空。1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。

    

.子程序 字节集_到文本, 文本型, 公开
    .参数 字节集, 字节集

    

.子程序 字节集_到整数, 整数型, 公开
    .参数 字节集, 字节集
    .参数 位置, 整数型, 可空, 默认为1

    

.子程序 字节集_取左边, 字节集, 公开
    .参数 字节集, 字节集
    .参数 欲取出字节的数目, 整数型

    

.子程序 字节集_取右边, 字节集, 公开
    .参数 字节集, 字节集
    .参数 欲取出字节的数目, 整数型

    

.子程序 字节集_取空白, 字节集, 公开
    .参数 零字节数目, 整数型

    

.子程序 字节集_取长度, 整数型, 公开
    .参数 字节集, 字节集

    

.子程序 字节集_取指定位置字节集, 字节集, 公开
    .参数 字节集, 字节集
    .参数 起始取出位置, 整数型
    .参数 欲取出字节的数目, 整数型

    

.子程序 字节集_取中间, 字节集, 公开, 取指定字节集中 指定前后字节集中间的数据，用法与”文本_取出中间文本“类似
    .参数 要操作的字节集, 字节集
    .参数 前面字节集, 字节集
    .参数 后面字节集, 字节集
    .参数 起始搜寻位置, 整数型, 可空, 可空。1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。

    

.子程序 字节集_替换, 字节集, 公开, 将指定字节集的某一部分用其它的字节集替换,然后返回替换后的结果.
    .参数 欲替换其部分的字节集, 字节集
    .参数 起始替换位置, 整数型, , 替换的起始位置,1为首位置,2为第2个位置,如此类推.
    .参数 替换长度, 整数型
    .参数 用作替换的字节集, 字节集, 可空, 可以被省略.如果本参数被省略,则删除字节集中的指定部分.

    

.子程序 字节集_寻找, 整数型, 公开, 返回一字节集在另一字节集中最先出现的位置,位置值从 1 开始.如果未找到,返回 -1.
    .参数 被搜寻的字节集, 字节集
    .参数 欲寻找的字节集, 字节集
    .参数 起始搜寻位置, 整数型, 可空, 1为首位置,2为第2个位置,如此类推,如果被省略,则“寻找字节集”命令默认从首部开始,“倒找字节集”命令默认从尾部开始.

    

.子程序 字节集_取指针, 整数型, 公开
    .参数 字节集, 字节集

    

.子程序 字节集_子替换, 字节集, 公开, 将所有的预被替换的字节集用 用作替换的子字节集 替换
    .参数 欲被替换的字节集, 字节集
    .参数 欲被替换的子字节集, 字节集
    .参数 用作替换的子字节集, 字节集, 可空, 可以被省略。如果省略本参数，则默认为空字节集。
    .参数 进行替换的起始位置, 整数型, 可空, 可以被省略。被替换子字节集的起始搜索位置。如果省略，默认从1开始。
    .参数 替换进行的次数, 整数型, 可空, 可以被省略。对子字节集进行替换的次数。如果省略，默认进行所有可能的替换。

    

.子程序 字节集_寻找子, 整数型, 公开, 查找所有欲寻找的字节集 ，将每个位置放入 结果数组
    .参数 被搜寻的字节集, 字节集
    .参数 欲寻找的字节集, 字节集
    .参数 结果数组, 整数型, 数组
    .参数 开始偏移, 整数型, 可空

    

.子程序 修复野猪气息Go, , 公开
    

.子程序 RC4加密, 文本型, 公开
    .参数 明文, 文本型
    .参数 密钥, 文本型

    

.子程序 RC4解密, 文本型, 公开
    .参数 密文, 文本型
    .参数 密钥, 文本型

    

.子程序 网页_访问S, 文本型, 公开, 源码由[洫蜘蛛]提供,使用WinHttp的 API方式访问网页,如果返回是“?”请查询返回协议头是否有“Content-Encoding: gzip“表示gzip压缩过网页，可用 网页_GZIP解压()命令解压，如果返回是乱码，则返回原始文本，请自行转换编码，失败返回空文本，请取出状态文本。
    .参数 网址, 文本型, , 完整的网页地址,必须包含http://或者https://
    .参数 访问方式, 整数型, 可空, 0=GET 1=POST 2=HEAD  3=PUT  4=OPTIONS  5=DELETE  6=TRACE  7=CONNECT
    .参数 提交信息, 文本型, 可空, POST专用
    .参数 提交Cookies, 文本型, 参考 可空, 设置提交时的cookie
    .参数 返回Cookies, 文本型, 参考 可空, 返回的Cookie
    .参数 附加协议头, 文本型, 可空, 一行一个请用换行符隔开,建议填写常量值或文本值,防止因传参引发错误
    .参数 返回协议头, 文本型, 参考 可空, 返回的协议头
    .参数 禁止重定向, 逻辑型, 可空, 默认不禁止网页重定向
    .参数 网站登录用户名, 文本型, 可空, 自动登录网页用户名 如路由器
    .参数 网站登录密码, 文本型, 可空
    .参数 代理地址, 文本型, 可空, 代理地址，格式为 8.8.8.8:88
    .参数 代理帐号, 文本型, 可空
    .参数 代理密码, 文本型, 可空
    .参数 超时时间, 整数型, 可空, 可以被省略，单位：秒，默认30秒，如果提供大于0的数值，则修改操作超时时间。
    .参数 返回重定向, 文本型, 参考 可空, 可以被省略，提供参数时只能提供文本型变量，用于当发生重定向时取回页面重定向的地址。
    .参数 返回状态文本, 文本型, 参考 可空
    .参数 返回原始数据, 字节集, 参考 可空, 可以被省略，返回原始网页编码
    .参数 是否自动合并更新Cookie, 逻辑型, 可空, 默认为真，自动合并更新
    .参数 是否补全必要协议头, 逻辑型, 可空, 当附件协议头为空时自动添加必要的UA协议头 默认为真，假将不再添加非传入协议头
    .参数 字节集提交, 字节集, 可空, 提交字节集数据
    .参数 是否处理协议头大小写, 逻辑型, 可空, 将协议头中的键名首字母处理为大写  默认为真

    

.子程序 编码_Ansi到Unicode, 字节集, 公开, 将Ansi码转换为Unicode码；成功返回转换后的字节集；
    .参数 Ansi, 文本型, , 欲转换的Ansi文本
    .参数 非标准Unicode编码, 逻辑型, 可空, 默认为假，为标准Unicode编码

    

.子程序 编码_Unicode到Ansi, 文本型, 公开, 将Unicode码转换为Ansi码；成功返回转换后的文本；
    .参数 Unicode, 字节集, , 欲转换的Unicode字节集

    

.子程序 网页_处理协议头, 文本型, 公开, 将协议头中的键名首字母处理为大写
    .参数 参_原始协议头, 文本型

    

.子程序 网页_协议头_取信息, 文本型, 公开, 取出协议头中的某个值 例如302跳转协议头中的 Location
    .参数 参_源协议头, 文本型
    .参数 参_键名, 文本型, , 例如：Location

    

.子程序 文本_取左边, 文本型, 公开, 从文本的左边按 欲寻找的文本 开始寻找
    .参数 被查找的文本, 文本型, , 被查找的文本
    .参数 欲寻找的文本, 文本型, , 欲寻找的文本
    .参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从左往右寻找，如果为负数，则从右往左寻找。
    .参数 是否不区分大小写, 逻辑型, 可空, 初始值为“假”。为真不区分大小写，为假区分。

    

.子程序 网页_Cookie合并更新, 文本型, 公开, 返回更新后的Cookie
    .参数 旧Cookie, 文本型, 参考
    .参数 新Cookie, 文本型

    

.子程序 取指针文本_, 整数型, 公开
    .参数 参数_文本, 文本型

    

.子程序 取指针_字节集型, 整数型, 公开, 取到的是变量堆地址,和 取变量数据地址() 一样
    .参数 字节集, 字节集, 参考

    

.子程序 文本_首字母改大写, 文本型, 公开, 〈文本型〉 首字母大写 （文本）例： FOXPRO 或 foxpro，返回 Foxpro，注意本命令对首字为汉字的文本无效
    .参数 英文文本, 文本型

    

.子程序 文本_取右边, 文本型, 公开, 从文本的右边按 欲寻找的文本 开始寻找, 取行右边 (“1234567890”, “5”, 1, 真)
    .参数 被查找的文本, 文本型, , 被查找的文本
    .参数 欲寻找的文本, 文本型, , 欲寻找的文本
    .参数 起始寻找位置, 整数型, 可空, 可为空，默认为1，从右往左寻找，如果为负数，则从左往右寻找。
    .参数 是否不区分大小写, 逻辑型, 可空, 默认为假,区分大小写

    

.子程序 文本_去重复文本, 文本型, 公开, 去除原文本中重复的文本
    .参数 原文本, 文本型
    .参数 分割符, 文本型, 可空, 原文本单个内容间的分隔符，例如：---  留空为：逐字分割

    

.子程序 文本_逐字分割, 整数型, 公开, 将指定文本,逐字分割成数组,保存为指定的变量数组中,返回成员个数,可识别换行符及全半角字符和汉字
    .参数 文本, 文本型, , 需要分割的文本
    .参数 返回的数组, 文本型, 参考 可空 数组, 保存分割结果的数组变量

    

.子程序 窗口_创建, 整数型, 公开
    .参数 父窗口句柄, 整数型, 可空
    .参数 标题, 文本型, 可空
    .参数 左边, 整数型, 可空
    .参数 顶边, 整数型, 可空
    .参数 宽度, 整数型, 可空
    .参数 高度, 整数型, 可空
    .参数 可否调整尺寸, 逻辑型, 可空
    .参数 窗口类名, 文本型, 可空, 为空则为默认类名,否则需调用 窗口_注册类名() 进行注册.
    .参数 窗口风格, 整数型, 可空, 为空默认带最大化\最小化按钮\带系统菜单
    .参数 扩展风格, 整数型, 可空
    .参数 在任务栏显示, 逻辑型, 可空

    

.子程序 W2A, 文本型, 公开
    .参数 Unicode, 字节集
    .参数 CodePage, 整数型, 可空, 默认:936(简体中文)

    

.子程序 指针到整数, 整数型, 公开
    .参数 指针, 整数型

    

.子程序 取指针_字节集型, 整数型, 公开
    .参数 字节集, 字节集, 参考

    

.子程序 窗口_取类名, 文本型, 公开
    .参数 hWnd, 整数型

    

.子程序 取工作区矩形, , 公开
    .参数 rc, RECTf, 参考

    

.子程序 窗口_可视, 逻辑型, 公开
    .参数 参数_窗口句柄, 整数型
    .参数 参数_是否可视, 逻辑型, 可空, 参数为空则取

    

.子程序 窗口_注册类名, 逻辑型, 公开
    .参数 窗口类名, 文本型, 可空, lpszClassName
    .参数 类风格, 整数型, 可空, style,#CS_
    .参数 鼠标指针句柄, 整数型, 可空, hCursor
    .参数 回调指针, 子程序指针, 可空, lpfnWndProc

    

.子程序 写到内存_整数型, 逻辑型, 公开
    .参数 地址, 整数型
    .参数 整数, 整数型

    

.子程序 字体_创建, 整数型, 公开, Create
    .参数 参数_字体名称, 文本型
    .参数 参数_字体大小, 小数型, , 字体大小
    .参数 参数_风格, 整数型, 可空, “字体风格_”开头常量。
    .参数 参数_单位, 整数型, 可空, “单位_”开头常量。

    

.子程序 字体族_销毁, , 公开
    .参数 参数_字体族指针, 整数型

    

.子程序 字体族_创建自名称, 整数型, 公开, CreateFromName
    .参数 参数_名称, 文本型

    

.子程序 图像属性_创建, 整数型, 公开, Create
    

.子程序 取指针_文本型, 整数型, 公开
    .参数 文本, 文本型, 参考

    

.子程序 编码_gb2312到utf8, 文本型, 公开
    .参数 欲转换的源码, 文本型

    

.子程序 编码_utf8到gb2312, 文本型, 公开
    .参数 欲转换的源码, 文本型

    

.子程序 汇编_读整数型, 整数型, 公开, 读当前内存地址数据
    .参数 内存地址, 整数型
    .参数 读取长度, 整数型, 可空

    

.子程序 汇编_读小数型, 小数型, 公开, 读当前内存地址数据
    .参数 内存地址, 整数型

    

.子程序 汇编_读字节集, 字节集, 公开, 读当前内存地址数据
    .参数 内存地址, 整数型
    .参数 读取长度, 整数型

    

.子程序 汇编_写整数型, , 公开, 写当前内存地址数据
    .参数 内存地址, 整数型
    .参数 数据值, 整数型
    .参数 写入长度, 整数型, 可空

    

.子程序 汇编_写小数型, , 公开, 写当前内存地址数据
    .参数 内存地址, 整数型
    .参数 数据值, 小数型

    

.子程序 汇编_写字节集, , 公开, 写当前内存地址数据
    .参数 内存地址, 整数型
    .参数 数据值, 字节集

    

.子程序 汇编_JMP_跳转, , 公开, JMP
    .参数 内存地址, 整数型
    .参数 跳到地址, 整数型
    .参数 附加字节, 字节集, 可空

    

.子程序 汇编_CALL跳转, , 公开, CALL
    .参数 内存地址, 整数型
    .参数 跳到地址, 整数型
    .参数 附加字节, 字节集, 可空

    

.子程序 汇编_JMP_跳回, , 公开
    .参数 跳回地址, 整数型

    

.子程序 汇编_取随机数, 整数型, 公开, 自带随机引擎
    .参数 随机数的最小值, 整数型
    .参数 随机数的最大值, 整数型

    

.子程序 汇编_取子程序, 整数型, 公开
    .参数 子程序, 子程序指针
    .参数 参数, 整数型, , 取出的头部地址是否+参数

    

.子程序 汇编_取双字节, 整数型, 公开, 取地址尾部4位
    .参数 地址, 整数型

    

.子程序 汇编_取自身模块, 整数型, 公开, 主要用于DLL中取自身模块句柄,弥补易语言DLL中无法取自身模块句柄的不足.
    

.子程序 返回变量, 整数型, 公开
    .参数 变量地址, 整数型

    

.子程序 汇编_加, 整数型, 公开, 汇编整数加法
    .参数 欲加1, 整数型
    .参数 欲加2, 整数型
    .参数 欲加3, 整数型, 可空
    .参数 欲加4, 整数型, 可空
    .参数 欲加5, 整数型, 可空
    .参数 欲加6, 整数型, 可空

    

.子程序 汇编_减, 整数型, 公开, 汇编整数减法
    .参数 欲减1, 整数型
    .参数 欲减2, 整数型
    .参数 欲减3, 整数型, 可空
    .参数 欲减4, 整数型, 可空
    .参数 欲减5, 整数型, 可空
    .参数 欲减6, 整数型, 可空

    

.子程序 Jmp, 整数型, 公开
    .参数 地址, 整数型
    .参数 参数一, 整数型, 可空
    .参数 参数二, 整数型, 可空
    .参数 参数三, 整数型, 可空
    .参数 参数四, 整数型, 可空
    .参数 参数五, 整数型, 可空
    .参数 参数六, 整数型, 可空
    .参数 参数七, 整数型, 可空
    .参数 参数八, 整数型, 可空
    .参数 参数九, 整数型, 可空
    .参数 参数十, 整数型, 可空
    .参数 参数十一, 整数型, 可空
    .参数 参数十二, 整数型, 可空
    .参数 参数十三, 整数型, 可空
    .参数 参数十四, 整数型, 可空

    

.子程序 改内存属性, 整数型, 公开
    .参数 进程句柄, 整数型
    .参数 内存地址, 整数型
    .参数 内存长度, 整数型
    .参数 保护属性, 整数型

    

.子程序 查询属性, 整数型, 公开
    .参数 _参数1, 整数型

    

.子程序 设置热键, 整数型, 公开, 监视一个热键,当热键被触发时激活响应事件.(成功返回热键标识,失败返回0).注:必须真实的按键才会触发热键
    .参数 响应事件, 子程序指针, , 响应事件(热键标识,其它...),事件参数数目不限!如果再次监视热键将响应事件!
    .参数 键代码, 整数型, , 触发事件的基本键,事件在基本键按下时触发,负数为放开时触发,1鼠标左键,2鼠标右键,更多查询相关帮助
    .参数 功能键状态, 整数型, 可空, 1 Alt  2 Ctrl  4 Shift  8 Win 若要两个或以上的状态键,则把它们的值相加.
    .参数 其它键, 整数型, 可空, 如果你需要注册由两个普通键组合的热键,可设置一个其它键代码.
    .参数 指定窗口, 整数型, 可空, 填指定窗口句柄 留空全部窗口都有效 留空只能在主线程调用,否则会没效果,线程或者时钟里面调用该命令需要填指定窗口句柄
    .参数 直接调用, 逻辑型, 可空, 主线程调用

    

.子程序 十六到十, 整数型, 公开, 将16进制文本转换到10进制数值(返回10进制整数)
    .参数 文本, 文本型

    

.子程序 Ansi转Unicode, 字节集, 公开, 将Ansi码转换为Unicode码 (返回转换后的字节集)
    .参数 Ansi, 文本型, , 欲转换的Ansi文本

    

.子程序 Unicode转Ansi, 文本型, 公开, 将Unicode码转换为Ansi码 (返回转换后的文本)
    .参数 Unicode, 字节集, , 欲转换的Unicode字节集

    

.子程序 加密注册码, 文本型, 公开, 静态加密,返回密文,失败返回空
    .参数 文本, 文本型, , 欲加密的文本

    

.子程序 解密注册码, 文本型, 公开, 静态解密,返回明文,失败返回空
    .参数 文本, 文本型, , 欲解密的文本

    

.子程序 写配置项_, 逻辑型, 公开
    .参数 配置文件名, 文本型
    .参数 配置密码, 文本型
    .参数 项名称, 文本型
    .参数 欲写入值, 文本型

    

.子程序 读配置项_, 文本型, 公开
    .参数 配置文件名, 文本型
    .参数 配置密码, 文本型
    .参数 项名称, 文本型
    .参数 默认文本, 文本型, 可空

    

.子程序 初始化双开, , 公开
    

