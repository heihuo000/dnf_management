.版本 2

.程序集 ITcpPullClient, , 公开, TcpPullClientListener 对象，请自己创建和销毁，目的是保证安全
.子程序 Start, 逻辑型, 公开, 名称：启动通信组件（并指定【可选】绑定地址） 描述：启动客户端通信组件并连接服务端，启动完成后可开始收发数据,TRUE-- 成功,FALSE-- 失败，可通过 HP_Client_GetLastError() 获取错误代码,/
    .参数 hClient, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 bAsyncConnect, 逻辑型, 可空, 是否采用异步 Connect
    .参数 lpszBindAddress, 文本型, 可空, 绑定地址（默认：nullptr，TcpClient/UdpClient -> 不执行绑定操作，UdpCast 绑定 -> 0.0.0.0）
    .参数 usLocalPort, 整数型, 可空, 本地端口（默认：0）

    

.子程序 Stop, 逻辑型, 公开, 名称：关闭通信组件 描述：关闭客户端通信组件，关闭完成后断开与服务端的连接并释放所有资源,TRUE-- 成功,FALSE-- 失败，可通过 GetLastError() 获取错误代码,/
    .参数 hClient, 整数型

    

.子程序 Wait, 逻辑型, 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 hClient, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

    

.子程序 Send, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

    

.子程序 SendBytes, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 字节集, , 发送缓冲区

    

.子程序 IsSecure, 逻辑型, 公开, 检测是否为安全连接（SSL/HTTPS）
    .参数 hClient, 整数型

    

.子程序 SendPart, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

    

.子程序 SendPackets, 逻辑型, 公开, 名称：发送多组数据 描述：向服务端发送多组数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, WSABUF, 数组, 发送缓冲区

    

.子程序 SetExtra, , 公开, 设置连接的附加数据
    .参数 hClient, 整数型
    .参数 pExtra, 整数型

    

.子程序 GetExtra, 整数型, 公开, 获取连接的附加数据
    .参数 hClient, 整数型

    

.子程序 HasStarted, 逻辑型, 公开, 检查通信组件是否已启动
    .参数 hClient, 整数型

    

.子程序 GetState, 整数型, 公开, 查看通信组件当前状态，#SS_ 开头常量
    .参数 hClient, 整数型

    

.子程序 GetLastError, 整数型, 公开, 获取最近一次失败操作的错误代码
    .参数 hClient, 整数型

    

.子程序 GetLastErrorDesc, 文本型, 公开, 获取最近一次失败操作的错误描述
    .参数 hClient, 整数型

    

.子程序 GetConnectionID, 整数型, 公开, 获取该组件对象的连接 ID
    .参数 hClient, 整数型

    

.子程序 GetLocalAddress, 逻辑型, 公开, 获取 Client Socket 的地址信
    .参数 hClient, 整数型
    .参数 lpszAddress, 文本型, 参考,  
    .参数 pusPort, 整数型, 参考,  

    

.子程序 GetRemoteHost, 逻辑型, 公开, 获取连接的远程主机信息
    .参数 hClient, 整数型
    .参数 lpszHost, 文本型, 参考,  
    .参数 pusPort, 整数型, 参考,  

    

.子程序 GetPendingDataLength, 逻辑型, 公开, 获取连接中未发出数据的长度
    .参数 hClient, 整数型
    .参数 piPending, 整数型, 参考

    

.子程序 SetFreeBufferPoolSize, , 公开, 设置内存块缓存池大小（通常设置为 -> PUSH 模型：5 - 10；PULL 模型：10 - 20 ）
    .参数 hClient, 整数型
    .参数 dwFreeBufferPoolSize, 整数型

    

.子程序 SetFreeBufferPoolHold, , 公开, 设置内存块缓存池回收阀值（通常设置为内存块缓存池大小的 3 倍）
    .参数 hClient, 整数型
    .参数 dwFreeBufferPoolHold, 整数型

    

.子程序 GetFreeBufferPoolSize, 整数型, 公开, 获取内存块缓存池大小
    .参数 hClient, 整数型

    

.子程序 GetFreeBufferPoolHold, 整数型, 公开, 获取内存块缓存池回收阀值
    .参数 hClient, 整数型

    

.子程序 SetupSSLContext, 逻辑型, 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 hClient, 整数型, , 服务句柄
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, 可空, 证书文件
    .参数 lpszPemKeyFile, 文本型, 可空, 私钥文件
    .参数 lpszKeyPasswod, 文本型, 可空, 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, 可空, CA 证书文件或目录（单向验证或客户端可选）

    

.子程序 SetupSSLContextByMemory, 逻辑型, 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 hClient, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, 可空, 证书内容
    .参数 lpszPemKey, 文本型, 可空, 私钥内容
    .参数 lpszKeyPasswod, 文本型, 可空, 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, 可空, CA 证书内容（单向验证可选）

    

.子程序 CleanupSSLContext, , 公开, 名称：清理通信组件 SSL 运行环境 描述：清理通信组件 SSL 运行环境，回收 SSL 相关内存,无,/当要重新设置通信组件 SSL 环境参数时，需要先调用本方法清理原先的环境参数
    .参数 hClient, 整数型

    

.子程序 StartSSLHandShake, 逻辑型, 公开, 启动 SSL 握手，当通信组件设置为非自动握手时，需要调用本方法启动 SSL 握手
    .参数 hClient, 整数型

    

.子程序 SetSSLAutoHandShake, , 公开, 设置通信组件握手方式（默认：真，自动握手）
    .参数 hClient, 整数型
    .参数 bAutoHandShake, 逻辑型

    

.子程序 IsSSLAutoHandShake, 逻辑型, 公开, 获取通信组件握手方式
    .参数 hClient, 整数型

    

.子程序 SetSSLCipherList, , 公开, 设置 SSL 加密算法列表
    .参数 hClient, 整数型
    .参数 lpszCipherList, 文本型

    

.子程序 GetSSLCipherList, 文本型, 公开, 获取 SSL 加密算法列表
    .参数 hClient, 整数型

    

.子程序 GetSSLSessionInfo, 逻辑型, 公开, 名称：获取 SSL Session 信息 描述：获取指定类型的 SSL Session 信息（输出类型参考：#SSL_SSI_）
    .参数 hClient, 整数型
    .参数 enInfo, 整数型, , 参考：#SSL_SSI_
    .参数 lppInfo, 整数型, 参考

    

.子程序 IsPauseReceive, 逻辑型, 公开, 获取连接的数据接收状态
    .参数 hClient, 整数型
    .参数 pbPaused, 逻辑型, 参考, 返回 真- 暂停, 假- 恢复

    

.子程序 IsConnected, 逻辑型, 公开, 检测是否有效连接
    .参数 hClient, 整数型

    

.子程序 SetReuseAddressPolicy, , 公开, 设置地址重用选项
    .参数 hClient, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

    

.子程序 GetReuseAddressPolicy, 整数型, 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 hClient, 整数型

    

.子程序 PauseReceive, 逻辑型, 公开, 暂停/恢复某个连接的数据接收工作
    .参数 hClient, 整数型
    .参数 pbPaused, 逻辑型, , 真- 暂停, 假- 恢复

    

.子程序 OnPrepareConnect, 逻辑型, 公开, 【可选】绑定准备连接事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnPrepareConnect(pSender 整数型,dwConnID 整数型,socket 整数型)

    

.子程序 OnConnect, 逻辑型, 公开, 【可选】绑定连接事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnConnect(pSender 整数型,dwConnID 整数型)

    

.子程序 OnHandShake, 逻辑型, 公开, 【可选】绑定握手事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnHandShake(pSender 整数型,dwConnID 整数型)

    

.子程序 OnSend, 逻辑型, 公开, 【可选】绑定发送事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnSend(pSender 整数型,dwConnID 整数型,pData 整数型,iLength 整数型)

    

.子程序 OnReceive, 逻辑型, 公开, 【必须】绑定数据接收事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnReceive(pSender 整数型,dwConnID 整数型,iLength 整数型)

    

.子程序 OnClose, 逻辑型, 公开, 【必须】绑定断开事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnClose(pSender 整数型,dwConnID 整数型,enOperation(#SO_ 开头常量) 整数型,iErrorCode 整数型)

    

.子程序 CreateListener, 整数型, 公开, 创建 TcpPullClientListener 对象,只会创建一次
    

.子程序 DestroyListener, , 公开, 销毁 TcpPullClientListener 对象
    

.子程序 Create, 整数型, 公开, 创建 HP_TcpPullClient 或 HP_SSLPullClient 对象
    .参数 SSL, 逻辑型, , 是否是SSL组件

    

.子程序 Destroy, , 公开, 销毁 HP_TcpPullClient 或 HP_SSLPullClient 对象
    .参数 hClient, 整数型
    .参数 SSL, 逻辑型, , 是否是SSL组件 

    

.子程序 SendSmallFile, 逻辑型, 公开, 名称：发送小文件 描述：向服务端发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 lpszFileName, 文本型, , 文件路径 
    .参数 pHead, WSABUF, , 头部附加数据
    .参数 pTail, WSABUF, , 尾部附加数据

    

.子程序 SetSocketBufferSize, , 公开, 设置通信数据缓冲区大小（根据平均通信数据包大小调整设置，通常设置为：(N * 1024) - sizeof(TBufferObj)）
    .参数 hClient, 整数型
    .参数 dwSocketBufferSize, 整数型

    

.子程序 SetKeepAliveTime, , 公开, 设置正常心跳包间隔（毫秒，0 则不发送心跳包，默认：60 * 1000）
    .参数 hClient, 整数型
    .参数 dwKeepAliveTime, 整数型

    

.子程序 SetKeepAliveInterval, , 公开, 设置异常心跳包间隔（毫秒，0 不发送心跳包，，默认：20 * 1000，如果超过若干次 [默认：WinXP 5 次, Win7 10 次] 检测不到心跳确认包则认为已断线）
    .参数 hClient, 整数型
    .参数 dwKeepAliveInterval, 整数型

    

.子程序 SetNoDelay, , 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 hClient, 整数型
    .参数 bNoDelay, 逻辑型

    

.子程序 GetSocketBufferSize, 整数型, 公开, 获取通信数据缓冲区大小
    .参数 hClient, 整数型

    

.子程序 GetKeepAliveTime, 整数型, 公开, 获取正常心跳包间隔
    .参数 hClient, 整数型

    

.子程序 GetKeepAliveInterval, 整数型, 公开, 获取异常心跳包间隔
    .参数 hClient, 整数型

    

.子程序 IsNoDelay, 逻辑型, 公开, 检查是否开启 nodelay 模式
    .参数 hClient, 整数型

    

.子程序 Fetch, 整数型, 公开, 名称：抓取数据 描述：用户通过该方法从 Socket 组件中抓取数据,#FR_,/
    .参数 hClient, 整数型
    .参数 pData, 整数型, , 抓取缓冲区 
    .参数 iLength, 整数型, , 抓取数据长度

    

.子程序 Peek, 整数型, 公开, 名称：窥探数据（不会移除缓冲区数据） 描述：用户通过该方法从 Socket 组件中窥探数据,#FR_,/
    .参数 hClient, 整数型
    .参数 pData, 整数型, , 抓取缓冲区 
    .参数 iLength, 整数型, , 抓取数据长度

    

