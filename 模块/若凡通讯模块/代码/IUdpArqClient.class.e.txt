.版本 2

.程序集 IUdpArqClient, , 公开, UdpClientListener 对象，请自己创建和销毁，目的是保证安全
.子程序 Start, 逻辑型, 公开, 名称：启动通信组件（并指定【可选】绑定地址） 描述：启动客户端通信组件并连接服务端，启动完成后可开始收发数据,TRUE-- 成功,FALSE-- 失败，可通过 HP_Client_GetLastError() 获取错误代码,/
    .参数 hClient, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 bAsyncConnect, 逻辑型, 可空, 是否采用异步 Connect
    .参数 lpszBindAddress, 文本型, 可空, 绑定地址（默认：nullptr，TcpClient/UdpClient -> 不执行绑定操作，UdpCast 绑定 -> 0.0.0.0）
    .参数 usLocalPort, 整数型, 可空, 本地端口（默认：0）

    

.子程序 Stop, 逻辑型, 公开, 名称：关闭通信组件 描述：关闭客户端通信组件，关闭完成后断开与服务端的连接并释放所有资源,TRUE-- 成功,FALSE-- 失败，可通过 GetLastError() 获取错误代码,/
    .参数 hClient, 整数型

    

.子程序 Wait, 逻辑型, 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 hClient, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

    

.子程序 Send, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

    

.子程序 SendBytes, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 字节集, , 发送缓冲区

    

.子程序 IsSecure, 逻辑型, 公开, 检测是否为安全连接（SSL/HTTPS）
    .参数 hClient, 整数型

    

.子程序 SendPart, 逻辑型, 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

    

.子程序 SendPackets, 逻辑型, 公开, 名称：发送多组数据 描述：向服务端发送多组数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 hClient, 整数型
    .参数 pBuffer, WSABUF, 数组, 发送缓冲区

    

.子程序 SetExtra, , 公开, 设置连接的附加数据
    .参数 hClient, 整数型
    .参数 pExtra, 整数型

    

.子程序 GetExtra, 整数型, 公开, 获取连接的附加数据
    .参数 hClient, 整数型

    

.子程序 HasStarted, 逻辑型, 公开, 检查通信组件是否已启动
    .参数 hClient, 整数型

    

.子程序 GetState, 整数型, 公开, 查看通信组件当前状态，#SS_ 开头常量
    .参数 hClient, 整数型

    

.子程序 GetLastError, 整数型, 公开, 获取最近一次失败操作的错误代码
    .参数 hClient, 整数型

    

.子程序 GetLastErrorDesc, 文本型, 公开, 获取最近一次失败操作的错误描述
    .参数 hClient, 整数型

    

.子程序 GetConnectionID, 整数型, 公开, 获取该组件对象的连接 ID
    .参数 hClient, 整数型

    

.子程序 GetLocalAddress, 逻辑型, 公开, 获取 Client Socket 的地址信
    .参数 hClient, 整数型
    .参数 lpszAddress, 文本型, 参考,  
    .参数 pusPort, 整数型, 参考,  

    

.子程序 GetRemoteHost, 逻辑型, 公开, 获取连接的远程主机信息
    .参数 hClient, 整数型
    .参数 lpszHost, 文本型, 参考,  
    .参数 pusPort, 整数型, 参考,  

    

.子程序 GetPendingDataLength, 逻辑型, 公开, 获取连接中未发出数据的长度
    .参数 hClient, 整数型
    .参数 piPending, 整数型, 参考

    

.子程序 SetFreeBufferPoolSize, , 公开, 设置内存块缓存池大小（通常设置为 -> PUSH 模型：5 - 10；PULL 模型：10 - 20 ）
    .参数 hClient, 整数型
    .参数 dwFreeBufferPoolSize, 整数型

    

.子程序 SetFreeBufferPoolHold, , 公开, 设置内存块缓存池回收阀值（通常设置为内存块缓存池大小的 3 倍）
    .参数 hClient, 整数型
    .参数 dwFreeBufferPoolHold, 整数型

    

.子程序 GetFreeBufferPoolSize, 整数型, 公开, 获取内存块缓存池大小
    .参数 hClient, 整数型

    

.子程序 GetFreeBufferPoolHold, 整数型, 公开, 获取内存块缓存池回收阀值
    .参数 hClient, 整数型

    

.子程序 SetupSSLContext, 逻辑型, 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 hClient, 整数型, , 服务句柄
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, 可空, 证书文件
    .参数 lpszPemKeyFile, 文本型, 可空, 私钥文件
    .参数 lpszKeyPasswod, 文本型, 可空, 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, 可空, CA 证书文件或目录（单向验证或客户端可选）

    

.子程序 SetupSSLContextByMemory, 逻辑型, 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 hClient, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, 可空, 证书内容
    .参数 lpszPemKey, 文本型, 可空, 私钥内容
    .参数 lpszKeyPasswod, 文本型, 可空, 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, 可空, CA 证书内容（单向验证可选）

    

.子程序 CleanupSSLContext, , 公开, 名称：清理通信组件 SSL 运行环境 描述：清理通信组件 SSL 运行环境，回收 SSL 相关内存,无,/当要重新设置通信组件 SSL 环境参数时，需要先调用本方法清理原先的环境参数
    .参数 hClient, 整数型

    

.子程序 StartSSLHandShake, 逻辑型, 公开, 启动 SSL 握手，当通信组件设置为非自动握手时，需要调用本方法启动 SSL 握手
    .参数 hClient, 整数型

    

.子程序 SetSSLAutoHandShake, , 公开, 设置通信组件握手方式（默认：真，自动握手）
    .参数 hClient, 整数型
    .参数 bAutoHandShake, 逻辑型

    

.子程序 IsSSLAutoHandShake, 逻辑型, 公开, 获取通信组件握手方式
    .参数 hClient, 整数型

    

.子程序 SetSSLCipherList, , 公开, 设置 SSL 加密算法列表
    .参数 hClient, 整数型
    .参数 lpszCipherList, 文本型

    

.子程序 GetSSLCipherList, 文本型, 公开, 获取 SSL 加密算法列表
    .参数 hClient, 整数型

    

.子程序 GetSSLSessionInfo, 逻辑型, 公开, 名称：获取 SSL Session 信息 描述：获取指定类型的 SSL Session 信息（输出类型参考：#SSL_SSI_）
    .参数 hClient, 整数型
    .参数 enInfo, 整数型, , 参考：#SSL_SSI_
    .参数 lppInfo, 整数型, 参考

    

.子程序 IsPauseReceive, 逻辑型, 公开, 获取连接的数据接收状态
    .参数 hClient, 整数型
    .参数 pbPaused, 逻辑型, 参考, 返回 真- 暂停, 假- 恢复

    

.子程序 IsConnected, 逻辑型, 公开, 检测是否有效连接
    .参数 hClient, 整数型

    

.子程序 SetReuseAddressPolicy, , 公开, 设置地址重用选项
    .参数 hClient, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

    

.子程序 GetReuseAddressPolicy, 整数型, 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 hClient, 整数型

    

.子程序 PauseReceive, 逻辑型, 公开, 暂停/恢复某个连接的数据接收工作
    .参数 hClient, 整数型
    .参数 pbPaused, 逻辑型, , 真- 暂停, 假- 恢复

    

.子程序 OnPrepareConnect, 逻辑型, 公开, 【可选】绑定准备连接事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnPrepareConnect(pSender 整数型,dwConnID 整数型,socket 整数型)

    

.子程序 OnConnect, 逻辑型, 公开, 【可选】绑定连接事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnConnect(pSender 整数型,dwConnID 整数型)

    

.子程序 OnHandShake, 逻辑型, 公开, 【可选】绑定握手事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnHandShake(pSender 整数型,dwConnID 整数型)

    

.子程序 OnSend, 逻辑型, 公开, 【可选】绑定发送事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnSend(pSender 整数型,dwConnID 整数型,pData 整数型,iLength 整数型)

    

.子程序 OnReceive, 逻辑型, 公开, 【必须】绑定数据接收事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnReceive(pSender 整数型,dwConnID 整数型,pData 整数型,iLength 整数型)

    

.子程序 OnClose, 逻辑型, 公开, 【必须】绑定断开事件
    .参数 fn, 子程序指针, , 返回 #HR_ 开头常量 OnClose(pSender 整数型,dwConnID 整数型,enOperation(#SO_ 开头常量) 整数型,iErrorCode 整数型)

    

.子程序 CreateListener, 整数型, 公开, 创建 UdpClientListener 对象,只会创建一次
    

.子程序 DestroyListener, , 公开, 销毁 UdpClientListener 对象
    

.子程序 Create, 整数型, 公开, 创建 HP_UdpArqClient 对象
    

.子程序 Destroy, , 公开, 销毁 HP_UdpArqClient 对象
    .参数 hClient, 整数型

    

.子程序 SetMaxDatagramSize, , 公开, 设置数据报文最大长度（最大64KB）
    .参数 hClient, 整数型
    .参数 dwMaxDatagramSize, 整数型, , 最大传输单元，最大64KB

    

.子程序 GetMaxDatagramSize, 整数型, 公开, 获取数据报文最大长度
    .参数 hClient, 整数型

    

.子程序 SetDetectAttempts, , 公开, 设置监测包尝试次数（0 则不发送监测跳包，如果超过最大尝试次数则认为已断线）
    .参数 hClient, 整数型
    .参数 dwDetectAttempts, 整数型

    

.子程序 SetDetectInterval, , 公开, 设置监测包发送间隔（秒，0 不发送监测包）
    .参数 hClient, 整数型
    .参数 dwDetectInterval, 整数型

    

.子程序 GetDetectAttempts, 整数型, 公开, 获取心跳检查次数
    .参数 hClient, 整数型

    

.子程序 GetDetectInterval, 整数型, 公开, 获取心跳检查间隔
    .参数 hClient, 整数型

    

.子程序 SetNoDelay, , 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 hClient, 整数型, , 服务句柄
    .参数 bNoDelay, 逻辑型, , 是否开启 nodelay 模式

    

.子程序 SetTurnoffCongestCtrl, , 公开, 设置是否关闭拥塞控制（默认：FALSE，不关闭）
    .参数 hClient, 整数型, , 服务句柄
    .参数 bTurnOff, 逻辑型, , 是否关闭拥塞控制

    

.子程序 SetFlushInterval, , 公开, 设置数据刷新间隔（毫秒，默认：20）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwFlushInterval, 整数型, , 数据刷新间隔

    

.子程序 SetResendByAcks, , 公开, 设置快速重传 ACK 跨越次数（默认：0，关闭快速重传）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwResendByAcks, 整数型, , 跨越次数

    

.子程序 SetSendWndSize, , 公开, 设置发送窗口大小（数据包数量，默认：128）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwSendWndSize, 整数型, , 发送窗口大小

    

.子程序 SetRecvWndSize, , 公开, 设置接收窗口大小（数据包数量，默认：512）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwRecvWndSize, 整数型, , 接收窗口大小

    

.子程序 SetMinRto, , 公开, 设置最小重传超时时间（毫秒，默认：30）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwMinRto, 整数型, , 最小重传超时时间

    

.子程序 SetFastLimit, , 公开, 设置快速握手次数限制（默认：5，如果为 0 则不限制）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwMaxTransUnit, 整数型

    

.子程序 SetMaxTransUnit, , 公开, 设置最大传输单元（默认：0，最大64KB）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwMaxTransUnit, 整数型, , 最大传输单元，最大64KB

    

.子程序 SetMaxMessageSize, , 公开, 设置最大数据包大小（默认：4096）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwMaxMessageSize, 整数型, , 最大数据包大小

    

.子程序 SetHandShakeTimeout, , 公开, 设置握手超时时间（毫秒，默认：5000）
    .参数 hClient, 整数型, , 服务句柄
    .参数 dwHandShakeTimeout, 整数型, , 握手超时时间

    

.子程序 IsNoDelay, 逻辑型, 公开, 检测是否开启 nodelay 模式
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 IsTurnoffCongestCtrl, 逻辑型, 公开, 检测是否关闭拥塞控制
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetFlushInterval, 整数型, 公开, 获取数据刷新间隔
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetResendByAcks, 整数型, 公开, 获取快速重传 ACK 跨越次数 
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetSendWndSize, 整数型, 公开, 获取发送窗口大小
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetRecvWndSize, 整数型, 公开, 获取接收窗口大小
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetMinRto, 整数型, 公开, 获取最小重传超时时间
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetFastLimit, 整数型, 公开, 获取快速握手次数限制
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetMaxTransUnit, 整数型, 公开, 获取最大传输单元
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetMaxMessageSize, 整数型, 公开, 获取最大数据包大小
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetHandShakeTimeout, 整数型, 公开, 获取握手超时时间
    .参数 hClient, 整数型, , 服务句柄

    

.子程序 GetWaitingSendMessageCount, 逻辑型, 公开, 获取等待发送包数量
    .参数 hClient, 整数型, , 服务句柄
    .参数 piCount, 整数型, 参考, 返回等待发送包数量

    

