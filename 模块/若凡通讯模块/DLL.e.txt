.版本 2

.DLL命令 Create_HP_TcpServer, 整数型, "./cJSON.dll", "Create_HP_TcpServer", 公开, 创建 HP_TcpServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpAgent, 整数型, "./cJSON.dll", "Create_HP_TcpAgent", 公开, 创建 HP_TcpAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpClient, 整数型, "./cJSON.dll", "Create_HP_TcpClient", 公开, 创建 HP_TcpClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPullServer, 整数型, "./cJSON.dll", "Create_HP_TcpPullServer", 公开, 创建 HP_TcpPullServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPullAgent, 整数型, "./cJSON.dll", "Create_HP_TcpPullAgent", 公开, 创建 HP_TcpPullAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPullClient, 整数型, "./cJSON.dll", "Create_HP_TcpPullClient", 公开, 创建 HP_TcpPullClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPackServer, 整数型, "./cJSON.dll", "Create_HP_TcpPackServer", 公开, 创建 HP_TcpPackServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPackAgent, 整数型, "./cJSON.dll", "Create_HP_TcpPackAgent", 公开, 创建 HP_TcpPackAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_TcpPackClient, 整数型, "./cJSON.dll", "Create_HP_TcpPackClient", 公开, 创建 HP_TcpPackClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpServer, 整数型, "./cJSON.dll", "Create_HP_UdpServer", 公开, 创建 HP_UdpServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpClient, 整数型, "./cJSON.dll", "Create_HP_UdpClient", 公开, 创建 HP_UdpClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpCast, 整数型, "./cJSON.dll", "Create_HP_UdpCast", 公开, 创建 HP_UdpCast 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpNode, 整数型, "./cJSON.dll", "Create_HP_UdpNode", 公开, 创建 HP_UdpNode 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpArqServer, 整数型, "./cJSON.dll", "Create_HP_UdpArqServer", 公开, 创建 HP_UdpArqServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_UdpArqClient, 整数型, "./cJSON.dll", "Create_HP_UdpArqClient", 公开, 创建 HP_UdpArqClient 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpServer, , "./cJSON.dll", "Destroy_HP_TcpServer", 公开, 销毁 HP_TcpServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_TcpAgent, , "./cJSON.dll", "Destroy_HP_TcpAgent", 公开, 销毁 HP_TcpAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_TcpClient, , "./cJSON.dll", "Destroy_HP_TcpClient", 公开, 销毁 HP_TcpClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_TcpPullServer, , "./cJSON.dll", "Destroy_HP_TcpPullServer", 公开, 销毁 HP_TcpPullServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_TcpPullAgent, , "./cJSON.dll", "Destroy_HP_TcpPullAgent", 公开, 销毁 HP_TcpPullAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_TcpPullClient, , "./cJSON.dll", "Destroy_HP_TcpPullClient", 公开, 销毁 HP_TcpPullClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_TcpPackServer, , "./cJSON.dll", "Destroy_HP_TcpPackServer", 公开, 销毁 HP_TcpPackServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_TcpPackAgent, , "./cJSON.dll", "Destroy_HP_TcpPackAgent", 公开, 销毁 HP_TcpPackAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_TcpPackClient, , "./cJSON.dll", "Destroy_HP_TcpPackClient", 公开, 销毁 HP_TcpPackClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_UdpServer, , "./cJSON.dll", "Destroy_HP_UdpServer", 公开, 销毁 HP_UdpServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_UdpClient, , "./cJSON.dll", "Destroy_HP_UdpClient", 公开, 销毁 HP_UdpClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_UdpCast, , "./cJSON.dll", "Destroy_HP_UdpCast", 公开, 销毁 HP_UdpCast 对象
    .参数 pCast, 整数型

.DLL命令 Destroy_HP_UdpNode, , "./cJSON.dll", "Destroy_HP_UdpNode", 公开, 销毁 HP_UdpNode 对象
    .参数 pNode, 整数型

.DLL命令 Destroy_HP_UdpArqServer, 整数型, "./cJSON.dll", "Destroy_HP_UdpArqServer", 公开, 销毁 HP_UdpArqServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_UdpArqClient, 整数型, "./cJSON.dll", "Destroy_HP_UdpArqClient", 公开, 销毁 HP_UdpArqClient 对象
    .参数 pClient, 整数型

.DLL命令 Create_HP_TcpServerListener, 整数型, "./cJSON.dll", "Create_HP_TcpServerListener", 公开, 创建 HP_TcpServerListener 对象

.DLL命令 Create_HP_TcpAgentListener, 整数型, "./cJSON.dll", "Create_HP_TcpAgentListener", 公开, 创建 HP_TcpAgentListener 对象

.DLL命令 Create_HP_TcpClientListener, 整数型, "./cJSON.dll", "Create_HP_TcpClientListener", 公开, 创建 HP_TcpClientListener 对象

.DLL命令 Create_HP_TcpPullServerListener, 整数型, "./cJSON.dll", "Create_HP_TcpPullServerListener", 公开, 创建 HP_TcpPullServerListener 对象

.DLL命令 Create_HP_TcpPullAgentListener, 整数型, "./cJSON.dll", "Create_HP_TcpPullAgentListener", 公开, 创建 HP_TcpPullAgentListener 对象

.DLL命令 Create_HP_TcpPullClientListener, 整数型, "./cJSON.dll", "Create_HP_TcpPullClientListener", 公开, 创建 HP_TcpPullClientListener 对象

.DLL命令 Create_HP_TcpPackServerListener, 整数型, "./cJSON.dll", "Create_HP_TcpPackServerListener", 公开, 创建 HP_TcpPackServerListener 对象

.DLL命令 Create_HP_TcpPackAgentListener, 整数型, "./cJSON.dll", "Create_HP_TcpPackAgentListener", 公开, 创建 HP_TcpPackAgentListener 对象

.DLL命令 Create_HP_TcpPackClientListener, 整数型, "./cJSON.dll", "Create_HP_TcpPackClientListener", 公开, 创建 HP_TcpPackClientListener 对象

.DLL命令 Create_HP_UdpServerListener, 整数型, "./cJSON.dll", "Create_HP_UdpServerListener", 公开, 创建 HP_UdpServerListener 对象

.DLL命令 Create_HP_UdpClientListener, 整数型, "./cJSON.dll", "Create_HP_UdpClientListener", 公开, 创建 HP_UdpClientListener 对象

.DLL命令 Create_HP_UdpCastListener, 整数型, "./cJSON.dll", "Create_HP_UdpCastListener", 公开, 创建 HP_UdpCastListener 对象

.DLL命令 Create_HP_UdpNodeListener, 整数型, "./cJSON.dll", "Create_HP_UdpNodeListener", 公开, 创建 HP_UdpNodeListener 对象

.DLL命令 Create_HP_UdpArqServerListener, 整数型, "./cJSON.dll", "Create_HP_UdpArqServerListener", 公开, 创建 HP_UdpArqServerListener 对象

.DLL命令 Create_HP_UdpArqClientListener, 整数型, "./cJSON.dll", "Create_HP_UdpArqClientListener", 公开, 创建 HP_UdpArqClientListener 对象

.DLL命令 Destroy_HP_TcpServerListener, , "./cJSON.dll", "Destroy_HP_TcpServerListener", 公开, 销毁 HP_TcpServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpAgentListener, , "./cJSON.dll", "Destroy_HP_TcpAgentListener", 公开, 销毁 HP_TcpAgentListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpClientListener, , "./cJSON.dll", "Destroy_HP_TcpClientListener", 公开, 销毁 HP_TcpClientListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPullServerListener, , "./cJSON.dll", "Destroy_HP_TcpPullServerListener", 公开, 销毁 HP_TcpPullServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPullAgentListener, , "./cJSON.dll", "Destroy_HP_TcpPullAgentListener", 公开, 销毁 HP_TcpPullAgentListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPullClientListener, , "./cJSON.dll", "Destroy_HP_TcpPullClientListener", 公开, 销毁 HP_TcpPullClientListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPackServerListener, , "./cJSON.dll", "Destroy_HP_TcpPackServerListener", 公开, 销毁 HP_TcpPackServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPackAgentListener, , "./cJSON.dll", "Destroy_HP_TcpPackAgentListener", 公开, 销毁 HP_TcpPackAgentListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_TcpPackClientListener, , "./cJSON.dll", "Destroy_HP_TcpPackClientListener", 公开, 销毁 HP_TcpPackClientListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpServerListener, , "./cJSON.dll", "Destroy_HP_UdpServerListener", 公开, 销毁 HP_UdpServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpClientListener, , "./cJSON.dll", "Destroy_HP_UdpClientListener", 公开, 销毁 HP_UdpClientListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpCastListener, , "./cJSON.dll", "Destroy_HP_UdpCastListener", 公开, 销毁 HP_UdpCastListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpNodeListener, , "./cJSON.dll", "Destroy_HP_UdpNodeListener", 公开, 销毁 HP_UdpNodeListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpArqServerListener, , "./cJSON.dll", "Destroy_HP_UdpArqServerListener", 公开, 销毁 HP_UdpArqServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_UdpArqClientListener, , "./cJSON.dll", "Destroy_HP_UdpArqClientListener", 公开, 销毁 HP_UdpArqClientListener  对象
    .参数 pListener, 整数型

.DLL命令 HP_Set_FN_Server_OnPrepareListen, , "./cJSON.dll", "HP_Set_FN_Server_OnPrepareListen", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnAccept, , "./cJSON.dll", "HP_Set_FN_Server_OnAccept", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnHandShake, , "./cJSON.dll", "HP_Set_FN_Server_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnSend, , "./cJSON.dll", "HP_Set_FN_Server_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnReceive, , "./cJSON.dll", "HP_Set_FN_Server_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnPullReceive, , "./cJSON.dll", "HP_Set_FN_Server_OnPullReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnClose, , "./cJSON.dll", "HP_Set_FN_Server_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Server_OnShutdown, , "./cJSON.dll", "HP_Set_FN_Server_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnPrepareConnect, , "./cJSON.dll", "HP_Set_FN_Agent_OnPrepareConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnConnect, , "./cJSON.dll", "HP_Set_FN_Agent_OnConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnHandShake, , "./cJSON.dll", "HP_Set_FN_Agent_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnSend, , "./cJSON.dll", "HP_Set_FN_Agent_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnReceive, , "./cJSON.dll", "HP_Set_FN_Agent_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnPullReceive, , "./cJSON.dll", "HP_Set_FN_Agent_OnPullReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnClose, , "./cJSON.dll", "HP_Set_FN_Agent_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Agent_OnShutdown, , "./cJSON.dll", "HP_Set_FN_Agent_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnPrepareConnect, , "./cJSON.dll", "HP_Set_FN_Client_OnPrepareConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnConnect, , "./cJSON.dll", "HP_Set_FN_Client_OnConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnHandShake, , "./cJSON.dll", "HP_Set_FN_Client_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnSend, , "./cJSON.dll", "HP_Set_FN_Client_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnReceive, , "./cJSON.dll", "HP_Set_FN_Client_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnPullReceive, , "./cJSON.dll", "HP_Set_FN_Client_OnPullReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_Client_OnClose, , "./cJSON.dll", "HP_Set_FN_Client_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_UdpNode_OnPrepareListen, , "./cJSON.dll", "HP_Set_FN_UdpNode_OnPrepareListen", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_UdpNode_OnSend, , "./cJSON.dll", "HP_Set_FN_UdpNode_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_UdpNode_OnReceive, , "./cJSON.dll", "HP_Set_FN_UdpNode_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_UdpNode_OnError, , "./cJSON.dll", "HP_Set_FN_UdpNode_OnError", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_UdpNode_OnShutdown, , "./cJSON.dll", "HP_Set_FN_UdpNode_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Server_Start, 逻辑型, "./cJSON.dll", "HP_Server_Start", 公开, 名称：启动通信组件 描述：启动服务端通信组件，启动完成后可开始接收客户端连接并收发数据,TRUE-- 成功,FALSE-- 失败，可通过 HP_Server_GetLastError() 获取错误代码,/
    .参数 pServer, 整数型
    .参数 lpszBindAddress, 文本型, , 监听地址
    .参数 usPort, 短整数型, , 监听端口

.DLL命令 HP_Server_Stop, 逻辑型, "./cJSON.dll", "HP_Server_Stop", 公开, 名称：关闭通信组件 描述：关闭服务端通信组件，关闭完成后断开所有客户端连接并释放所有资源,TRUE-- 成功,FALSE-- 失败，可通过 HP_Server_GetLastError() 获取错误代码,/
    .参数 pServer, 整数型

.DLL命令 HP_Server_Wait, 逻辑型, "./cJSON.dll", "HP_Server_Wait", 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 pServer, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

.DLL命令 HP_Server_Send, 逻辑型, "./cJSON.dll", "HP_Server_Send", 公开, 名称：发送数据 描述：向指定连接发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

.DLL命令 HP_Server_SendPart, 逻辑型, "./cJSON.dll", "HP_Server_SendPart", 公开, 名称：发送数据 描述：向指定连接发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

.DLL命令 HP_Server_SendPackets, 逻辑型, "./cJSON.dll", "HP_Server_SendPackets", 公开, 名称：发送多组数据 描述：向指定连接发送多组数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffers, WSABUF, 传址 数组, 发送缓冲区数组
    .参数 iCount, 整数型, , 发送缓冲区数目

.DLL命令 HP_Server_Disconnect, 逻辑型, "./cJSON.dll", "HP_Server_Disconnect", 公开, 名称：断开连接 描述：断开与某个客户端的连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Server_DisconnectLongConnections, 逻辑型, "./cJSON.dll", "HP_Server_DisconnectLongConnections", 公开, 名称：断开超时连接 描述：断开超过指定时长的连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwPeriod, 整数型, , 时长（毫秒）
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Server_DisconnectSilenceConnections, 逻辑型, "./cJSON.dll", "HP_Server_DisconnectSilenceConnections", 公开, 名称：断开静默连接 描述：断开超过指定时长的静默连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwPeriod, 整数型, , 时长（毫秒）
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Server_SetConnectionExtra, 逻辑型, "./cJSON.dll", "HP_Server_SetConnectionExtra", 公开, 名称：设置连接的附加数据 描述：是否为连接绑定附加数据或者绑定什么样的数据，均由应用程序只身决定,TRUE-- 成功,FALSE-- 失败（无效的连接 ID）,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pExtra, 整数型

.DLL命令 HP_Server_GetConnectionExtra, 逻辑型, "./cJSON.dll", "HP_Server_GetConnectionExtra", 公开, 名称：获取连接的附加数据 描述：是否为连接绑定附加数据或者绑定什么样的数据，均由应用程序只身决定,TRUE-- 成功,FALSE-- 失败（无效的连接 ID）,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 ppExtra, 整数型, 传址

.DLL命令 HP_Server_HasStarted, 逻辑型, "./cJSON.dll", "HP_Server_HasStarted", 公开, 检查通信组件是否已启动
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetState, 整数型, "./cJSON.dll", "HP_Server_GetState", 公开, 查看通信组件当前状态
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetLastError, 整数型, "./cJSON.dll", "HP_Server_GetLastError", 公开, 获取最近一次失败操作的错误代码
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetLastErrorDesc, 文本型, "./cJSON.dll", "HP_Server_GetLastErrorDesc", 公开, 获取最近一次失败操作的错误描述
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetPendingDataLength, 逻辑型, "./cJSON.dll", "HP_Server_GetPendingDataLength", 公开, 获取连接中未发出数据的长度
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 piPending, 整数型, 传址

.DLL命令 HP_Server_GetConnectionCount, 整数型, "./cJSON.dll", "HP_Server_GetConnectionCount", 公开, 获取客户端连接数
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetAllConnectionIDs, 逻辑型, "./cJSON.dll", "HP_Server_GetAllConnectionIDs", 公开, 获取所有连接的 HP_CONNID
    .参数 pServer, 整数型
    .参数 pIDs, 整数型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_Server_GetConnectPeriod, 逻辑型, "./cJSON.dll", "HP_Server_GetConnectPeriod", 公开, 获取某个客户端连接时长（毫秒）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 pdwPeriod, 整数型, 传址

.DLL命令 HP_Server_GetSilencePeriod, 逻辑型, "./cJSON.dll", "HP_Server_GetSilencePeriod", 公开, 获取某个连接静默时间（毫秒）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 pdwPeriod, 整数型, 传址

.DLL命令 HP_Server_GetListenAddress, 逻辑型, "./cJSON.dll", "HP_Server_GetListenAddress", 公开, 获取监听 Socket 的地址信息
    .参数 pServer, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Server_GetLocalAddress, 逻辑型, "./cJSON.dll", "HP_Server_GetLocalAddress", 公开, 获取某个连接的本地地址信息
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Server_GetRemoteAddress, 逻辑型, "./cJSON.dll", "HP_Server_GetRemoteAddress", 公开, 获取某个连接的远程地址信息
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Server_SetReuseAddressPolicy, , "./cJSON.dll", "HP_Server_SetReuseAddressPolicy", 公开, 设置地址重用选项
    .参数 pServer, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

.DLL命令 HP_Server_SetSendPolicy, , "./cJSON.dll", "HP_Server_SetSendPolicy", 公开, 设置数据发送策略
    .参数 pServer, 整数型
    .参数 enSendPolicy, 整数型

.DLL命令 HP_Server_SetOnSendSyncPolicy, , "./cJSON.dll", "HP_Server_SetOnSendSyncPolicy", 公开, 设置 OnSend 事件同步策略（默认：#OSSP_NONE，不同步）
    .参数 pServer, 整数型
    .参数 enSyncPolicy, 整数型, , #OSSP_ 开头常量

.DLL命令 HP_Server_SetFreeSocketObjLockTime, , "./cJSON.dll", "HP_Server_SetFreeSocketObjLockTime", 公开, 设置 Socket 缓存对象锁定时间（毫秒，在锁定期间该 Socket 缓存对象不能被获取使用）
    .参数 pServer, 整数型
    .参数 dwFreeSocketObjLockTime, 整数型

.DLL命令 HP_Server_SetFreeSocketObjPool, , "./cJSON.dll", "HP_Server_SetFreeSocketObjPool", 公开, 设置 Socket 缓存池大小（通常设置为平均并发连接数量的 1/3 - 1/2）
    .参数 pServer, 整数型
    .参数 dwFreeSocketObjPool, 整数型

.DLL命令 HP_Server_SetFreeBufferObjPool, , "./cJSON.dll", "HP_Server_SetFreeBufferObjPool", 公开, 设置内存块缓存池大小（通常设置为 Socket 缓存池大小的 2 - 3 倍）
    .参数 pServer, 整数型
    .参数 dwFreeBufferObjPool, 整数型

.DLL命令 HP_Server_SetFreeSocketObjHold, , "./cJSON.dll", "HP_Server_SetFreeSocketObjHold", 公开, 设置 Socket 缓存池回收阀值（通常设置为 Socket 缓存池大小的 3 倍）
    .参数 pServer, 整数型
    .参数 dwFreeSocketObjHold, 整数型

.DLL命令 HP_Server_SetFreeBufferObjHold, , "./cJSON.dll", "HP_Server_SetFreeBufferObjHold", 公开, 设置内存块缓存池回收阀值（通常设置为内存块缓存池大小的 3 倍）
    .参数 pServer, 整数型
    .参数 dwFreeBufferObjHold, 整数型

.DLL命令 HP_Server_SetMaxConnectionCount, , "./cJSON.dll", "HP_Server_SetMaxConnectionCount", 公开, 设置最大连接数（组件会根据设置值预分配内存，因此需要根据实际情况设置，不宜过大）
    .参数 pServer, 整数型
    .参数 dwMaxConnectionCount, 整数型

.DLL命令 HP_Server_SetWorkerThreadCount, , "./cJSON.dll", "HP_Server_SetWorkerThreadCount", 公开, 设置工作线程数量（通常设置为 2 * CPU + 2）
    .参数 pServer, 整数型
    .参数 dwWorkerThreadCount, 整数型

.DLL命令 HP_Server_SetMarkSilence, , "./cJSON.dll", "HP_Server_SetMarkSilence", 公开, 设置是否标记静默时间（设置为 TRUE 时 DisconnectSilenceConnections() 和 GetSilencePeriod() 才有效，默认：TRUE）
    .参数 pServer, 整数型
    .参数 bMarkSilence, 逻辑型

.DLL命令 HP_Server_GetReuseAddressPolicy, 整数型, "./cJSON.dll", "HP_Server_GetReuseAddressPolicy", 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetSendPolicy, 整数型, "./cJSON.dll", "HP_Server_GetSendPolicy", 公开, 获取数据发送策略
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetOnSendSyncPolicy, 整数型, "./cJSON.dll", "HP_Server_GetOnSendSyncPolicy", 公开, 获取 OnSend 事件同步策略,返回#OSSP_ 开头常量
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetFreeSocketObjLockTime, 整数型, "./cJSON.dll", "HP_Server_GetFreeSocketObjLockTime", 公开, 获取 Socket 缓存对象锁定时间
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetFreeSocketObjPool, 整数型, "./cJSON.dll", "HP_Server_GetFreeSocketObjPool", 公开, 获取 Socket 缓存池大小
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetFreeBufferObjPool, 整数型, "./cJSON.dll", "HP_Server_GetFreeBufferObjPool", 公开, 获取内存块缓存池大小
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetFreeSocketObjHold, 整数型, "./cJSON.dll", "HP_Server_GetFreeSocketObjHold", 公开, 获取 Socket 缓存池回收阀值
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetFreeBufferObjHold, 整数型, "./cJSON.dll", "HP_Server_GetFreeBufferObjHold", 公开, 获取内存块缓存池回收阀值
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetMaxConnectionCount, 整数型, "./cJSON.dll", "HP_Server_GetMaxConnectionCount", 公开, 获取最大连接数
    .参数 pServer, 整数型

.DLL命令 HP_Server_GetWorkerThreadCount, 整数型, "./cJSON.dll", "HP_Server_GetWorkerThreadCount", 公开, 获取工作线程数量
    .参数 pServer, 整数型

.DLL命令 HP_Server_IsMarkSilence, 逻辑型, "./cJSON.dll", "HP_Server_IsMarkSilence", 公开, 检测是否标记静默时间
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_SendSmallFile, 逻辑型, "./cJSON.dll", "HP_TcpServer_SendSmallFile", 公开, 名称：发送小文件 描述：向指定连接发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 pHead, WSABUF, , 头部附加数据
    .参数 pTail, WSABUF, , 尾部附加数据

.DLL命令 HP_TcpServer_SetSocketListenQueue, , "./cJSON.dll", "HP_TcpServer_SetSocketListenQueue", 公开, 设置监听 Socket 的等候队列大小（根据并发连接数量调整设置）
    .参数 pServer, 整数型
    .参数 dwSocketListenQueue, 整数型

.DLL命令 HP_TcpServer_SetAcceptSocketCount, , "./cJSON.dll", "HP_TcpServer_SetAcceptSocketCount", 公开, 设置 Accept 预投递数量（根据负载调整设置，Accept 预投递数量越大则支持的并发连接请求越多）
    .参数 pServer, 整数型
    .参数 dwAcceptSocketCount, 整数型

.DLL命令 HP_TcpServer_SetSocketBufferSize, , "./cJSON.dll", "HP_TcpServer_SetSocketBufferSize", 公开, 设置通信数据缓冲区大小（根据平均通信数据包大小调整设置，通常设置为 1024 的倍数）
    .参数 pServer, 整数型
    .参数 dwSocketBufferSize, 整数型

.DLL命令 HP_TcpServer_SetKeepAliveTime, , "./cJSON.dll", "HP_TcpServer_SetKeepAliveTime", 公开, 设置正常心跳包间隔（毫秒，0 则不发送心跳包，默认：60 * 1000）
    .参数 pServer, 整数型
    .参数 dwKeepAliveTime, 整数型

.DLL命令 HP_TcpServer_SetKeepAliveInterval, , "./cJSON.dll", "HP_TcpServer_SetKeepAliveInterval", 公开, 设置异常心跳包间隔（毫秒，0 不发送心跳包，，默认：20 * 1000，如果超过若干次 [默认：WinXP 5 次, Win7 10 次] 检测不到心跳确认包则认为已断线）
    .参数 pServer, 整数型
    .参数 dwKeepAliveInterval, 整数型

.DLL命令 HP_TcpServer_SetNoDelay, , "./cJSON.dll", "HP_TcpServer_SetNoDelay", 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 pServer, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 HP_TcpServer_GetAcceptSocketCount, 整数型, "./cJSON.dll", "HP_TcpServer_GetAcceptSocketCount", 公开, 获取 Accept 预投递数量
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_GetSocketBufferSize, 整数型, "./cJSON.dll", "HP_TcpServer_GetSocketBufferSize", 公开, 获取通信数据缓冲区大小
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_GetSocketListenQueue, 整数型, "./cJSON.dll", "HP_TcpServer_GetSocketListenQueue", 公开, 获取监听 Socket 的等候队列大小
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_GetKeepAliveTime, 整数型, "./cJSON.dll", "HP_TcpServer_GetKeepAliveTime", 公开, 获取正常心跳包间隔
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_GetKeepAliveInterval, 整数型, "./cJSON.dll", "HP_TcpServer_GetKeepAliveInterval", 公开, 获取异常心跳包间隔
    .参数 pServer, 整数型

.DLL命令 HP_TcpServer_IsNoDelay, 逻辑型, "./cJSON.dll", "HP_TcpServer_IsNoDelay", 公开, 检查是否开启 nodelay 模式
    .参数 pServer, 整数型

.DLL命令 HP_UdpServer_SetMaxDatagramSize, , "./cJSON.dll", "HP_UdpServer_SetMaxDatagramSize", 公开, 设置数据报文最大长度（建议在局域网环境下不超过 1472 字节，在广域网环境下不超过 548 字节）
    .参数 pServer, 整数型
    .参数 dwMaxDatagramSize, 整数型

.DLL命令 HP_UdpServer_GetMaxDatagramSize, 整数型, "./cJSON.dll", "HP_UdpServer_GetMaxDatagramSize", 公开, 获取数据报文最大长度
    .参数 pServer, 整数型

.DLL命令 HP_UdpServer_SetPostReceiveCount, , "./cJSON.dll", "HP_UdpServer_SetPostReceiveCount", 公开, 设置 Receive 预投递数量（根据负载调整设置，Receive 预投递数量越大则丢包概率越小）
    .参数 pServer, 整数型
    .参数 dwPostReceiveCount, 整数型

.DLL命令 HP_UdpServer_GetPostReceiveCount, 整数型, "./cJSON.dll", "HP_UdpServer_GetPostReceiveCount", 公开, 获取 Receive 预投递数量
    .参数 pServer, 整数型

.DLL命令 HP_UdpServer_SetDetectAttempts, , "./cJSON.dll", "HP_UdpServer_SetDetectAttempts", 公开, 设置监测包尝试次数（0 则不发送监测跳包，如果超过最大尝试次数则认为已断线）
    .参数 pServer, 整数型
    .参数 dwDetectAttempts, 整数型

.DLL命令 HP_UdpServer_SetDetectInterval, , "./cJSON.dll", "HP_UdpServer_SetDetectInterval", 公开, 设置监测包发送间隔（秒，0 不发送监测包）
    .参数 pServer, 整数型
    .参数 dwDetectInterval, 整数型

.DLL命令 HP_UdpServer_GetDetectAttempts, 整数型, "./cJSON.dll", "HP_UdpServer_GetDetectAttempts", 公开, 获取心跳检查次数
    .参数 pServer, 整数型

.DLL命令 HP_UdpServer_GetDetectInterval, 整数型, "./cJSON.dll", "HP_UdpServer_GetDetectInterval", 公开, 获取心跳检查间隔
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_SetNoDelay, , "./cJSON.dll", "HP_UdpArqServer_SetNoDelay", 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 pServer, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 HP_UdpArqServer_SetTurnoffCongestCtrl, , "./cJSON.dll", "HP_UdpArqServer_SetTurnoffCongestCtrl", 公开, 设置是否关闭拥塞控制（默认：FALSE，不关闭）
    .参数 pServer, 整数型
    .参数 bTurnOff, 逻辑型

.DLL命令 HP_UdpArqServer_SetFlushInterval, , "./cJSON.dll", "HP_UdpArqServer_SetFlushInterval", 公开, 设置数据刷新间隔（毫秒，默认：20）
    .参数 pServer, 整数型
    .参数 dwFlushInterval, 整数型

.DLL命令 HP_UdpArqServer_SetResendByAcks, , "./cJSON.dll", "HP_UdpArqServer_SetResendByAcks", 公开, 设置快速重传 ACK 跨越次数（默认：0，关闭快速重传）
    .参数 pServer, 整数型
    .参数 dwResendByAcks, 整数型

.DLL命令 HP_UdpArqServer_SetSendWndSize, , "./cJSON.dll", "HP_UdpArqServer_SetSendWndSize", 公开, 设置发送窗口大小（数据包数量，默认：128）
    .参数 pServer, 整数型
    .参数 dwSendWndSize, 整数型

.DLL命令 HP_UdpArqServer_SetRecvWndSize, , "./cJSON.dll", "HP_UdpArqServer_SetRecvWndSize", 公开, 设置接收窗口大小（数据包数量，默认：512）
    .参数 pServer, 整数型
    .参数 dwRecvWndSize, 整数型

.DLL命令 HP_UdpArqServer_SetMinRto, , "./cJSON.dll", "HP_UdpArqServer_SetMinRto", 公开, 设置最小重传超时时间（毫秒，默认：30）
    .参数 pServer, 整数型
    .参数 dwMinRto, 整数型

.DLL命令 HP_UdpArqServer_SetFastLimit, , "./cJSON.dll", "HP_UdpArqServer_SetFastLimit", 公开, 设置快速握手次数限制（默认：5，如果为 0 则不限制）
    .参数 pServer, 整数型
    .参数 dwFastLimit, 整数型

.DLL命令 HP_UdpArqServer_SetMaxTransUnit, , "./cJSON.dll", "HP_UdpArqServer_SetMaxTransUnit", 公开, 设置最大传输单元（默认：0，与 SetMaxDatagramSize() 一致）
    .参数 pServer, 整数型
    .参数 dwMaxTransUnit, 整数型

.DLL命令 HP_UdpArqServer_SetMaxMessageSize, , "./cJSON.dll", "HP_UdpArqServer_SetMaxMessageSize", 公开, 设置最大数据包大小（默认：4096）
    .参数 pServer, 整数型
    .参数 dwMaxMessageSize, 整数型

.DLL命令 HP_UdpArqServer_SetHandShakeTimeout, , "./cJSON.dll", "HP_UdpArqServer_SetHandShakeTimeout", 公开, 设置握手超时时间（毫秒，默认：5000）
    .参数 pServer, 整数型
    .参数 dwHandShakeTimeout, 整数型

.DLL命令 HP_UdpArqServer_IsNoDelay, 逻辑型, "./cJSON.dll", "HP_UdpArqServer_IsNoDelay", 公开, 检测是否开启 nodelay 模式 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_IsTurnoffCongestCtrl, 逻辑型, "./cJSON.dll", "HP_UdpArqServer_IsTurnoffCongestCtrl", 公开, 检测是否关闭拥塞控制 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetFlushInterval, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetFlushInterval", 公开, 获取数据刷新间隔 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetResendByAcks, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetResendByAcks", 公开, 获取快速重传 ACK 跨越次数 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetSendWndSize, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetSendWndSize", 公开, 获取发送窗口大小 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetRecvWndSize, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetRecvWndSize", 公开, 获取接收窗口大小 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetMinRto, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetMinRto", 公开, 获取最小重传超时时间 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetFastLimit, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetFastLimit", 公开, 获取快速握手次数限制
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetMaxTransUnit, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetMaxTransUnit", 公开, 获取最大传输单元 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetMaxMessageSize, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetMaxMessageSize", 公开, 获取最大数据包大小 
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetHandShakeTimeout, 整数型, "./cJSON.dll", "HP_UdpArqServer_GetHandShakeTimeout", 公开, 获取握手超时时间
    .参数 pServer, 整数型

.DLL命令 HP_UdpArqServer_GetWaitingSendMessageCount, 逻辑型, "./cJSON.dll", "HP_UdpArqServer_GetWaitingSendMessageCount", 公开, 获取等待发送包数量 
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 piCount, 整数型, 传址

.DLL命令 HP_Agent_Start, 逻辑型, "./cJSON.dll", "HP_Agent_Start", 公开, 名称：启动通信组件 描述：启动通信代理组件，启动完成后可开始连接远程服务器,TRUE-- 成功,FALSE-- 失败，可通过 HP_Agent_GetLastError() 获取错误代码,/
    .参数 pAgent, 整数型
    .参数 lpszBindAddress, 文本型, , 绑定地址（默认：nullptr，绑定 0.0.0.0）
    .参数 bAsyncConnect, 逻辑型, , 是否采用异步 Connect

.DLL命令 HP_Agent_Stop, 逻辑型, "./cJSON.dll", "HP_Agent_Stop", 公开, 名称：关闭通信组件 描述：关闭通信组件，关闭完成后断开所有连接并释放所有资源,TRUE-- 成功,FALSE-- 失败，可通过 HP_Agent_GetLastError() 获取错误代码,/
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_Wait, 逻辑型, "./cJSON.dll", "HP_Agent_Wait", 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 pAgent, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

.DLL命令 HP_Agent_Connect, 逻辑型, "./cJSON.dll", "HP_Agent_Connect", 公开, 名称：连接服务器 描述：连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件,TRUE-- 成功,FALSE-- 失败，可通过函数 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）

.DLL命令 HP_Agent_Send, 逻辑型, "./cJSON.dll", "HP_Agent_Send", 公开, 名称：发送数据 描述：向指定连接发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

.DLL命令 HP_Agent_SendPart, 逻辑型, "./cJSON.dll", "HP_Agent_SendPart", 公开, 名称：发送数据 描述：向指定连接发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

.DLL命令 HP_Agent_SendPackets, 逻辑型, "./cJSON.dll", "HP_Agent_SendPackets", 公开, 名称：发送多组数据 描述：向指定连接发送多组数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffers, WSABUF, 传址 数组, 发送缓冲区数组
    .参数 iCount, 整数型, , 发送缓冲区数目

.DLL命令 HP_Agent_Disconnect, 逻辑型, "./cJSON.dll", "HP_Agent_Disconnect", 公开, 名称：断开连接 描述：断开某个连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Agent_DisconnectLongConnections, 逻辑型, "./cJSON.dll", "HP_Agent_DisconnectLongConnections", 公开, 名称：断开超时连接 描述：断开超过指定时长的连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwPeriod, 整数型, , 时长（毫秒）
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Agent_DisconnectSilenceConnections, 逻辑型, "./cJSON.dll", "HP_Agent_DisconnectSilenceConnections", 公开, 名称：断开静默连接 描述：断开超过指定时长的静默连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwPeriod, 整数型, , 时长（毫秒）
    .参数 bForce, 逻辑型, , 是否强制断开连接

.DLL命令 HP_Agent_SetConnectionExtra, 逻辑型, "./cJSON.dll", "HP_Agent_SetConnectionExtra", 公开, 名称：设置连接的附加数据 描述：是否为连接绑定附加数据或者绑定什么样的数据，均由应用程序只身决定,TRUE-- 成功,FALSE-- 失败（无效的连接 ID）,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pExtra, 整数型

.DLL命令 HP_Agent_GetConnectionExtra, 逻辑型, "./cJSON.dll", "HP_Agent_GetConnectionExtra", 公开, 名称：获取连接的附加数据 描述：是否为连接绑定附加数据或者绑定什么样的数据，均由应用程序只身决定,TRUE-- 成功,FALSE-- 失败（无效的连接 ID）,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 ppExtra, 整数型, 传址

.DLL命令 HP_Agent_HasStarted, 逻辑型, "./cJSON.dll", "HP_Agent_HasStarted", 公开, 检查通信组件是否已启动
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetState, 整数型, "./cJSON.dll", "HP_Agent_GetState", 公开, 查看通信组件当前状态
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetConnectionCount, 整数型, "./cJSON.dll", "HP_Agent_GetConnectionCount", 公开, 获取连接数
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetAllConnectionIDs, 逻辑型, "./cJSON.dll", "HP_Agent_GetAllConnectionIDs", 公开, 获取所有连接的 HP_CONNID
    .参数 pAgent, 整数型
    .参数 pIDs, 整数型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_Agent_GetConnectPeriod, 逻辑型, "./cJSON.dll", "HP_Agent_GetConnectPeriod", 公开, 获取某个连接时长（毫秒）
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 pdwPeriod, 整数型, 传址

.DLL命令 HP_Agent_GetSilencePeriod, 逻辑型, "./cJSON.dll", "HP_Agent_GetSilencePeriod", 公开, 获取某个连接静默时间（毫秒）
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 pdwPeriod, 整数型, 传址

.DLL命令 HP_Agent_GetLocalAddress, 逻辑型, "./cJSON.dll", "HP_Agent_GetLocalAddress", 公开, 获取某个连接的本地地址信息
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Agent_GetRemoteAddress, 逻辑型, "./cJSON.dll", "HP_Agent_GetRemoteAddress", 公开, 获取某个连接的远程地址信息
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Agent_GetRemoteHost, 逻辑型, "./cJSON.dll", "HP_Agent_GetRemoteHost", 公开, 获取某个连接的远程主机信息
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszHost, 文本型
    .参数 piHostLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Agent_GetLastError, 整数型, "./cJSON.dll", "HP_Agent_GetLastError", 公开, 获取最近一次失败操作的错误代码
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetLastErrorDesc, 文本型, "./cJSON.dll", "HP_Agent_GetLastErrorDesc", 公开, 获取最近一次失败操作的错误描述
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetPendingDataLength, 逻辑型, "./cJSON.dll", "HP_Agent_GetPendingDataLength", 公开, 获取连接中未发出数据的长度
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 piPending, 整数型, 传址

.DLL命令 HP_Agent_SetSendPolicy, , "./cJSON.dll", "HP_Agent_SetSendPolicy", 公开, 设置数据发送策略
    .参数 pAgent, 整数型
    .参数 enSendPolicy, 整数型

.DLL命令 HP_Agent_SetOnSendSyncPolicy, , "./cJSON.dll", "HP_Agent_SetOnSendSyncPolicy", 公开, 设置 OnSend 事件同步策略（默认：#OSSP_NONE，不同步）
    .参数 pAgent, 整数型
    .参数 enSyncPolicy, 整数型, , #OSSP_ 开头常量

.DLL命令 HP_Agent_SetFreeSocketObjLockTime, , "./cJSON.dll", "HP_Agent_SetFreeSocketObjLockTime", 公开, 设置 Socket 缓存对象锁定时间（毫秒，在锁定期间该 Socket 缓存对象不能被获取使用）
    .参数 pAgent, 整数型
    .参数 dwFreeSocketObjLockTime, 整数型

.DLL命令 HP_Agent_SetFreeSocketObjPool, , "./cJSON.dll", "HP_Agent_SetFreeSocketObjPool", 公开, 设置 Socket 缓存池大小（通常设置为平均并发连接数量的 1/3 - 1/2）
    .参数 pAgent, 整数型
    .参数 dwFreeSocketObjPool, 整数型

.DLL命令 HP_Agent_SetFreeBufferObjPool, , "./cJSON.dll", "HP_Agent_SetFreeBufferObjPool", 公开, 设置内存块缓存池大小（通常设置为 Socket 缓存池大小的 2 - 3 倍）
    .参数 pAgent, 整数型
    .参数 dwFreeBufferObjPool, 整数型

.DLL命令 HP_Agent_SetFreeSocketObjHold, , "./cJSON.dll", "HP_Agent_SetFreeSocketObjHold", 公开, 设置 Socket 缓存池回收阀值（通常设置为 Socket 缓存池大小的 3 倍）
    .参数 pAgent, 整数型
    .参数 dwFreeSocketObjHold, 整数型

.DLL命令 HP_Agent_SetFreeBufferObjHold, , "./cJSON.dll", "HP_Agent_SetFreeBufferObjHold", 公开, 设置内存块缓存池回收阀值（通常设置为内存块缓存池大小的 3 倍）
    .参数 pAgent, 整数型
    .参数 dwFreeBufferObjHold, 整数型

.DLL命令 HP_Agent_SetMaxConnectionCount, , "./cJSON.dll", "HP_Agent_SetMaxConnectionCount", 公开, 设置最大连接数（组件会根据设置值预分配内存，因此需要根据实际情况设置，不宜过大）
    .参数 pAgent, 整数型
    .参数 dwMaxConnectionCount, 整数型

.DLL命令 HP_Agent_SetWorkerThreadCount, , "./cJSON.dll", "HP_Agent_SetWorkerThreadCount", 公开, 设置工作线程数量（通常设置为 2 * CPU + 2）
    .参数 pAgent, 整数型
    .参数 dwWorkerThreadCount, 整数型

.DLL命令 HP_Agent_SetMarkSilence, , "./cJSON.dll", "HP_Agent_SetMarkSilence", 公开, 设置是否标记静默时间（设置为 TRUE 时 DisconnectSilenceConnections() 和 GetSilencePeriod() 才有效，默认：TRUE）
    .参数 pAgent, 整数型
    .参数 bMarkSilence, 逻辑型

.DLL命令 HP_Agent_GetReuseAddressPolicy, 整数型, "./cJSON.dll", "HP_Agent_GetReuseAddressPolicy", 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetSendPolicy, 整数型, "./cJSON.dll", "HP_Agent_GetSendPolicy", 公开, 获取数据发送策略
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetOnSendSyncPolicy, 整数型, "./cJSON.dll", "HP_Agent_GetOnSendSyncPolicy", 公开, 获取 OnSend 事件同步策略,返回#OSSP_ 开头常量
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetFreeSocketObjLockTime, 整数型, "./cJSON.dll", "HP_Agent_GetFreeSocketObjLockTime", 公开, 获取 Socket 缓存对象锁定时间
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetFreeSocketObjPool, 整数型, "./cJSON.dll", "HP_Agent_GetFreeSocketObjPool", 公开, 获取 Socket 缓存池大小
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetFreeBufferObjPool, 整数型, "./cJSON.dll", "HP_Agent_GetFreeBufferObjPool", 公开, 获取内存块缓存池大小
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetFreeSocketObjHold, 整数型, "./cJSON.dll", "HP_Agent_GetFreeSocketObjHold", 公开, 获取 Socket 缓存池回收阀值
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetFreeBufferObjHold, 整数型, "./cJSON.dll", "HP_Agent_GetFreeBufferObjHold", 公开, 获取内存块缓存池回收阀值
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetMaxConnectionCount, 整数型, "./cJSON.dll", "HP_Agent_GetMaxConnectionCount", 公开, 获取最大连接数
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_GetWorkerThreadCount, 整数型, "./cJSON.dll", "HP_Agent_GetWorkerThreadCount", 公开, 获取工作线程数量
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_IsMarkSilence, 逻辑型, "./cJSON.dll", "HP_Agent_IsMarkSilence", 公开, 检测是否标记静默时间
    .参数 pAgent, 整数型

.DLL命令 HP_TcpAgent_SendSmallFile, 逻辑型, "./cJSON.dll", "HP_TcpAgent_SendSmallFile", 公开, 名称：发送小文件 描述：向指定连接发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 pHead, WSABUF, , 头部附加数据
    .参数 pTail, WSABUF, , 尾部附加数据

.DLL命令 HP_TcpAgent_SetSocketBufferSize, , "./cJSON.dll", "HP_TcpAgent_SetSocketBufferSize", 公开, 设置通信数据缓冲区大小（根据平均通信数据包大小调整设置，通常设置为 1024 的倍数）
    .参数 pAgent, 整数型
    .参数 dwSocketBufferSize, 整数型

.DLL命令 HP_TcpAgent_SetKeepAliveTime, , "./cJSON.dll", "HP_TcpAgent_SetKeepAliveTime", 公开, 设置正常心跳包间隔（毫秒，0 则不发送心跳包，默认：60 * 1000）
    .参数 pAgent, 整数型
    .参数 dwKeepAliveTime, 整数型

.DLL命令 HP_TcpAgent_SetKeepAliveInterval, , "./cJSON.dll", "HP_TcpAgent_SetKeepAliveInterval", 公开, 设置异常心跳包间隔（毫秒，0 不发送心跳包，，默认：20 * 1000，如果超过若干次 [默认：WinXP 5 次, Win7 10 次] 检测不到心跳确认包则认为已断线）
    .参数 pAgent, 整数型
    .参数 dwKeepAliveInterval, 整数型

.DLL命令 HP_TcpAgent_SetNoDelay, , "./cJSON.dll", "HP_TcpAgent_SetNoDelay", 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 pAgent, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 HP_TcpAgent_GetSocketBufferSize, 整数型, "./cJSON.dll", "HP_TcpAgent_GetSocketBufferSize", 公开, 获取通信数据缓冲区大小
    .参数 pAgent, 整数型

.DLL命令 HP_TcpAgent_GetKeepAliveTime, 整数型, "./cJSON.dll", "HP_TcpAgent_GetKeepAliveTime", 公开, 获取正常心跳包间隔
    .参数 pAgent, 整数型

.DLL命令 HP_TcpAgent_GetKeepAliveInterval, 整数型, "./cJSON.dll", "HP_TcpAgent_GetKeepAliveInterval", 公开, 获取异常心跳包间隔
    .参数 pAgent, 整数型

.DLL命令 HP_TcpAgent_IsNoDelay, 逻辑型, "./cJSON.dll", "HP_TcpAgent_IsNoDelay", 公开, 检查是否开启 nodelay 模式
    .参数 pAgent, 整数型

.DLL命令 HP_Client_Start, 逻辑型, "./cJSON.dll", "HP_Client_Start", 公开, 名称：启动通信组件 描述：启动客户端通信组件并连接服务端，启动完成后可开始收发数据,TRUE-- 成功,FALSE-- 失败，可通过 HP_Client_GetLastError() 获取错误代码,/
    .参数 pClient, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 bAsyncConnect, 逻辑型, , 是否采用异步 Connect

.DLL命令 HP_Client_StartWithBindAddress, 逻辑型, "./cJSON.dll", "HP_Client_StartWithBindAddress", 公开, 名称：启动通信组件（并指定绑定地址） 描述：启动客户端通信组件并连接服务端，启动完成后可开始收发数据,TRUE-- 成功,FALSE-- 失败，可通过 HP_Client_GetLastError() 获取错误代码,/
    .参数 pClient, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 bAsyncConnect, 逻辑型, , 是否采用异步 Connect
    .参数 lpszBindAddress, 文本型, , 绑定地址（默认：nullptr，TcpClient/UdpClient -> 不执行绑定操作，UdpCast 绑定 -> 0.0.0.0）

.DLL命令 HP_Client_StartWithBindAddressAndLocalPort, 逻辑型, "./cJSON.dll", "HP_Client_StartWithBindAddressAndLocalPort", 公开, 启动客户端通信组件并连接服务端，启动完成后可开始收发数据。TRUE -- 成功，FALSE -- 失败，可通过 HP_Client_GetLastError() 获取错误代码
    .参数 pClient, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 bAsyncConnect, 逻辑型, , 是否采用异步 Connect
    .参数 lpszBindAddress, 文本型, , 绑定地址（默认：nullptr，TcpClient/UdpClient -> 不执行绑定操作，UdpCast 绑定 -> 0.0.0.0）
    .参数 usLocalPort, 整数型, , 本地端口（默认：0）

.DLL命令 HP_Client_Stop, 逻辑型, "./cJSON.dll", "HP_Client_Stop", 公开, 名称：关闭通信组件 描述：关闭客户端通信组件，关闭完成后断开与服务端的连接并释放所有资源,TRUE-- 成功,FALSE-- 失败，可通过 HP_Client_GetLastError() 获取错误代码,/
    .参数 pClient, 整数型

.DLL命令 HP_Client_Send, 逻辑型, "./cJSON.dll", "HP_Client_Send", 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

.DLL命令 HP_Client_SendPart, 逻辑型, "./cJSON.dll", "HP_Client_SendPart", 公开, 名称：发送数据 描述：向服务端发送数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pClient, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

.DLL命令 HP_Client_SendPackets, 逻辑型, "./cJSON.dll", "HP_Client_SendPackets", 公开, 名称：发送多组数据 描述：向服务端发送多组数据,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pClient, 整数型
    .参数 pBuffers, WSABUF, 传址 数组, 发送缓冲区数组
    .参数 iCount, 整数型, , 发送缓冲区数目

.DLL命令 HP_Client_SetExtra, , "./cJSON.dll", "HP_Client_SetExtra", 公开, 设置连接的附加数据
    .参数 pClient, 整数型
    .参数 pExtra, 整数型

.DLL命令 HP_Client_GetExtra, 整数型, "./cJSON.dll", "HP_Client_GetExtra", 公开, 获取连接的附加数据
    .参数 pClient, 整数型

.DLL命令 HP_Client_HasStarted, 逻辑型, "./cJSON.dll", "HP_Client_HasStarted", 公开, 检查通信组件是否已启动
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetState, 整数型, "./cJSON.dll", "HP_Client_GetState", 公开, 查看通信组件当前状态
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetLastError, 整数型, "./cJSON.dll", "HP_Client_GetLastError", 公开, 获取最近一次失败操作的错误代码
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetLastErrorDesc, 文本型, "./cJSON.dll", "HP_Client_GetLastErrorDesc", 公开, 获取最近一次失败操作的错误描述
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetConnectionID, 整数型, "./cJSON.dll", "HP_Client_GetConnectionID", 公开, 获取该组件对象的连接 ID
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetLocalAddress, 逻辑型, "./cJSON.dll", "HP_Client_GetLocalAddress", 公开, 获取 Client Socket 的地址信息
    .参数 pClient, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Client_GetRemoteHost, 逻辑型, "./cJSON.dll", "HP_Client_GetRemoteHost", 公开, 获取连接的远程主机信息
    .参数 pClient, 整数型
    .参数 lpszHost, 文本型
    .参数 piHostLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_Client_GetPendingDataLength, 逻辑型, "./cJSON.dll", "HP_Client_GetPendingDataLength", 公开, 获取连接中未发出数据的长度
    .参数 pClient, 整数型
    .参数 piPending, 整数型, 传址

.DLL命令 HP_Client_SetFreeBufferPoolSize, , "./cJSON.dll", "HP_Client_SetFreeBufferPoolSize", 公开, 设置内存块缓存池大小（通常设置为 -> PUSH 模型：5 - 10；PULL 模型：10 - 20 ）
    .参数 pClient, 整数型
    .参数 dwFreeBufferPoolSize, 整数型

.DLL命令 HP_Client_SetFreeBufferPoolHold, , "./cJSON.dll", "HP_Client_SetFreeBufferPoolHold", 公开, 设置内存块缓存池回收阀值（通常设置为内存块缓存池大小的 3 倍）
    .参数 pClient, 整数型
    .参数 dwFreeBufferPoolHold, 整数型

.DLL命令 HP_Client_GetReuseAddressPolicy, 整数型, "./cJSON.dll", "HP_Client_GetReuseAddressPolicy", 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetFreeBufferPoolSize, 整数型, "./cJSON.dll", "HP_Client_GetFreeBufferPoolSize", 公开, 获取内存块缓存池大小
    .参数 pClient, 整数型

.DLL命令 HP_Client_GetFreeBufferPoolHold, 整数型, "./cJSON.dll", "HP_Client_GetFreeBufferPoolHold", 公开, 获取内存块缓存池回收阀值
    .参数 pClient, 整数型

.DLL命令 HP_TcpClient_SendSmallFile, 逻辑型, "./cJSON.dll", "HP_TcpClient_SendSmallFile", 公开, 名称：发送小文件 描述：向服务端发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取 Windows 错误代码,/
    .参数 pClient, 整数型
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 pHead, WSABUF, , 头部附加数据
    .参数 pTail, WSABUF, , 尾部附加数据

.DLL命令 HP_TcpClient_SetSocketBufferSize, , "./cJSON.dll", "HP_TcpClient_SetSocketBufferSize", 公开, 设置通信数据缓冲区大小（根据平均通信数据包大小调整设置，通常设置为：(N * 1024) - sizeof(TBufferObj)）
    .参数 pClient, 整数型
    .参数 dwSocketBufferSize, 整数型

.DLL命令 HP_TcpClient_SetKeepAliveTime, , "./cJSON.dll", "HP_TcpClient_SetKeepAliveTime", 公开, 设置正常心跳包间隔（毫秒，0 则不发送心跳包，默认：60 * 1000）
    .参数 pClient, 整数型
    .参数 dwKeepAliveTime, 整数型

.DLL命令 HP_TcpClient_SetKeepAliveInterval, , "./cJSON.dll", "HP_TcpClient_SetKeepAliveInterval", 公开, 设置异常心跳包间隔（毫秒，0 不发送心跳包，，默认：20 * 1000，如果超过若干次 [默认：WinXP 5 次, Win7 10 次] 检测不到心跳确认包则认为已断线）
    .参数 pClient, 整数型
    .参数 dwKeepAliveInterval, 整数型

.DLL命令 HP_TcpClient_SetNoDelay, , "./cJSON.dll", "HP_TcpClient_SetNoDelay", 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 pClient, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 HP_TcpClient_GetSocketBufferSize, 整数型, "./cJSON.dll", "HP_TcpClient_GetSocketBufferSize", 公开, 获取通信数据缓冲区大小
    .参数 pClient, 整数型

.DLL命令 HP_TcpClient_GetKeepAliveTime, 整数型, "./cJSON.dll", "HP_TcpClient_GetKeepAliveTime", 公开, 获取正常心跳包间隔
    .参数 pClient, 整数型

.DLL命令 HP_TcpClient_GetKeepAliveInterval, 整数型, "./cJSON.dll", "HP_TcpClient_GetKeepAliveInterval", 公开, 获取异常心跳包间隔
    .参数 pClient, 整数型

.DLL命令 HP_TcpClient_IsNoDelay, 逻辑型, "./cJSON.dll", "HP_TcpClient_IsNoDelay", 公开
    .参数 pClient, 整数型

.DLL命令 HP_UdpClient_SetMaxDatagramSize, , "./cJSON.dll", "HP_UdpClient_SetMaxDatagramSize", 公开, 设置数据报文最大长度（建议在局域网环境下不超过 1472 字节，在广域网环境下不超过 548 字节）
    .参数 pClient, 整数型
    .参数 dwMaxDatagramSize, 整数型

.DLL命令 HP_UdpClient_GetMaxDatagramSize, 整数型, "./cJSON.dll", "HP_UdpClient_GetMaxDatagramSize", 公开, 获取数据报文最大长度
    .参数 pClient, 整数型

.DLL命令 HP_UdpClient_SetDetectAttempts, , "./cJSON.dll", "HP_UdpClient_SetDetectAttempts", 公开, 设置监测包尝试次数（0 则不发送监测跳包，如果超过最大尝试次数则认为已断线）
    .参数 pClient, 整数型
    .参数 dwDetectAttempts, 整数型

.DLL命令 HP_UdpClient_SetDetectInterval, , "./cJSON.dll", "HP_UdpClient_SetDetectInterval", 公开, 设置监测包发送间隔（秒，0 不发送监测包）
    .参数 pClient, 整数型
    .参数 dwDetectInterval, 整数型

.DLL命令 HP_UdpClient_GetDetectAttempts, 整数型, "./cJSON.dll", "HP_UdpClient_GetDetectAttempts", 公开, 获取心跳检查次数
    .参数 pClient, 整数型

.DLL命令 HP_UdpClient_GetDetectInterval, 整数型, "./cJSON.dll", "HP_UdpClient_GetDetectInterval", 公开, 获取心跳检查间隔
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_SetNoDelay, , "./cJSON.dll", "HP_UdpArqClient_SetNoDelay", 公开, 设置是否开启 nodelay 模式（默认：FALSE，不开启）
    .参数 pClient, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 HP_UdpArqClient_SetTurnoffCongestCtrl, , "./cJSON.dll", "HP_UdpArqClient_SetTurnoffCongestCtrl", 公开, 设置是否关闭拥塞控制（默认：FALSE，不关闭）
    .参数 pClient, 整数型
    .参数 bTurnOff, 逻辑型

.DLL命令 HP_UdpArqClient_SetFlushInterval, , "./cJSON.dll", "HP_UdpArqClient_SetFlushInterval", 公开, 设置数据刷新间隔（毫秒，默认：20）
    .参数 pClient, 整数型
    .参数 dwFlushInterval, 整数型

.DLL命令 HP_UdpArqClient_SetResendByAcks, , "./cJSON.dll", "HP_UdpArqClient_SetResendByAcks", 公开, 设置快速重传 ACK 跨越次数（默认：0，关闭快速重传）
    .参数 pClient, 整数型
    .参数 dwResendByAcks, 整数型

.DLL命令 HP_UdpArqClient_SetSendWndSize, , "./cJSON.dll", "HP_UdpArqClient_SetSendWndSize", 公开, 设置发送窗口大小（数据包数量，默认：128）
    .参数 pClient, 整数型
    .参数 dwSendWndSize, 整数型

.DLL命令 HP_UdpArqClient_SetRecvWndSize, , "./cJSON.dll", "HP_UdpArqClient_SetRecvWndSize", 公开, 设置接收窗口大小（数据包数量，默认：512）
    .参数 pClient, 整数型
    .参数 dwRecvWndSize, 整数型

.DLL命令 HP_UdpArqClient_SetMinRto, , "./cJSON.dll", "HP_UdpArqClient_SetMinRto", 公开, 设置最小重传超时时间（毫秒，默认：30）
    .参数 pClient, 整数型
    .参数 dwMinRto, 整数型

.DLL命令 HP_UdpArqClient_SetFastLimit, , "./cJSON.dll", "HP_UdpArqClient_SetFastLimit", 公开, 设置快速握手次数限制（默认：5，如果为 0 则不限制）
    .参数 pClient, 整数型
    .参数 dwFastLimit, 整数型

.DLL命令 HP_UdpArqClient_SetMaxTransUnit, , "./cJSON.dll", "HP_UdpArqClient_SetMaxTransUnit", 公开, 设置最大传输单元（默认：0，与 SetMaxDatagramSize() 一致）
    .参数 pClient, 整数型
    .参数 dwMaxTransUnit, 整数型

.DLL命令 HP_UdpArqClient_SetMaxMessageSize, , "./cJSON.dll", "HP_UdpArqClient_SetMaxMessageSize", 公开, 设置最大数据包大小（默认：4096）
    .参数 pClient, 整数型
    .参数 dwMaxMessageSize, 整数型

.DLL命令 HP_UdpArqClient_SetHandShakeTimeout, , "./cJSON.dll", "HP_UdpArqClient_SetHandShakeTimeout", 公开, 设置握手超时时间（毫秒，默认：5000）
    .参数 pClient, 整数型
    .参数 dwHandShakeTimeout, 整数型

.DLL命令 HP_UdpArqClient_IsNoDelay, 逻辑型, "./cJSON.dll", "HP_UdpArqClient_IsNoDelay", 公开, 检测是否开启 nodelay 模式
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_IsTurnoffCongestCtrl, 逻辑型, "./cJSON.dll", "HP_UdpArqClient_IsTurnoffCongestCtrl", 公开, 检测是否关闭拥塞控制
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetFlushInterval, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetFlushInterval", 公开, 获取数据刷新间隔v
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetResendByAcks, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetResendByAcks", 公开, 获取快速重传 ACK 跨越次数
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetSendWndSize, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetSendWndSize", 公开, 获取发送窗口大小
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetRecvWndSize, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetRecvWndSize", 公开, 获取接收窗口大小
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetMinRto, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetMinRto", 公开, 获取最小重传超时时间
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetFastLimit, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetFastLimit", 公开, 获取快速握手次数限制
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetMaxTransUnit, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetMaxTransUnit", 公开, 获取最大传输单元
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetMaxMessageSize, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetMaxMessageSize", 公开, 获取最大数据包大小
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetHandShakeTimeout, 整数型, "./cJSON.dll", "HP_UdpArqClient_GetHandShakeTimeout", 公开, 获取握手超时时间
    .参数 pClient, 整数型

.DLL命令 HP_UdpArqClient_GetWaitingSendMessageCount, 逻辑型, "./cJSON.dll", "HP_UdpArqClient_GetWaitingSendMessageCount", 公开, 获取等待发送包数量
    .参数 pClient, 整数型
    .参数 piCount, 整数型, 传址

.DLL命令 HP_UdpCast_SetMaxDatagramSize, , "./cJSON.dll", "HP_UdpCast_SetMaxDatagramSize", 公开, 设置数据报文最大长度（建议在局域网环境下不超过 1472 字节，在广域网环境下不超过 548 字节）
    .参数 pCast, 整数型
    .参数 dwMaxDatagramSize, 整数型

.DLL命令 HP_UdpCast_GetMaxDatagramSize, 整数型, "./cJSON.dll", "HP_UdpCast_GetMaxDatagramSize", 公开, 获取数据报文最大长度
    .参数 pCast, 整数型

.DLL命令 HP_UdpCast_GetRemoteAddress, 逻辑型, "./cJSON.dll", "HP_UdpCast_GetRemoteAddress", 公开, 获取当前数据报的远程地址信息（通常在 OnReceive 事件中调用）
    .参数 pCast, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 HP_UdpCast_SetCastMode, , "./cJSON.dll", "HP_UdpCast_SetCastMode", 公开, 设置传播模式（组播或广播）
    .参数 pCast, 整数型
    .参数 enCastMode, 整数型

.DLL命令 HP_UdpCast_GetCastMode, 整数型, "./cJSON.dll", "HP_UdpCast_GetCastMode", 公开, 获取传播模式
    .参数 pCast, 整数型

.DLL命令 HP_UdpCast_SetMultiCastTtl, , "./cJSON.dll", "HP_UdpCast_SetMultiCastTtl", 公开, 设置组播报文的 TTL（0 - 255）
    .参数 pCast, 整数型
    .参数 iMCTtl, 整数型

.DLL命令 HP_UdpCast_GetMultiCastTtl, 整数型, "./cJSON.dll", "HP_UdpCast_GetMultiCastTtl", 公开, 获取组播报文的 TTL
    .参数 pCast, 整数型

.DLL命令 HP_UdpCast_SetMultiCastLoop, , "./cJSON.dll", "HP_UdpCast_SetMultiCastLoop", 公开, 设置是否启用组播环路（TRUE or FALSE）
    .参数 pCast, 整数型
    .参数 bMCLoop, 逻辑型

.DLL命令 HP_UdpCast_IsMultiCastLoop, 逻辑型, "./cJSON.dll", "HP_UdpCast_IsMultiCastLoop", 公开, 检测是否启用组播环路
    .参数 pCast, 整数型

.DLL命令 HP_UdpNode_Start, 逻辑型, "./cJSON.dll", "HP_UdpNode_Start", 公开, 名称：启动通信组件 描述：启动 UDP 节点通信组件，启动完成后可开始收发数据
    .参数 pNode, 整数型
    .参数 lpszBindAddress, 文本型, , 绑定地址（默认：nullptr，绑定任意地址）
    .参数 usPort, 短整数型, , 本地端口（默认：0）

.DLL命令 HP_UdpNode_StartWithCast, 逻辑型, "./cJSON.dll", "HP_UdpNode_StartWithCast", 公开, 名称：启动通信组件 描述：启动 UDP 节点通信组件，启动完成后可开始收发数据
    .参数 pNode, 整数型
    .参数 lpszBindAddress, 文本型, , 绑定地址（默认：nullptr，绑定任意地址）
    .参数 usPort, 短整数型, , 本地端口（默认：0）
    .参数 enCastMode, 整数型, , 传播模式（默认：CM_UNICAST）
    .参数 lpszCastAddress, 文本型, , 传播地址（默认：nullptr，当 enCaseMode 为 CM_MULTICAST 或 CM_BROADCAST 时有效）

.DLL命令 HP_UdpNode_Stop, 逻辑型, "./cJSON.dll", "HP_UdpNode_Stop", 公开, 名称：关闭通信组件 描述：关闭 UDP 节点通信组件，关闭完成后释放所有资源
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_Wait, 逻辑型, "./cJSON.dll", "HP_UdpNode_Wait", 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 pNode, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

.DLL命令 HP_UdpNode_Send, 逻辑型, "./cJSON.dll", "HP_UdpNode_Send", 公开, 名称：发送数据 描述：向指定地址发送数据
    .参数 pNode, 整数型
    .参数 lpszRemoteAddress, 文本型, , 远程地址
    .参数 usRemotePort, 短整数型, , 远程端口
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

.DLL命令 HP_UdpNode_SendPart, 逻辑型, "./cJSON.dll", "HP_UdpNode_SendPart", 公开, 名称：发送数据 描述：向指定地址发送数据
    .参数 pNode, 整数型
    .参数 lpszRemoteAddress, 文本型, , 远程地址
    .参数 usRemotePort, 短整数型, , 远程端口
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

.DLL命令 HP_UdpNode_SendPackets, 逻辑型, "./cJSON.dll", "HP_UdpNode_SendPackets", 公开, 名称：发送多组数据 描述：向指定地址发送多组数据，把所有数据包组合成一个数据包发送（数据包的总长度不能大于设置的 UDP 包最大长度）
    .参数 pNode, 整数型
    .参数 lpszRemoteAddress, 文本型, , 远程地址
    .参数 usRemotePort, 短整数型, , 远程端口
    .参数 pBuffer, WSABUF, 数组, 发送缓冲区数组
    .参数 iCount, 整数型, , 发送缓冲区数目

.DLL命令 HP_UdpNode_SendCast, 逻辑型, "./cJSON.dll", "HP_UdpNode_SendCast", 公开, 名称：发送数据 描述：向传播地址发送数据
    .参数 pNode, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度

.DLL命令 HP_UdpNode_SendCastPart, 逻辑型, "./cJSON.dll", "HP_UdpNode_SendCastPart", 公开, 名称：发送数据 描述：向传播地址发送数据
    .参数 pNode, 整数型
    .参数 pBuffer, 整数型, , 发送缓冲区
    .参数 iLength, 整数型, , 发送缓冲区长度
    .参数 iOffset, 整数型, , 发送缓冲区指针偏移量

.DLL命令 HP_UdpNode_SendCastPackets, 逻辑型, "./cJSON.dll", "HP_UdpNode_SendCastPackets", 公开, 名称：发送多组数据 描述：向传播地址发送多组数据，把所有数据包组合成一个数据包发送（数据包的总长度不能大于设置的 UDP 包最大长度）
    .参数 pNode, 整数型
    .参数 pBuffer, WSABUF, 数组, 发送缓冲区数组
    .参数 iCount, 整数型, , 发送缓冲区数目

.DLL命令 HP_UdpNode_SetExtra, , "./cJSON.dll", "HP_UdpNode_SetExtra", 公开, 设置附加数据
    .参数 pNode, 整数型
    .参数 pExtra, 整数型

.DLL命令 HP_UdpNode_GetExtra, 整数型, "./cJSON.dll", "HP_UdpNode_GetExtra", 公开, 获取附加数据
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetState, 整数型, "./cJSON.dll", "HP_UdpNode_GetState", 公开, 检查通信组件是否已启动
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_HasStarted, 逻辑型, "./cJSON.dll", "HP_UdpNode_HasStarted", 公开, 查看通信组件当前状态
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetLastError, 整数型, "./cJSON.dll", "HP_UdpNode_GetLastError", 公开, 获取最近一次失败操作的错误代码
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetLastErrorDesc, 文本型, "./cJSON.dll", "HP_UdpNode_GetLastErrorDesc", 公开, 获取最近一次失败操作的错误描述
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetLocalAddress, 逻辑型, "./cJSON.dll", "HP_UdpNode_GetLocalAddress", 公开, 获取本节点地址
    .参数 pNode, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 整数型, 传址

.DLL命令 HP_UdpNode_GetCastAddress, 逻辑型, "./cJSON.dll", "HP_UdpNode_GetCastAddress", 公开, 获取本节点传播地址
    .参数 pNode, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 整数型, 传址

.DLL命令 HP_UdpNode_GetCastMode, 整数型, "./cJSON.dll", "HP_UdpNode_GetCastMode", 公开, 获取传播模式
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetPendingDataLength, 逻辑型, "./cJSON.dll", "HP_UdpNode_GetPendingDataLength", 公开, 获取未发出数据的长度
    .参数 pNode, 整数型
    .参数 piPending, 整数型, 传址

.DLL命令 HP_UdpNode_SetMaxDatagramSize, , "./cJSON.dll", "HP_UdpNode_SetMaxDatagramSize", 公开, 设置数据报文最大长度（建议在局域网环境下不超过 1432 字节，在广域网环境下不超过 548 字节）
    .参数 pNode, 整数型
    .参数 dwMaxDatagramSize, 整数型

.DLL命令 HP_UdpNode_GetMaxDatagramSize, 整数型, "./cJSON.dll", "HP_UdpNode_GetMaxDatagramSize", 公开, 获取数据报文最大长度
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetMultiCastTtl, , "./cJSON.dll", "HP_UdpNode_SetMultiCastTtl", 公开, 设置组播报文的 TTL（0 - 255）
    .参数 pNode, 整数型
    .参数 iMCTtl, 整数型

.DLL命令 HP_UdpNode_GetMultiCastTtl, 整数型, "./cJSON.dll", "HP_UdpNode_GetMultiCastTtl", 公开, 获取组播报文的 TTL
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetMultiCastLoop, , "./cJSON.dll", "HP_UdpNode_SetMultiCastLoop", 公开, 设置是否启用组播环路（TRUE or FALSE）
    .参数 pNode, 整数型
    .参数 bMCLoop, 逻辑型

.DLL命令 HP_UdpNode_IsMultiCastLoop, 逻辑型, "./cJSON.dll", "HP_UdpNode_IsMultiCastLoop", 公开, 检测是否启用组播环路
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetReuseAddressPolicy, , "./cJSON.dll", "HP_UdpNode_SetReuseAddressPolicy", 公开, 设置地址重用选项
    .参数 pNode, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

.DLL命令 HP_UdpNode_SetWorkerThreadCount, , "./cJSON.dll", "HP_UdpNode_SetWorkerThreadCount", 公开, 设置工作线程数量（通常设置为 2 * CPU + 2）
    .参数 pNode, 整数型
    .参数 dwWorkerThreadCount, 整数型

.DLL命令 HP_UdpNode_GetWorkerThreadCount, 整数型, "./cJSON.dll", "HP_UdpNode_GetWorkerThreadCount", 公开, 获取工作线程数量
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetPostReceiveCount, , "./cJSON.dll", "HP_UdpNode_SetPostReceiveCount", 公开, 设置 Receive 预投递数量（根据负载调整设置，Receive 预投递数量越大则丢包概率越小）
    .参数 pNode, 整数型
    .参数 dwPostReceiveCount, 整数型

.DLL命令 HP_UdpNode_GetPostReceiveCount, 整数型, "./cJSON.dll", "HP_UdpNode_GetPostReceiveCount", 公开, 获取 Receive 预投递数量
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetFreeBufferPoolSize, , "./cJSON.dll", "HP_UdpNode_SetFreeBufferPoolSize", 公开, 设置内存块缓存池大小
    .参数 pNode, 整数型
    .参数 dwFreeBufferPoolSize, 整数型

.DLL命令 HP_UdpNode_GetFreeBufferPoolSize, 整数型, "./cJSON.dll", "HP_UdpNode_GetFreeBufferPoolSize", 公开, 获取内存块缓存池大小
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_GetReuseAddressPolicy, 整数型, "./cJSON.dll", "HP_UdpNode_GetReuseAddressPolicy", 公开, 获取地址重用选项 #RAP_ 开头常量
    .参数 pNode, 整数型

.DLL命令 HP_UdpNode_SetFreeBufferPoolHold, , "./cJSON.dll", "HP_UdpNode_SetFreeBufferPoolHold", 公开, 设置内存块缓存池回收阀值
    .参数 pNode, 整数型
    .参数 dwFreeBufferPoolSize, 整数型

.DLL命令 HP_UdpNode_GetFreeBufferPoolHold, 整数型, "./cJSON.dll", "HP_UdpNode_GetFreeBufferPoolHold", 公开, 获取内存块缓存池回收阀值
    .参数 pNode, 整数型

.DLL命令 HP_TcpPullServer_Fetch, 整数型, "./cJSON.dll", "HP_TcpPullServer_Fetch", 公开, 名称：抓取数据 描述：用户通过该方法从 Socket 组件中抓取数据,En_HP_FetchResult,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , 抓取缓冲区
    .参数 iLength, 整数型, , 抓取数据长度

.DLL命令 HP_TcpPullServer_Peek, 整数型, "./cJSON.dll", "HP_TcpPullServer_Peek", 公开, 名称：窥探数据（不会移除缓冲区数据） 描述：用户通过该方法从 Socket 组件中窥探数据,En_HP_FetchResult,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , 窥探缓冲区
    .参数 iLength, 整数型, , 窥探数据长度

.DLL命令 HP_TcpPullAgent_Fetch, 整数型, "./cJSON.dll", "HP_TcpPullAgent_Fetch", 公开, 名称：抓取数据 描述：用户通过该方法从 Socket 组件中抓取数据,En_HP_FetchResult,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , 抓取缓冲区
    .参数 iLength, 整数型, , 抓取数据长度

.DLL命令 HP_TcpPullAgent_Peek, 整数型, "./cJSON.dll", "HP_TcpPullAgent_Peek", 公开, 名称：窥探数据（不会移除缓冲区数据） 描述：用户通过该方法从 Socket 组件中窥探数据,En_HP_FetchResult,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , 窥探缓冲区
    .参数 iLength, 整数型, , 窥探数据长度

.DLL命令 HP_TcpPullClient_Fetch, 整数型, "./cJSON.dll", "HP_TcpPullClient_Fetch", 公开, 名称：抓取数据 描述：用户通过该方法从 Socket 组件中抓取数据,En_HP_FetchResult,/
    .参数 pClient, 整数型
    .参数 pData, 整数型, , 抓取缓冲区
    .参数 iLength, 整数型, , 抓取数据长度

.DLL命令 HP_TcpPullClient_Peek, 整数型, "./cJSON.dll", "HP_TcpPullClient_Peek", 公开, 名称：窥探数据（不会移除缓冲区数据） 描述：用户通过该方法从 Socket 组件中窥探数据,En_HP_FetchResult,/
    .参数 pClient, 整数型
    .参数 pData, 整数型, , 窥探缓冲区
    .参数 iLength, 整数型, , 窥探数据长度

.DLL命令 HP_TcpPackServer_SetMaxPackSize, , "./cJSON.dll", "HP_TcpPackServer_SetMaxPackSize", 公开, 设置数据包最大长度（有效数据包最大长度不能超过 4194303/0x3FFFFF 字节，默认：262144/0x40000）
    .参数 pServer, 整数型
    .参数 dwMaxPackSize, 整数型

.DLL命令 HP_TcpPackServer_SetPackHeaderFlag, , "./cJSON.dll", "HP_TcpPackServer_SetPackHeaderFlag", 公开, 设置包头标识（有效包头标识取值范围 0 ~ 1023/0x3FF，当包头标识为 0 时不校验包头，默认：0）
    .参数 pServer, 整数型
    .参数 usPackHeaderFlag, 短整数型

.DLL命令 HP_TcpPackServer_GetMaxPackSize, 整数型, "./cJSON.dll", "HP_TcpPackServer_GetMaxPackSize", 公开, 获取数据包最大长度
    .参数 pServer, 整数型

.DLL命令 HP_TcpPackServer_GetPackHeaderFlag, 短整数型, "./cJSON.dll", "HP_TcpPackServer_GetPackHeaderFlag", 公开, 获取包头标识
    .参数 pServer, 整数型

.DLL命令 HP_TcpPackAgent_SetMaxPackSize, , "./cJSON.dll", "HP_TcpPackAgent_SetMaxPackSize", 公开, 设置数据包最大长度（有效数据包最大长度不能超过 4194303/0x3FFFFF 字节，默认：262144/0x40000）
    .参数 pAgent, 整数型
    .参数 dwMaxPackSize, 整数型

.DLL命令 HP_TcpPackAgent_SetPackHeaderFlag, , "./cJSON.dll", "HP_TcpPackAgent_SetPackHeaderFlag", 公开, 设置包头标识（有效包头标识取值范围 0 ~ 1023/0x3FF，当包头标识为 0 时不校验包头，默认：0）
    .参数 pAgent, 整数型
    .参数 usPackHeaderFlag, 短整数型

.DLL命令 HP_TcpPackAgent_GetMaxPackSize, 整数型, "./cJSON.dll", "HP_TcpPackAgent_GetMaxPackSize", 公开, 获取数据包最大长度
    .参数 pAgent, 整数型

.DLL命令 HP_TcpPackAgent_GetPackHeaderFlag, 短整数型, "./cJSON.dll", "HP_TcpPackAgent_GetPackHeaderFlag", 公开, 获取包头标识
    .参数 pAgent, 整数型

.DLL命令 HP_TcpPackClient_SetMaxPackSize, , "./cJSON.dll", "HP_TcpPackClient_SetMaxPackSize", 公开, 设置数据包最大长度（有效数据包最大长度不能超过 4194303/0x3FFFFF 字节，默认：262144/0x40000）
    .参数 pClient, 整数型
    .参数 dwMaxPackSize, 整数型

.DLL命令 HP_TcpPackClient_SetPackHeaderFlag, , "./cJSON.dll", "HP_TcpPackClient_SetPackHeaderFlag", 公开, 设置包头标识（有效包头标识取值范围 0 ~ 1023/0x3FF，当包头标识为 0 时不校验包头，默认：0）
    .参数 pClient, 整数型
    .参数 usPackHeaderFlag, 短整数型

.DLL命令 HP_TcpPackClient_GetMaxPackSize, 整数型, "./cJSON.dll", "HP_TcpPackClient_GetMaxPackSize", 公开, 获取数据包最大长度
    .参数 pClient, 整数型

.DLL命令 HP_TcpPackClient_GetPackHeaderFlag, 短整数型, "./cJSON.dll", "HP_TcpPackClient_GetPackHeaderFlag", 公开, 获取包头标识
    .参数 pClient, 整数型

.DLL命令 Create_HP_HttpServer, 整数型, "./cJSON.dll", "Create_HP_HttpServer", 公开, 创建 HP_HttpServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpAgent, 整数型, "./cJSON.dll", "Create_HP_HttpAgent", 公开, 创建 HP_HttpAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpClient, 整数型, "./cJSON.dll", "Create_HP_HttpClient", 公开, 创建 HP_HttpClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpSyncClient, 整数型, "./cJSON.dll", "Create_HP_HttpSyncClient", 公开, 创建 HP_HttpSyncClient 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_HttpServer, , "./cJSON.dll", "Destroy_HP_HttpServer", 公开, 销毁 HP_HttpServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_HttpAgent, , "./cJSON.dll", "Destroy_HP_HttpAgent", 公开, 销毁 HP_HttpAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_HttpClient, , "./cJSON.dll", "Destroy_HP_HttpClient", 公开, 销毁 HP_HttpClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_HttpSyncClient, , "./cJSON.dll", "Destroy_HP_HttpSyncClient", 公开, 销毁 HP_HttpSyncClient 对象
    .参数 pClient, 整数型

.DLL命令 Create_HP_HttpServerListener, 整数型, "./cJSON.dll", "Create_HP_HttpServerListener", 公开, 创建 HP_HttpServerListener 对象

.DLL命令 Create_HP_HttpAgentListener, 整数型, "./cJSON.dll", "Create_HP_HttpAgentListener", 公开, 创建 HP_HttpAgentListener 对象

.DLL命令 Create_HP_HttpClientListener, 整数型, "./cJSON.dll", "Create_HP_HttpClientListener", 公开, 创建 HP_HttpClientListener 对象

.DLL命令 Destroy_HP_HttpServerListener, , "./cJSON.dll", "Destroy_HP_HttpServerListener", 公开, 销毁 HP_HttpServerListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_HttpAgentListener, , "./cJSON.dll", "Destroy_HP_HttpAgentListener", 公开, 销毁 HP_HttpAgentListener 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_HttpClientListener, , "./cJSON.dll", "Destroy_HP_HttpClientListener", 公开, 销毁 HP_HttpClientListener 对象
    .参数 pListener, 整数型

.DLL命令 HP_Set_FN_HttpServer_OnMessageBegin, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnMessageBegin", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnRequestLine, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnRequestLine", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnHeader, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnHeadersComplete, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnHeadersComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnBody, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnChunkHeader, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnChunkHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnChunkComplete, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnChunkComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnUpgrade, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnUpgrade", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnParseError, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnParseError", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnWSMessageHeader, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnWSMessageHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnWSMessageBody, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnWSMessageBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnWSMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnWSMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnPrepareListen, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnPrepareListen", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnAccept, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnAccept", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnHandShake, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnReceive, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnSend, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnClose, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpServer_OnShutdown, , "./cJSON.dll", "HP_Set_FN_HttpServer_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnMessageBegin, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnMessageBegin", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnStatusLine, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnStatusLine", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnHeader, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnHeadersComplete, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnHeadersComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnBody, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnChunkHeader, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnChunkHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnChunkComplete, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnChunkComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnUpgrade, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnUpgrade", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnParseError, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnParseError", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnWSMessageHeader, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnWSMessageHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnWSMessageBody, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnWSMessageBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnWSMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnWSMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnPrepareConnect, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnPrepareConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnConnect, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnHandShake, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnReceive, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnSend, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnClose, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpAgent_OnShutdown, , "./cJSON.dll", "HP_Set_FN_HttpAgent_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnMessageBegin, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnMessageBegin", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnStatusLine, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnStatusLine", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnHeader, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnHeadersComplete, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnHeadersComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnBody, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnChunkHeader, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnChunkHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnChunkComplete, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnChunkComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnUpgrade, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnUpgrade", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnParseError, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnParseError", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnWSMessageHeader, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnWSMessageHeader", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnWSMessageBody, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnWSMessageBody", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnWSMessageComplete, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnWSMessageComplete", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnPrepareConnect, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnPrepareConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnConnect, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnConnect", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnHandShake, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnHandShake", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnReceive, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnReceive", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnSend, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnSend", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_HttpClient_OnClose, , "./cJSON.dll", "HP_Set_FN_HttpClient_OnClose", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_HttpServer_SendResponse, 逻辑型, "./cJSON.dll", "HP_HttpServer_SendResponse", 公开, 名称：回复请求 描述：向客户端回复 HTTP 请求,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 usStatusCode, 短整数型, , HTTP 状态码
    .参数 lpszDesc, 文本型, , HTTP 状态描述
    .参数 lpHeaders, TNVPair, 传址 数组, 回复请求头
    .参数 iHeaderCount, 整数型, , 回复请求头数量
    .参数 pData, 字节集, , 回复请求体
    .参数 iLength, 整数型, , 回复请求体长度

.DLL命令 HP_HttpServer_SendLocalFile, 逻辑型, "./cJSON.dll", "HP_HttpServer_SendLocalFile", 公开, 名称：发送本地文件 描述：向指定连接发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 usStatusCode, 短整数型, , HTTP 状态码
    .参数 lpszDesc, 文本型, , HTTP 状态描述
    .参数 lpHeaders, TNVPair, 传址 数组, 回复请求头
    .参数 iHeaderCount, 整数型, , 回复请求头数量

.DLL命令 HP_HttpServer_SendChunkData, 逻辑型, "./cJSON.dll", "HP_HttpServer_SendChunkData", 公开, 名称：发送 Chunked 数据分片 描述：向对端发送 Chunked 数据分片
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , Chunked 数据分片
    .参数 iLength, 整数型, , 数据分片长度（为 0 表示结束分片）
    .参数 lpszExtensions, 整数型, , 扩展属性（默认：nullptr）

.DLL命令 HP_HttpServer_SendWSMessage, 逻辑型, "./cJSON.dll", "HP_HttpServer_SendWSMessage", 公开, 名称：发送 WebSocket 消息 描述：向对端端发送 WebSocket 消息,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bFinal, 逻辑型, , 是否结束帧
    .参数 iReserved, 字节型, , RSV1/RSV2/RSV3 各 1 位
    .参数 iOperationCode, 字节型, , 操作码：0x0 - 0xF
    .参数 pData, 字节集, , 消息体数据缓冲区
    .参数 iLength, 整数型, , 消息体数据长度
    .参数 ullBodyLen, 长整数型, , 消息总长度

.DLL命令 HP_HttpServer_Release, 逻辑型, "./cJSON.dll", "HP_HttpServer_Release", 公开, 名称：释放连接 描述：把连接放入释放队列，等待某个时间（通过 SetReleaseDelay() 设置）关闭连接,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID

.DLL命令 HP_HttpServer_StartHttp, 逻辑型, "./cJSON.dll", "HP_HttpServer_StartHttp", 公开, 启动 HTTP 通信,当通信组件设置为非自动启动 HTTP 通信时，需要调用本方法启动 HTTP 通信,TRUE-- 成功,FALSE-- 失败,/
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接ID

.DLL命令 HP_HttpServer_SetHttpAutoStart, , "./cJSON.dll", "HP_HttpServer_SetHttpAutoStart", 公开, 设置 HTTP 启动方式（默认：TRUE，自动启动）
    .参数 pServer, 整数型
    .参数 bAutoStart, 逻辑型

.DLL命令 HP_HttpServer_IsHttpAutoStart, 逻辑型, "./cJSON.dll", "HP_HttpServer_IsHttpAutoStart", 公开, 获取 HTTP 启动方式
    .参数 pServer, 整数型

.DLL命令 HP_HttpServer_SetReleaseDelay, , "./cJSON.dll", "HP_HttpServer_SetReleaseDelay", 公开, 设置连接释放延时（默认：3000 毫秒）
    .参数 pServer, 整数型
    .参数 dwReleaseDelay, 整数型

.DLL命令 HP_HttpServer_GetReleaseDelay, 整数型, "./cJSON.dll", "HP_HttpServer_GetReleaseDelay", 公开, 获取连接释放延时
    .参数 pServer, 整数型

.DLL命令 HP_HttpServer_GetUrlFieldSet, 短整数型, "./cJSON.dll", "HP_HttpServer_GetUrlFieldSet", 公开, 获取请求行 URL 域掩码（URL 域参考：EnHttpUrlField）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetUrlField, 文本型, "./cJSON.dll", "HP_HttpServer_GetUrlField", 公开, 获取某个 URL 域值
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 enField, 整数型

.DLL命令 HP_HttpServer_GetMethod, 文本型, "./cJSON.dll", "HP_HttpServer_GetMethod", 公开, 获取请求方法
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_SetLocalVersion, , "./cJSON.dll", "HP_HttpServer_SetLocalVersion", 公开, 设置本地协议版本
    .参数 pServer, 整数型
    .参数 usVersion, 整数型

.DLL命令 HP_HttpServer_GetLocalVersion, 整数型, "./cJSON.dll", "HP_HttpServer_GetLocalVersion", 公开, 获取本地协议版本
    .参数 pServer, 整数型

.DLL命令 HP_HttpServer_IsUpgrade, 逻辑型, "./cJSON.dll", "HP_HttpServer_IsUpgrade", 公开, 检查是否升级协议
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_IsKeepAlive, 逻辑型, "./cJSON.dll", "HP_HttpServer_IsKeepAlive", 公开, 检查是否有 Keep-Alive 标识
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetVersion, 短整数型, "./cJSON.dll", "HP_HttpServer_GetVersion", 公开, 获取协议版本
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetHost, 文本型, "./cJSON.dll", "HP_HttpServer_GetHost", 公开, 获取主机
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetContentLength, 长整数型, "./cJSON.dll", "HP_HttpServer_GetContentLength", 公开, 获取内容长度
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetContentType, 文本型, "./cJSON.dll", "HP_HttpServer_GetContentType", 公开, 获取内容类型
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetContentEncoding, 文本型, "./cJSON.dll", "HP_HttpServer_GetContentEncoding", 公开, 获取内容编码
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetTransferEncoding, 文本型, "./cJSON.dll", "HP_HttpServer_GetTransferEncoding", 公开, 获取传输编码
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetUpgradeType, 整数型, "./cJSON.dll", "HP_HttpServer_GetUpgradeType", 公开, 获取协议升级类型
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpServer_GetParseErrorCode, 短整数型, "./cJSON.dll", "HP_HttpServer_GetParseErrorCode", 公开, 获取解析错误代码
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszErrorDesc, 整数型, 传址

.DLL命令 HP_HttpServer_GetHeader, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetHeader", 公开, 获取某个请求头（单值）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpServer_GetHeaders, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetHeaders", 公开, 获取某个请求头（多值）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpServer_GetAllHeaders, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetAllHeaders", 公开, 获取所有请求头
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpServer_GetAllHeaderNames, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetAllHeaderNames", 公开, 获取所有请求头名称
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpServer_GetCookie, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetCookie", 公开, 获取 Cookie
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpServer_GetAllCookies, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetAllCookies", 公开, 获取所有 Cookie
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpCookies, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpServer_GetWSMessageState, 逻辑型, "./cJSON.dll", "HP_HttpServer_GetWSMessageState", 公开, 获取当前 WebSocket 消息状态，传入 nullptr 则不获取相应字段
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 lpbFinal, 逻辑型, 传址
    .参数 lpiReserved, 字节型, 传址
    .参数 lpiOperationCode, 字节型, 传址
    .参数 lpszMask, 整数型, 传址
    .参数 lpullBodyLen, 长整数型, 传址
    .参数 lpullBodyRemain, 长整数型, 传址

.DLL命令 HP_HttpAgent_SendRequest, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendRequest", 公开, 名称：发送请求 描述：向服务端发送 HTTP 请求,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 lpszMethod, 文本型, , 请求方法
    .参数 lpszPath, 文本型, , 请求路径
    .参数 lpHeaders, TNVPair, 传址 数组, 请求头
    .参数 iHeaderCount, 整数型, , 请求头数量
    .参数 pData, 整数型
    .参数 iLength, 整数型, , 请求体长度

.DLL命令 HP_HttpAgent_SendLocalFile, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendLocalFile", 公开, 名称：发送本地文件 描述：向指定连接发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 lpszMethod, 文本型, , 请求方法
    .参数 lpszPath, 文本型, , 请求路径
    .参数 lpHeaders, TNVPair, 传址 数组, 请求头
    .参数 iHeaderCount, 整数型, , 请求头数量

.DLL命令 HP_HttpAgent_SendChunkData, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendChunkData", 公开, 名称：发送 Chunked 数据分片 描述：向对端发送 Chunked 数据分片
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pData, 整数型, , Chunked 数据分片
    .参数 iLength, 整数型, , 数据分片长度（为 0 表示结束分片）
    .参数 lpszExtensions, 整数型, , 扩展属性（默认：nullptr）

.DLL命令 HP_HttpAgent_SendPost, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendPost", 公开, 发送 POST 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 整数型
    .参数 iLength, 整数型

.DLL命令 HP_HttpAgent_SendPut, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendPut", 公开, 发送 PUT 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 整数型
    .参数 iLength, 整数型

.DLL命令 HP_HttpAgent_SendPatch, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendPatch", 公开, 发送 PATCH 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 整数型
    .参数 iLength, 整数型

.DLL命令 HP_HttpAgent_SendGet, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendGet", 公开, 发送 GET 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendDelete, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendDelete", 公开, 发送 DELETE 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendHead, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendHead", 公开, 发送 HEAD 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendTrace, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendTrace", 公开, 发送 TRACE 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendOptions, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendOptions", 公开, 发送 OPTIONS 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendConnect, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendConnect", 公开, 发送 CONNECT 请求
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszHost, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpAgent_SendWSMessage, 逻辑型, "./cJSON.dll", "HP_HttpAgent_SendWSMessage", 公开, 名称：发送 WebSocket 消息 描述：向对端端发送 WebSocket 消息,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bFinal, 逻辑型, , 是否结束帧
    .参数 iReserved, 字节型, , RSV1/RSV2/RSV3 各 1 位
    .参数 iOperationCode, 字节型, , 操作码：0x0 - 0xF
    .参数 lpszMask, 字节集, , 掩码（nullptr 或 4 字节掩码，如果为 nullptr 则没有掩码）
    .参数 pData, 字节集, , 消息体数据缓冲区
    .参数 iLength, 整数型, , 消息体数据长度
    .参数 ullBodyLen, 长整数型, , 消息总长度

.DLL命令 HP_HttpAgent_StartHttp, 逻辑型, "./cJSON.dll", "HP_HttpAgent_StartHttp", 公开, 启动 HTTP 通信,当通信组件设置为非自动启动 HTTP 通信时，需要调用本方法启动 HTTP 通信,TRUE-- 成功,FALSE-- 失败,/
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接ID

.DLL命令 HP_HttpAgent_SetHttpAutoStart, , "./cJSON.dll", "HP_HttpAgent_SetHttpAutoStart", 公开, 设置 HTTP 启动方式（默认：TRUE，自动启动）
    .参数 pAgent, 整数型
    .参数 bAutoStart, 逻辑型

.DLL命令 HP_HttpAgent_IsHttpAutoStart, 逻辑型, "./cJSON.dll", "HP_HttpAgent_IsHttpAutoStart", 公开, 获取 HTTP 启动方式
    .参数 pAgent, 整数型

.DLL命令 HP_HttpAgent_GetStatusCode, 短整数型, "./cJSON.dll", "HP_HttpAgent_GetStatusCode", 公开, 获取 HTTP 状态码
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_SetLocalVersion, , "./cJSON.dll", "HP_HttpAgent_SetLocalVersion", 公开, 设置本地协议版本
    .参数 pAgent, 整数型
    .参数 usVersion, 整数型

.DLL命令 HP_HttpAgent_GetLocalVersion, 整数型, "./cJSON.dll", "HP_HttpAgent_GetLocalVersion", 公开, 获取本地协议版本
    .参数 pAgent, 整数型

.DLL命令 HP_HttpAgent_IsUpgrade, 逻辑型, "./cJSON.dll", "HP_HttpAgent_IsUpgrade", 公开, 检查是否升级协议
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_IsKeepAlive, 逻辑型, "./cJSON.dll", "HP_HttpAgent_IsKeepAlive", 公开, 检查是否有 Keep-Alive 标识
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetVersion, 短整数型, "./cJSON.dll", "HP_HttpAgent_GetVersion", 公开, 获取协议版本
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetContentLength, 长整数型, "./cJSON.dll", "HP_HttpAgent_GetContentLength", 公开, 获取内容长度
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetContentType, 文本型, "./cJSON.dll", "HP_HttpAgent_GetContentType", 公开, 获取内容类型
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetContentEncoding, 文本型, "./cJSON.dll", "HP_HttpAgent_GetContentEncoding", 公开, 获取内容编码
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetTransferEncoding, 文本型, "./cJSON.dll", "HP_HttpAgent_GetTransferEncoding", 公开, 获取传输编码
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetUpgradeType, 整数型, "./cJSON.dll", "HP_HttpAgent_GetUpgradeType", 公开, 获取协议升级类型
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_HttpAgent_GetParseErrorCode, 短整数型, "./cJSON.dll", "HP_HttpAgent_GetParseErrorCode", 公开, 获取解析错误代码
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszErrorDesc, 整数型, 传址

.DLL命令 HP_HttpAgent_GetHeader, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetHeader", 公开, 获取某个请求头（单值）
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpAgent_GetHeaders, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetHeaders", 公开, 获取某个请求头（多值）
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpAgent_GetAllHeaders, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetAllHeaders", 公开, 获取所有请求头
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpAgent_GetAllHeaderNames, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetAllHeaderNames", 公开, 获取所有请求头名称
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpAgent_GetCookie, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetCookie", 公开, 获取 Cookie
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpAgent_GetAllCookies, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetAllCookies", 公开, 获取所有 Cookie
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpCookies, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpAgent_GetWSMessageState, 逻辑型, "./cJSON.dll", "HP_HttpAgent_GetWSMessageState", 公开, 获取当前 WebSocket 消息状态，传入 nullptr 则不获取相应字段
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 lpbFinal, 逻辑型, 传址
    .参数 lpiReserved, 字节型, 传址
    .参数 lpiOperationCode, 字节型, 传址
    .参数 lpszMask, 整数型, 传址
    .参数 lpullBodyLen, 长整数型, 传址
    .参数 lpullBodyRemain, 长整数型, 传址

.DLL命令 HP_HttpClient_SendRequest, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendRequest", 公开, 名称：发送请求 描述：向服务端发送 HTTP 请求,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型
    .参数 lpszMethod, 文本型, , 请求方法
    .参数 lpszPath, 文本型, , 请求路径
    .参数 lpHeaders, TNVPair, 传址 数组, 请求头
    .参数 iHeaderCount, 整数型, , 请求头数量
    .参数 pBody, 字节集, , 请求体
    .参数 iLength, 整数型, , 请求体长度

.DLL命令 HP_HttpClient_SendLocalFile, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendLocalFile", 公开, 名称：发送本地文件 描述：向指定连接发送 4096 KB 以下的小文件,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型
    .参数 lpszFileName, 文本型, , 文件路径
    .参数 lpszMethod, 文本型, , 请求方法
    .参数 lpszPath, 文本型, , 请求路径
    .参数 lpHeaders, TNVPair, 传址 数组, 请求头
    .参数 iHeaderCount, 整数型, , 请求头数量

.DLL命令 HP_HttpClient_SendChunkData, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendChunkData", 公开, 名称：发送 Chunked 数据分片 描述：向对端发送 Chunked 数据分片
    .参数 pClient, 整数型
    .参数 pData, 整数型, , Chunked 数据分片
    .参数 iLength, 整数型, , 数据分片长度（为 0 表示结束分片）
    .参数 lpszExtensions, 整数型, , 扩展属性（默认：nullptr）

.DLL命令 HP_HttpClient_SendPost, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendPost", 公开, 发送 POST 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 字节集
    .参数 iLength, 整数型

.DLL命令 HP_HttpClient_SendPut, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendPut", 公开, 发送 PUT 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 字节集
    .参数 iLength, 整数型

.DLL命令 HP_HttpClient_SendPatch, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendPatch", 公开, 发送 PATCH 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型
    .参数 pBody, 字节集
    .参数 iLength, 整数型

.DLL命令 HP_HttpClient_SendGet, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendGet", 公开, 发送 GET 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendDelete, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendDelete", 公开, 发送 DELETE 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendHead, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendHead", 公开, 发送 HEAD 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendTrace, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendTrace", 公开, 发送 TRACE 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendOptions, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendOptions", 公开, 发送 OPTIONS 请求
    .参数 pClient, 整数型
    .参数 lpszPath, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendConnect, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendConnect", 公开, 发送 CONNECT 请求
    .参数 pClient, 整数型
    .参数 lpszHost, 文本型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 iHeaderCount, 整数型

.DLL命令 HP_HttpClient_SendWSMessage, 逻辑型, "./cJSON.dll", "HP_HttpClient_SendWSMessage", 公开, 名称：发送 WebSocket 消息 描述：向对端端发送 WebSocket 消息,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型
    .参数 bFinal, 逻辑型, , 是否结束帧
    .参数 iReserved, 字节型, , RSV1/RSV2/RSV3 各 1 位
    .参数 iOperationCode, 字节型, , 操作码：0x0 - 0xF
    .参数 lpszMask, 字节集, , 掩码（nullptr 或 4 字节掩码，如果为 nullptr 则没有掩码）
    .参数 pData, 字节集, , 消息体数据缓冲区
    .参数 iLength, 整数型, , 消息体数据长度
    .参数 ullBodyLen, 长整数型, , 消息总长度

.DLL命令 HP_HttpClient_StartHttp, 逻辑型, "./cJSON.dll", "HP_HttpClient_StartHttp", 公开, 启动 HTTP 通信,当通信组件设置为非自动启动 HTTP 通信时，需要调用本方法启动 HTTP 通信,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_SetHttpAutoStart, , "./cJSON.dll", "HP_HttpClient_SetHttpAutoStart", 公开, 设置 HTTP 启动方式（默认：TRUE，自动启动）
    .参数 pClient, 整数型
    .参数 bAutoStart, 逻辑型

.DLL命令 HP_HttpClient_IsHttpAutoStart, 逻辑型, "./cJSON.dll", "HP_HttpClient_IsHttpAutoStart", 公开, 获取 HTTP 启动方式
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetStatusCode, 短整数型, "./cJSON.dll", "HP_HttpClient_GetStatusCode", 公开, 获取 HTTP 状态码
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_SetLocalVersion, , "./cJSON.dll", "HP_HttpClient_SetLocalVersion", 公开, 设置本地协议版本
    .参数 pClient, 整数型
    .参数 usVersion, 整数型

.DLL命令 HP_HttpClient_GetLocalVersion, 整数型, "./cJSON.dll", "HP_HttpClient_GetLocalVersion", 公开, 获取本地协议版本
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_IsUpgrade, 逻辑型, "./cJSON.dll", "HP_HttpClient_IsUpgrade", 公开, 检查是否升级协议
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_IsKeepAlive, 逻辑型, "./cJSON.dll", "HP_HttpClient_IsKeepAlive", 公开, 检查是否有 Keep-Alive 标识
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetVersion, 短整数型, "./cJSON.dll", "HP_HttpClient_GetVersion", 公开, 获取协议版本
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetContentLength, 长整数型, "./cJSON.dll", "HP_HttpClient_GetContentLength", 公开, 获取内容长度
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetContentType, 文本型, "./cJSON.dll", "HP_HttpClient_GetContentType", 公开, 获取内容类型
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetContentEncoding, 文本型, "./cJSON.dll", "HP_HttpClient_GetContentEncoding", 公开, 获取内容编码
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetTransferEncoding, 文本型, "./cJSON.dll", "HP_HttpClient_GetTransferEncoding", 公开, 获取传输编码
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetUpgradeType, 整数型, "./cJSON.dll", "HP_HttpClient_GetUpgradeType", 公开, 获取协议升级类型
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_GetParseErrorCode, 短整数型, "./cJSON.dll", "HP_HttpClient_GetParseErrorCode", 公开, 获取解析错误代码
    .参数 pClient, 整数型
    .参数 lpszErrorDesc, 整数型, 传址

.DLL命令 HP_HttpClient_GetHeader, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetHeader", 公开, 获取某个请求头（单值）
    .参数 pClient, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpClient_GetHeaders, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetHeaders", 公开, 获取某个请求头（多值）
    .参数 pClient, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpClient_GetAllHeaders, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetAllHeaders", 公开, 获取所有请求头
    .参数 pClient, 整数型
    .参数 lpHeaders, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpClient_GetAllHeaderNames, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetAllHeaderNames", 公开, 获取所有请求头名称
    .参数 pClient, 整数型
    .参数 lpszName, 文本型, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpClient_GetCookie, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetCookie", 公开, 获取 Cookie
    .参数 pClient, 整数型
    .参数 lpszName, 文本型
    .参数 lpszValue, 整数型, 传址

.DLL命令 HP_HttpClient_GetAllCookies, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetAllCookies", 公开, 获取所有 Cookie
    .参数 pClient, 整数型
    .参数 lpCookies, TNVPair, 传址 数组
    .参数 pdwCount, 整数型, 传址

.DLL命令 HP_HttpClient_GetWSMessageState, 逻辑型, "./cJSON.dll", "HP_HttpClient_GetWSMessageState", 公开, 获取当前 WebSocket 消息状态，传入 nullptr 则不获取相应字段
    .参数 pClient, 整数型
    .参数 lpbFinal, 逻辑型, 传址
    .参数 lpiReserved, 字节型, 传址
    .参数 lpiOperationCode, 字节型, 传址
    .参数 lpszMask, 整数型, 传址
    .参数 lpullBodyLen, 长整数型, 传址
    .参数 lpullBodyRemain, 长整数型, 传址

.DLL命令 HP_HttpSyncClient_OpenUrl, 逻辑型, "./cJSON.dll", "HP_HttpSyncClient_OpenUrl", 公开, 名称：发送 URL 请求 描述：向服务端发送 HTTP URL 请求,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型
    .参数 lpszMethod, 文本型, , 请求方法
    .参数 lpszUrl, 文本型, , 请求 URL
    .参数 lpHeaders, TNVPair, 传址 数组, 请求头
    .参数 iHeaderCount, 整数型, , 请求头数量
    .参数 pBody, 整数型, , 请求体
    .参数 iLength, 整数型, , 请求体长度
    .参数 bForceReconnect, 逻辑型, , 强制重新连接（默认：FALSE，当请求 URL 的主机和端口与现有连接一致时，重用现有连接）

.DLL命令 HP_HttpSyncClient_CleanupRequestResult, 逻辑型, "./cJSON.dll", "HP_HttpSyncClient_CleanupRequestResult", 公开, 名称：清除请求结果 描述：清除上一次请求的响应头和响应体等结果信息（该方法会在每次发送请求前自动调用）,TRUE-- 成功,FALSE-- 失败,/
    .参数 pClient, 整数型

.DLL命令 HP_HttpSyncClient_SetConnectTimeout, , "./cJSON.dll", "HP_HttpSyncClient_SetConnectTimeout", 公开, 设置连接超时（毫秒，0：系统默认超时，默认：5000）
    .参数 pClient, 整数型
    .参数 dwConnectTimeout, 整数型

.DLL命令 HP_HttpSyncClient_SetRequestTimeout, , "./cJSON.dll", "HP_HttpSyncClient_SetRequestTimeout", 公开, 设置请求超时（毫秒，0：无限等待，默认：10000）
    .参数 pClient, 整数型
    .参数 dwRequestTimeout, 整数型

.DLL命令 HP_HttpSyncClient_GetConnectTimeout, 整数型, "./cJSON.dll", "HP_HttpSyncClient_GetConnectTimeout", 公开, 获取连接超时
    .参数 pClient, 整数型

.DLL命令 HP_HttpSyncClient_GetRequestTimeout, 整数型, "./cJSON.dll", "HP_HttpSyncClient_GetRequestTimeout", 公开, 获取请求超时
    .参数 pClient, 整数型

.DLL命令 HP_HttpSyncClient_GetResponseBody, 逻辑型, "./cJSON.dll", "HP_HttpSyncClient_GetResponseBody", 公开, 获取响应体
    .参数 pClient, 整数型
    .参数 lpszBody, 整数型, 传址
    .参数 piLength, 整数型, 传址

.DLL命令 HP_GetHPSocketVersion, 整数型, "./cJSON.dll", "HP_GetHPSocketVersion", 公开, 获取 HPSocket 版本号（4 个字节分别为：主版本号，子版本号，修正版本号，构建编号）

.DLL命令 HP_GetSocketErrorDesc, 文本型, "./cJSON.dll", "HP_GetSocketErrorDesc", 公开, 获取错误描述文本
    .参数 enCode, 整数型

.DLL命令 SYS_GetLastError, 整数型, "./cJSON.dll", "SYS_GetLastError", 公开, 调用系统的 GetLastError() 方法获取系统错误代码

.DLL命令 SYS_WSAGetLastError, 整数型, "./cJSON.dll", "SYS_WSAGetLastError", 公开, 调用系统的 WSAGetLastError() 方法获取系统错误代码

.DLL命令 SYS_SetSocketOption, 整数型, "./cJSON.dll", "SYS_SetSocketOption", 公开, 调用系统的 setsockopt()
    .参数 sock, 整数型
    .参数 level, 整数型
    .参数 name, 整数型
    .参数 val, 整数型
    .参数 len, 整数型

.DLL命令 SYS_GetSocketOption, 整数型, "./cJSON.dll", "SYS_GetSocketOption", 公开, 调用系统的 getsockopt()
    .参数 sock, 整数型
    .参数 level, 整数型
    .参数 name, 整数型
    .参数 val, 整数型
    .参数 len, 整数型, 传址

.DLL命令 SYS_IoctlSocket, 整数型, "./cJSON.dll", "SYS_IoctlSocket", 公开, 调用系统的 ioctlsocket()
    .参数 sock, 整数型
    .参数 cmd, 长整数型
    .参数 arg, 长整数型, 传址

.DLL命令 SYS_WSAIoctl, 整数型, "./cJSON.dll", "SYS_WSAIoctl", 公开, 调用系统的 WSAIoctl()
    .参数 sock, 整数型
    .参数 dwIoControlCode, 整数型
    .参数 lpvInBuffer, 整数型
    .参数 cbInBuffer, 整数型
    .参数 lpvOutBuffer, 整数型
    .参数 cbOutBuffer, 整数型
    .参数 lpcbBytesReturned, 整数型

.DLL命令 SYS_SSO_NoDelay, 整数型, "./cJSON.dll", "SYS_SSO_NoDelay", 公开, 设置 socket 选项：IPPROTO_TCP -> TCP_NODELAY
    .参数 sock, 整数型
    .参数 bNoDelay, 逻辑型

.DLL命令 SYS_SSO_DontLinger, 整数型, "./cJSON.dll", "SYS_SSO_DontLinger", 公开, 设置 socket 选项：SOL_SOCKET -> SO_DONTLINGER
    .参数 sock, 整数型
    .参数 bDont, 逻辑型

.DLL命令 SYS_SSO_Linger, 整数型, "./cJSON.dll", "SYS_SSO_Linger", 公开, 设置 socket 选项：SOL_SOCKET -> SO_LINGER
    .参数 sock, 整数型
    .参数 l_onoff, 短整数型
    .参数 l_linger, 短整数型

.DLL命令 SYS_SSO_RecvBuffSize, 整数型, "./cJSON.dll", "SYS_SSO_RecvBuffSize", 公开, 设置 socket 选项：SOL_SOCKET -> SO_RCVBUF
    .参数 sock, 整数型
    .参数 size, 整数型

.DLL命令 SYS_SSO_SendBuffSize, 整数型, "./cJSON.dll", "SYS_SSO_SendBuffSize", 公开, 设置 socket 选项：SOL_SOCKET -> SO_SNDBUF
    .参数 sock, 整数型
    .参数 size, 整数型

.DLL命令 SYS_SSO_RecvTimeOut, 整数型, "./cJSON.dll", "SYS_SSO_RecvTimeOut", 公开, 设置 socket 选项：SOL_SOCKET -> SO_RCVTIMEO
    .参数 sock, 整数型
    .参数 ms, 整数型

.DLL命令 SYS_SSO_SendTimeOut, 整数型, "./cJSON.dll", "SYS_SSO_SendTimeOut", 公开, 设置 socket 选项：SOL_SOCKET -> SO_SNDTIMEO
    .参数 sock, 整数型
    .参数 ms, 整数型

.DLL命令 SYS_SSO_ReuseAddress, 整数型, "./cJSON.dll", "SYS_SSO_ReuseAddress", 公开, 设置 socket 选项：SOL_SOCKET -> SO_REUSEADDR
    .参数 sock, 整数型
    .参数 bReuse, 逻辑型

.DLL命令 SYS_GetSocketLocalAddress, 逻辑型, "./cJSON.dll", "SYS_GetSocketLocalAddress", 公开, 获取 SOCKET 本地地址信息
    .参数 socket, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 SYS_GetSocketRemoteAddress, 逻辑型, "./cJSON.dll", "SYS_GetSocketRemoteAddress", 公开, 获取 SOCKET 远程地址信息
    .参数 socket, 整数型
    .参数 lpszAddress, 文本型
    .参数 piAddressLen, 整数型, 传址
    .参数 pusPort, 短整数型, 传址

.DLL命令 SYS_EnumHostIPAddresses, 逻辑型, "./cJSON.dll", "SYS_EnumHostIPAddresses", 公开, 枚举主机 IP 地址
    .参数 lpszHost, 文本型
    .参数 enType, 整数型
    .参数 lpppIPAddr, 整数型, 传址
    .参数 piIPAddrCount, 整数型, 传址

.DLL命令 SYS_FreeHostIPAddresses, 逻辑型, "./cJSON.dll", "SYS_FreeHostIPAddresses", 公开, 释放 HP_LPTIPAddr*
    .参数 lppIPAddr, 整数型

.DLL命令 SYS_IsIPAddress, 逻辑型, "./cJSON.dll", "SYS_IsIPAddress", 公开, 检查字符串是否符合 IP 地址格式
    .参数 lpszAddress, 文本型
    .参数 penType, 整数型, 传址

.DLL命令 SYS_GetIPAddress, 逻辑型, "./cJSON.dll", "SYS_GetIPAddress", 公开, 通过主机名获取 IP 地址
    .参数 lpszHost, 文本型
    .参数 lpszIP, 文本型
    .参数 piIPLenth, 整数型, 传址
    .参数 penType, 整数型, 传址

.DLL命令 SYS_NToH64, 长整数型, "./cJSON.dll", "SYS_NToH64", 公开, 64 位网络字节序转主机字节序
    .参数 value, 长整数型

.DLL命令 SYS_HToN64, 长整数型, "./cJSON.dll", "SYS_HToN64", 公开, 64 位主机字节序转网络字节序
    .参数 value, 长整数型

.DLL命令 SYS_SwapEndian16, 短整数型, "./cJSON.dll", "SYS_SwapEndian16", 公开, 短整型高低字节交换
    .参数 value, 短整数型

.DLL命令 SYS_SwapEndian32, 整数型, "./cJSON.dll", "SYS_SwapEndian32", 公开, 长整型高低字节交换
    .参数 value, 整数型

.DLL命令 SYS_IsLittleEndian, 逻辑型, "./cJSON.dll", "SYS_IsLittleEndian", 公开, 检查是否小端字节序

.DLL命令 SYS_Malloc, 整数型, "./cJSON.dll", "SYS_Malloc", 公开, 分配内存
    .参数 size, 整数型

.DLL命令 SYS_Realloc, 整数型, "./cJSON.dll", "SYS_Realloc", 公开, 重新分配内存
    .参数 p, 整数型
    .参数 size, 整数型

.DLL命令 SYS_Free, 整数型, "./cJSON.dll", "SYS_Free", 公开, 释放内存
    .参数 p, 整数型

.DLL命令 SYS_Calloc, 整数型, "./cJSON.dll", "SYS_Calloc", 公开, 分配内存块
    .参数 number, 整数型
    .参数 size, 整数型

.DLL命令 SYS_Alloca, 整数型, "./cJSON.dll", "SYS_Alloca", 公开, 分配栈内存
    .参数 size, 整数型

.DLL命令 SYS_CodePageToUnicodeEx, 逻辑型, "./cJSON.dll", "SYS_CodePageToUnicodeEx", 公开, CP_XXX -> UNICODE
    .参数 iCodePage, 整数型
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToCodePageEx, 逻辑型, "./cJSON.dll", "SYS_UnicodeToCodePageEx", 公开, UNICODE -> CP_XXX
    .参数 iCodePage, 整数型
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_GbkToUnicodeEx, 逻辑型, "./cJSON.dll", "SYS_GbkToUnicodeEx", 公开, GBK -> UNICODE
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToGbkEx, 逻辑型, "./cJSON.dll", "SYS_UnicodeToGbkEx", 公开, UNICODE -> GBK
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_Utf8ToUnicodeEx, 逻辑型, "./cJSON.dll", "SYS_Utf8ToUnicodeEx", 公开, UTF8 -> UNICODE
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToUtf8Ex, 逻辑型, "./cJSON.dll", "SYS_UnicodeToUtf8Ex", 公开, UNICODE -> UTF8
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_GbkToUtf8Ex, 逻辑型, "./cJSON.dll", "SYS_GbkToUtf8Ex", 公开, GBK -> UTF8
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_Utf8ToGbkEx, 逻辑型, "./cJSON.dll", "SYS_Utf8ToGbkEx", 公开, UTF8 -> GBK
    .参数 szSrc, 整数型
    .参数 iSrcLength, 整数型
    .参数 szDest, 整数型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_CodePageToUnicode, 逻辑型, "./cJSON.dll", "SYS_CodePageToUnicode", 公开, CP_XXX -> UNICODE
    .参数 iCodePage, 整数型
    .参数 szSrc, 文本型
    .参数 szDest, 字节集
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToCodePage, 逻辑型, "./cJSON.dll", "SYS_UnicodeToCodePage", 公开, UNICODE -> CP_XXX
    .参数 iCodePage, 整数型
    .参数 szSrc, 字节集
    .参数 szDest, 文本型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_GbkToUnicode, 逻辑型, "./cJSON.dll", "SYS_GbkToUnicode", 公开, GBK -> UNICODE
    .参数 szSrc, 文本型
    .参数 szDest, 字节集
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToGbk, 逻辑型, "./cJSON.dll", "SYS_UnicodeToGbk", 公开, UNICODE -> GBK
    .参数 szSrc, 字节集
    .参数 szDest, 文本型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_Utf8ToUnicode, 逻辑型, "./cJSON.dll", "SYS_Utf8ToUnicode", 公开, UTF8 -> UNICODE
    .参数 szSrc, 文本型
    .参数 szDest, 字节集
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_UnicodeToUtf8, 逻辑型, "./cJSON.dll", "SYS_UnicodeToUtf8", 公开, UNICODE -> UTF8
    .参数 szSrc, 字节集
    .参数 szDest, 文本型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_GbkToUtf8, 逻辑型, "./cJSON.dll", "SYS_GbkToUtf8", 公开, GBK -> UTF8
    .参数 szSrc, 文本型
    .参数 szDest, 文本型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_Utf8ToGbk, 逻辑型, "./cJSON.dll", "SYS_Utf8ToGbk", 公开, UTF8 -> GBK
    .参数 szSrc, 文本型
    .参数 szDest, 文本型
    .参数 piDestLength, 整数型, 传址

.DLL命令 SYS_Compress, 整数型, "./cJSON.dll", "SYS_Compress", 公开, 普通压缩
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_CompressEx, 整数型, "./cJSON.dll", "SYS_CompressEx", 公开, 高级压缩（默认值：iLevel -> -1，iMethod -> 8，iWindowBits -> 15，iMemLevel -> 8，iStrategy -> 0）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址
    .参数 iLevel, 整数型
    .参数 iMethod, 整数型
    .参数 iWindowBits, 整数型
    .参数 iMemLevel, 整数型
    .参数 iStrategy, 整数型

.DLL命令 SYS_Uncompress, 整数型, "./cJSON.dll", "SYS_Uncompress", 公开, 普通解压
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_UncompressEx, 整数型, "./cJSON.dll", "SYS_UncompressEx", 公开, 高级解压（默认值：iWindowBits -> 15）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址
    .参数 iWindowBits, 整数型

.DLL命令 SYS_GuessCompressBound, 整数型, "./cJSON.dll", "SYS_GuessCompressBound", 公开, 推测压缩结果长度
    .参数 dwSrcLen, 整数型
    .参数 bGZip, 逻辑型

.DLL命令 SYS_GZipCompress, 整数型, "./cJSON.dll", "SYS_GZipCompress", 公开, Gzip 压缩
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_GZipUncompress, 整数型, "./cJSON.dll", "SYS_GZipUncompress", 公开, Gzip 解压
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_BrotliCompress, 整数型, "./cJSON.dll", "SYS_BrotliCompress", 公开, Brotli 压缩（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_BrotliCompressEx, 整数型, "./cJSON.dll", "SYS_BrotliCompress", 公开, Brotli 高级压缩（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址
    .参数 iQuality, 整数型, , 11 
    .参数 iWindow, 整数型, , 22
    .参数 iMode, 整数型, , 0

.DLL命令 SYS_BrotliUncompress, 整数型, "./cJSON.dll", "SYS_BrotliUncompress", 公开, Brotli 解压（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_BrotliGuessCompressBound, 整数型, "./cJSON.dll", "SYS_BrotliGuessCompressBound", 公开, Brotli 推测压缩结果长度
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_GZipGuessUncompressBound, 整数型, "./cJSON.dll", "SYS_GZipGuessUncompressBound", 公开, 推测 Gzip 解压结果长度（如果返回 0 或不合理值则说明输入内容并非有效的 Gzip 格式）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_GuessBase64EncodeBound, 整数型, "./cJSON.dll", "SYS_GuessBase64EncodeBound", 公开, 计算 Base64 编码后长度
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_GuessBase64DecodeBound, 整数型, "./cJSON.dll", "SYS_GuessBase64DecodeBound", 公开, 计算 Base64 解码后长度
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_Base64Encode, 整数型, "./cJSON.dll", "SYS_Base64Encode", 公开, Base64 编码（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_Base64Decode, 整数型, "./cJSON.dll", "SYS_Base64Decode", 公开, Base64 解码（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_GuessUrlEncodeBound, 整数型, "./cJSON.dll", "SYS_GuessUrlEncodeBound", 公开, 计算 URL 编码后长度
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_GuessUrlDecodeBound, 整数型, "./cJSON.dll", "SYS_GuessUrlDecodeBound", 公开, 计算 URL 解码后长度
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型

.DLL命令 SYS_UrlEncode, 整数型, "./cJSON.dll", "SYS_UrlEncode", 公开, URL 编码（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 SYS_UrlDecode, 整数型, "./cJSON.dll", "SYS_UrlDecode", 公开, URL 解码（返回值：0 -> 成功，-3 -> 输入数据不正确，-5 -> 输出缓冲区不足）
    .参数 lpszSrc, 整数型
    .参数 dwSrcLen, 整数型
    .参数 lpszDest, 整数型
    .参数 pdwDestLen, 整数型, 传址

.DLL命令 Create_HP_SSLServer, 整数型, "./cJSON.dll", "Create_HP_SSLServer", 公开, 创建 HP_SSLServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLAgent, 整数型, "./cJSON.dll", "Create_HP_SSLAgent", 公开, 创建 HP_SSLAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLClient, 整数型, "./cJSON.dll", "Create_HP_SSLClient", 公开, 创建 HP_SSLClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPullServer, 整数型, "./cJSON.dll", "Create_HP_SSLPullServer", 公开, 创建 HP_SSLPullServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPullAgent, 整数型, "./cJSON.dll", "Create_HP_SSLPullAgent", 公开, 创建 HP_SSLPullAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPullClient, 整数型, "./cJSON.dll", "Create_HP_SSLPullClient", 公开, 创建 HP_SSLPullClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPackServer, 整数型, "./cJSON.dll", "Create_HP_SSLPackServer", 公开, 创建 HP_SSLPackServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPackAgent, 整数型, "./cJSON.dll", "Create_HP_SSLPackAgent", 公开, 创建 HP_SSLPackAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_SSLPackClient, 整数型, "./cJSON.dll", "Create_HP_SSLPackClient", 公开, 创建 HP_SSLPackClient 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_SSLServer, , "./cJSON.dll", "Destroy_HP_SSLServer", 公开, 销毁 HP_SSLServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_SSLAgent, , "./cJSON.dll", "Destroy_HP_SSLAgent", 公开, 销毁 HP_SSLAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_SSLClient, , "./cJSON.dll", "Destroy_HP_SSLClient", 公开, 销毁 HP_SSLClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_SSLPullServer, , "./cJSON.dll", "Destroy_HP_SSLPullServer", 公开, 销毁 HP_SSLPullServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_SSLPullAgent, , "./cJSON.dll", "Destroy_HP_SSLPullAgent", 公开, 销毁 HP_SSLPullAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_SSLPullClient, , "./cJSON.dll", "Destroy_HP_SSLPullClient", 公开, 销毁 HP_SSLPullClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_SSLPackServer, , "./cJSON.dll", "Destroy_HP_SSLPackServer", 公开, 销毁 HP_SSLPackServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_SSLPackAgent, , "./cJSON.dll", "Destroy_HP_SSLPackAgent", 公开, 销毁 HP_SSLPackAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_SSLPackClient, , "./cJSON.dll", "Destroy_HP_SSLPackClient", 公开, 销毁 HP_SSLPackClient 对象
    .参数 pClient, 整数型

.DLL命令 Create_HP_HttpsServer, 整数型, "./cJSON.dll", "Create_HP_HttpsServer", 公开, 创建 HP_HttpsServer 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpsAgent, 整数型, "./cJSON.dll", "Create_HP_HttpsAgent", 公开, 创建 HP_HttpsAgent 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpsClient, 整数型, "./cJSON.dll", "Create_HP_HttpsClient", 公开, 创建 HP_HttpsClient 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_HttpsSyncClient, 整数型, "./cJSON.dll", "Create_HP_HttpsSyncClient", 公开, 创建 HP_HttpSyncClient 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_HttpsServer, , "./cJSON.dll", "Destroy_HP_HttpsServer", 公开, 销毁 HP_HttpsServer 对象
    .参数 pServer, 整数型

.DLL命令 Destroy_HP_HttpsAgent, , "./cJSON.dll", "Destroy_HP_HttpsAgent", 公开, 销毁 HP_HttpsAgent 对象
    .参数 pAgent, 整数型

.DLL命令 Destroy_HP_HttpsClient, , "./cJSON.dll", "Destroy_HP_HttpsClient", 公开, 销毁 HP_HttpsClient 对象
    .参数 pClient, 整数型

.DLL命令 Destroy_HP_HttpsSyncClient, , "./cJSON.dll", "Destroy_HP_HttpsSyncClient", 公开, 销毁 HP_HttpSyncClient 对象
    .参数 pClient, 整数型

.DLL命令 HP_SSL_RemoveThreadLocalState, , "./cJSON.dll", "HP_SSL_RemoveThreadLocalState", 公开, 名称：清理线程局部环境 SSL 资源 描述：任何一个操作 SSL 的线程，通信结束时都需要清理线程局部环境 SSL 资源,无,/
    .参数 dwThreadID, 整数型, , 线程 ID（0：当前线程）

.DLL命令 HP_SSLServer_SetupSSLContext, 逻辑型, "./cJSON.dll", "HP_SSLServer_SetupSSLContext", 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 pServer, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, , 证书文件
    .参数 lpszPemKeyFile, 文本型, , 私钥文件
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, , CA 证书文件或目录（单向验证或客户端可选）
    .参数 fnServerNameCallback, 子程序指针, , SNI 回调函数指针（可选）int (__HP_CALL *Fn_SNI_ServerNameCallback)(LPCTSTR lpszServerName, PVOID pContext)

.DLL命令 HP_SSLServer_SetupSSLContextByMemory, 逻辑型, "./cJSON.dll", "HP_SSLServer_SetupSSLContextByMemory", 公开, 名称：初始化通信组件 SSL 环境参数（通过内存加载证书）描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败
    .参数 pServer, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, , 证书内容
    .参数 lpszPemKey, 文本型, , 私钥内容
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, , CA 证书内容（单向验证可选）
    .参数 fnServerNameCallback, 子程序指针, , SNI 回调函数指针（可选）int (__HP_CALL *Fn_SNI_ServerNameCallback)(LPCTSTR lpszServerName, PVOID pContext)

.DLL命令 HP_SSLServer_AddSSLContext, 整数型, "./cJSON.dll", "HP_SSLServer_AddSSLContext", 公开, 名称：增加 SNI 主机证书 描述：SSL 服务端在 SetupSSLContext() 成功后可以调用本方法增加多个 SNI 主机证书,正数-- 成功，并返回 SNI 主机证书对应的索引，该索引用于在 SNI 回调函数中定位 SNI 主机,负数-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 pServer, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, , 证书文件
    .参数 lpszPemKeyFile, 文本型, , 私钥文件
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, , CA 证书文件或目录（单向验证可选）

.DLL命令 HP_SSLServer_AddSSLContextByMemory, 整数型, "./cJSON.dll", "HP_SSLServer_AddSSLContextByMemory", 公开, 名称：增加 SNI 主机证书（通过内存加载证书）描述：SSL 服务端在 SetupSSLContext() 成功后可以调用本方法增加多个 SNI 主机证书
    .参数 pServer, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, , 证书内容
    .参数 lpszPemKey, 文本型, , 私钥内容
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, , CA 证书内容（单向验证可选）

.DLL命令 HP_SSLServer_BindSSLServerName, 逻辑型, "./cJSON.dll", "HP_SSLServer_BindSSLServerName", 公开, 名称：绑定 SNI 主机域名 描述：SSL 服务端在 AddSSLContext() 成功后可以调用本方法绑定主机域名到 SNI 主机证书
    .参数 pServer, 整数型
    .参数 lpszDomainName, 文本型, , 主机域名
    .参数 iContextIndex, 整数型, , SNI 主机证书对应的索引

.DLL命令 HP_SSLServer_CleanupSSLContext, , "./cJSON.dll", "HP_SSLServer_CleanupSSLContext", 公开, 名称：清理通信组件 SSL 运行环境 描述：清理通信组件 SSL 运行环境，回收 SSL 相关内存,无,/
    .参数 pServer, 整数型

.DLL命令 HP_SSLServer_StartSSLHandShake, 逻辑型, "./cJSON.dll", "HP_SSLServer_StartSSLHandShake", 公开, 启动 SSL 握手，当通信组件设置为非自动握手时，需要调用本方法启动 SSL 握手
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_SSLServer_SetSSLAutoHandShake, , "./cJSON.dll", "HP_SSLServer_SetSSLAutoHandShake", 公开, 设置通信组件握手方式（默认：TRUE，自动握手）
    .参数 pServer, 整数型
    .参数 bAutoHandShake, 逻辑型

.DLL命令 HP_SSLServer_IsSSLAutoHandShake, 逻辑型, "./cJSON.dll", "HP_SSLServer_IsSSLAutoHandShake", 公开, 获取通信组件握手方式
    .参数 pServer, 整数型

.DLL命令 HP_SSLServer_SetSSLCipherList, , "./cJSON.dll", "HP_SSLServer_SetSSLCipherList", 公开, 设置 SSL 加密算法列表
    .参数 pServer, 整数型
    .参数 lpszCipherList, 文本型

.DLL命令 HP_SSLServer_GetSSLCipherList, 文本型, "./cJSON.dll", "HP_SSLServer_GetSSLCipherList", 公开, 获取 SSL 加密算法列表
    .参数 pServer, 整数型

.DLL命令 HP_SSLServer_GetSSLSessionInfo, 逻辑型, "./cJSON.dll", "HP_SSLServer_GetSSLSessionInfo", 公开, 名称：获取 SSL Session 信息 描述：获取指定类型的 SSL Session 信息（输出类型参考：#SSL_SSI_）
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型
    .参数 enInfo, 整数型, , 参考：#SSL_SSI_
    .参数 lppInfo, 整数型, 传址

.DLL命令 HP_SSLAgent_SetupSSLContext, 逻辑型, "./cJSON.dll", "HP_SSLAgent_SetupSSLContext", 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 pAgent, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, , 证书文件（客户端可选）
    .参数 lpszPemKeyFile, 文本型, , 私钥文件（客户端可选）
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, , CA 证书文件或目录（单向验证或客户端可选）

.DLL命令 HP_SSLAgent_SetupSSLContextByMemory, 逻辑型, "./cJSON.dll", "HP_SSLAgent_SetupSSLContextByMemory", 公开, 名称：初始化通信组件 SSL 环境参数（通过内存加载证书）描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败
    .参数 pAgent, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, , 证书内容（客户端可选）
    .参数 lpszPemKey, 文本型, , 私钥内容（客户端可选）
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, , CA 证书内容（单向验证或客户端可选）

.DLL命令 HP_SSLAgent_CleanupSSLContext, , "./cJSON.dll", "HP_SSLAgent_CleanupSSLContext", 公开, 名称：清理通信组件 SSL 运行环境 描述：清理通信组件 SSL 运行环境，回收 SSL 相关内存,无,/
    .参数 pAgent, 整数型

.DLL命令 HP_SSLAgent_StartSSLHandShake, 逻辑型, "./cJSON.dll", "HP_SSLAgent_StartSSLHandShake", 公开, 启动 SSL 握手，当通信组件设置为非自动握手时，需要调用本方法启动 SSL 握手
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型

.DLL命令 HP_SSLAgent_SetSSLAutoHandShake, , "./cJSON.dll", "HP_SSLAgent_SetSSLAutoHandShake", 公开, 设置通信组件握手方式（默认：TRUE，自动握手）
    .参数 pAgent, 整数型
    .参数 bAutoHandShake, 逻辑型

.DLL命令 HP_SSLAgent_IsSSLAutoHandShake, 逻辑型, "./cJSON.dll", "HP_SSLAgent_IsSSLAutoHandShake", 公开, 获取通信组件握手方式
    .参数 pAgent, 整数型

.DLL命令 HP_SSLAgent_SetSSLCipherList, , "./cJSON.dll", "HP_SSLAgent_SetSSLCipherList", 公开, 设置 SSL 加密算法列表
    .参数 pAgent, 整数型
    .参数 lpszCipherList, 文本型

.DLL命令 HP_SSLAgent_GetSSLCipherList, 文本型, "./cJSON.dll", "HP_SSLAgent_GetSSLCipherList", 公开, 获取 SSL 加密算法列表
    .参数 pAgent, 整数型

.DLL命令 HP_SSLAgent_GetSSLSessionInfo, 逻辑型, "./cJSON.dll", "HP_SSLAgent_GetSSLSessionInfo", 公开, 名称：获取 SSL Session 信息 描述：获取指定类型的 SSL Session 信息（输出类型参考：#SSL_SSI_）
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型
    .参数 enInfo, 整数型, , 参考：#SSL_SSI_
    .参数 lppInfo, 整数型, 传址

.DLL命令 HP_SSLClient_SetupSSLContext, 逻辑型, "./cJSON.dll", "HP_SSLClient_SetupSSLContext", 公开, 名称：初始化通信组件 SSL 环境参数 描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败,TRUE-- 成功,FALSE-- 失败，可通过 SYS_GetLastError() 获取失败原因,/
    .参数 pClient, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCertFile, 文本型, , 证书文件（客户端可选）
    .参数 lpszPemKeyFile, 文本型, , 私钥文件（客户端可选）
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCertFileOrPath, 文本型, , CA 证书文件或目录（单向验证或客户端可选）

.DLL命令 HP_SSLClient_SetupSSLContextByMemory, 逻辑型, "./cJSON.dll", "HP_SSLClient_SetupSSLContextByMemory", 公开, 名称：初始化通信组件 SSL 环境参数（通过内存加载证书）描述：SSL 环境参数必须在 SSL 通信组件启动前完成初始化，否则启动失败
    .参数 pClient, 整数型
    .参数 iVerifyMode, 整数型, , SSL 验证模式（参考 EnSSLVerifyMode）
    .参数 lpszPemCert, 文本型, , 证书内容（客户端可选）
    .参数 lpszPemKey, 文本型, , 私钥内容（客户端可选）
    .参数 lpszKeyPasswod, 文本型, , 私钥密码（没有密码则为空）
    .参数 lpszCAPemCert, 文本型, , CA 证书内容（单向验证或客户端可选）

.DLL命令 HP_SSLClient_CleanupSSLContext, , "./cJSON.dll", "HP_SSLClient_CleanupSSLContext", 公开, 名称：清理通信组件 SSL 运行环境 描述：清理通信组件 SSL 运行环境，回收 SSL 相关内存,无,/
    .参数 pClient, 整数型

.DLL命令 HP_SSLClient_StartSSLHandShake, 逻辑型, "./cJSON.dll", "HP_SSLClient_StartSSLHandShake", 公开, 启动 SSL 握手，当通信组件设置为非自动握手时，需要调用本方法启动 SSL 握手
    .参数 pClient, 整数型

.DLL命令 HP_SSLClient_SetSSLAutoHandShake, , "./cJSON.dll", "HP_SSLClient_SetSSLAutoHandShake", 公开, 设置通信组件握手方式（默认：TRUE，自动握手）
    .参数 pClient, 整数型
    .参数 bAutoHandShake, 逻辑型

.DLL命令 HP_SSLClient_IsSSLAutoHandShake, 逻辑型, "./cJSON.dll", "HP_SSLClient_IsSSLAutoHandShake", 公开, 获取通信组件握手方式
    .参数 pClient, 整数型

.DLL命令 HP_SSLClient_SetSSLCipherList, , "./cJSON.dll", "HP_SSLClient_SetSSLCipherList", 公开, 设置 SSL 加密算法列表
    .参数 pClient, 整数型
    .参数 lpszCipherList, 文本型

.DLL命令 HP_SSLClient_GetSSLCipherList, 文本型, "./cJSON.dll", "HP_SSLClient_GetSSLCipherList", 公开, 获取 SSL 加密算法列表
    .参数 pClient, 整数型

.DLL命令 HP_SSLClient_GetSSLSessionInfo, 逻辑型, "./cJSON.dll", "HP_SSLClient_GetSSLSessionInfo", 公开, 名称：获取 SSL Session 信息 描述：获取指定类型的 SSL Session 信息（输出类型参考：#SSL_SSI_）
    .参数 pClient, 整数型
    .参数 enInfo, 整数型, , 参考：#SSL_SSI_
    .参数 lppInfo, 整数型, 传址

.DLL命令 HP_Server_IsPauseReceive, 逻辑型, "./cJSON.dll", "HP_Server_IsPauseReceive", 公开, 获取连接的数据接收状态
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pbPaused, 逻辑型, 传址, 返回 真- 暂停, 假- 恢复

.DLL命令 HP_Server_IsConnected, 逻辑型, "./cJSON.dll", "HP_Server_IsConnected", 公开, 检测是否有效连接
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID

.DLL命令 HP_Server_PauseReceive, 逻辑型, "./cJSON.dll", "HP_Server_PauseReceive", 公开, 暂停/恢复某个连接的数据接收工作
    .参数 pServer, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bPause, 逻辑型, , 真- 暂停, 假- 恢复

.DLL命令 HP_Server_IsSecure, 逻辑型, "./cJSON.dll", "HP_Server_IsSecure", 公开, 检测是否为安全连接（SSL/HTTPS）
    .参数 pServer, 整数型

.DLL命令 HP_Agent_IsPauseReceive, 逻辑型, "./cJSON.dll", "HP_Agent_IsPauseReceive", 公开, 获取连接的数据接收状态
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pbPaused, 逻辑型, 传址, 返回 真- 暂停, 假- 恢复

.DLL命令 HP_Agent_IsConnected, 逻辑型, "./cJSON.dll", "HP_Agent_IsConnected", 公开, 检测是否有效连接
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID

.DLL命令 HP_Agent_SetReuseAddressPolicy, , "./cJSON.dll", "HP_Agent_SetReuseAddressPolicy", 公开, 设置地址重用选项
    .参数 pAgent, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

.DLL命令 HP_Agent_PauseReceive, 逻辑型, "./cJSON.dll", "HP_Agent_PauseReceive", 公开, 暂停/恢复某个连接的数据接收工作
    .参数 pAgent, 整数型
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 bPause, 逻辑型, , 真- 暂停, 假- 恢复

.DLL命令 HP_Agent_IsSecure, 逻辑型, "./cJSON.dll", "HP_Agent_IsSecure", 公开, 检测是否为安全连接（SSL/HTTPS）
    .参数 pAgent, 整数型

.DLL命令 HP_Agent_ConnectWithExtra, 逻辑型, "./cJSON.dll", "HP_Agent_ConnectWithExtra", 公开, 连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）
    .参数 pExtra, 整数型, , 连接附加数据（默认：nullptr）

.DLL命令 HP_Agent_ConnectWithLocalPort, 逻辑型, "./cJSON.dll", "HP_Agent_ConnectWithLocalPort", 公开, 连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）
    .参数 usLocalPort, 整数型, , 本地端口（默认：0）

.DLL命令 HP_Agent_ConnectWithLocalAddress, 逻辑型, "./cJSON.dll", "HP_Agent_ConnectWithLocalAddress", 公开, 连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）
    .参数 usLocalPort, 整数型, , 本地端口（默认：0）
    .参数 lpszLocalAddress, 文本型, , 本地地址（默认：nullptr，使用 Start() 方法中绑定的地址）

.DLL命令 HP_Agent_ConnectWithExtraAndLocalPort, 逻辑型, "./cJSON.dll", "HP_Agent_ConnectWithExtraAndLocalPort", 公开, 连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）
    .参数 usLocalPort, 整数型, , 本地端口（默认：0）

.DLL命令 HP_Agent_ConnectWithExtraAndLocalAddressPort, 逻辑型, "./cJSON.dll", "HP_Agent_ConnectWithExtraAndLocalAddressPort", 公开, 连接服务器，连接成功后 IAgentListener 会接收到 OnConnect() / OnHandShake() 事件
    .参数 pAgent, 整数型
    .参数 lpszRemoteAddress, 文本型, , 服务端地址
    .参数 usPort, 短整数型, , 服务端端口
    .参数 pdwConnID, 整数型, 传址, 连接 ID（默认：nullptr，不获取连接 ID）
    .参数 pExtra, 整数型, , 连接附加数据（默认：nullptr）
    .参数 usLocalPort, 整数型, , 本地端口（默认：0）
    .参数 lpszLocalAddress, 文本型, , 本地地址（默认：nullptr，使用 Start() 方法中绑定的地址）

.DLL命令 HP_Client_IsPauseReceive, 逻辑型, "./cJSON.dll", "HP_Client_IsPauseReceive", 公开, 获取连接的数据接收状态
    .参数 pClient, 整数型
    .参数 pbPaused, 逻辑型, 传址, 返回 真- 暂停, 假- 恢复

.DLL命令 HP_Client_IsConnected, 逻辑型, "./cJSON.dll", "HP_Client_IsConnected", 公开, 检测是否有效连接
    .参数 pClient, 整数型

.DLL命令 HP_Client_SetReuseAddressPolicy, , "./cJSON.dll", "HP_Client_SetReuseAddressPolicy", 公开, 设置地址重用选项
    .参数 pClient, 整数型
    .参数 enReusePolicy, 整数型, , #RAP_ 开头常量

.DLL命令 HP_Client_PauseReceive, 逻辑型, "./cJSON.dll", "HP_Client_PauseReceive", 公开, 暂停/恢复某个连接的数据接收工作
    .参数 pClient, 整数型
    .参数 bPause, 逻辑型, , 真- 暂停, 假- 恢复

.DLL命令 HP_Client_Wait, 逻辑型, "./cJSON.dll", "HP_Client_Wait", 公开, 名称：等待 描述：等待通信组件停止运行
    .参数 pClient, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

.DLL命令 HP_Client_IsSecure, 逻辑型, "./cJSON.dll", "HP_Client_IsSecure", 公开, 检测是否为安全连接（SSL/HTTPS）
    .参数 pClient, 整数型

.DLL命令 HP_HttpCookie_HLP_ExpiresToMaxAge, 整数型, "./cJSON.dll", "HP_HttpCookie_HLP_ExpiresToMaxAge", 公开, expires -> Max-Age
    .参数 tmExpires, 长整数型

.DLL命令 HP_HttpCookie_HLP_MaxAgeToExpires, 长整数型, "./cJSON.dll", "HP_HttpCookie_HLP_MaxAgeToExpires", 公开, Max-Age -> expires
    .参数 iMaxAge, 整数型

.DLL命令 HP_HttpCookie_HLP_CurrentUTCTime, 长整数型, "./cJSON.dll", "HP_HttpCookie_HLP_CurrentUTCTime", 公开, 获取当前 UTC 时间

.DLL命令 HP_HttpCookie_HLP_ToString, 逻辑型, "./cJSON.dll", "HP_HttpCookie_HLP_ToString", 公开, 生成 Cookie 字符串
    .参数 lpszBuff, 文本型
    .参数 piBuffLen, 整数型, 传址
    .参数 lpszName, 文本型
    .参数 lpszValue, 文本型
    .参数 lpszDomain, 文本型
    .参数 lpszPath, 文本型
    .参数 iMaxAge, 整数型
    .参数 bHttpOnly, 逻辑型
    .参数 bSecure, 逻辑型
    .参数 enSameSite, 整数型

.DLL命令 HP_HttpCookie_HLP_MakeExpiresStr, 逻辑型, "./cJSON.dll", "HP_HttpCookie_HLP_MakeExpiresStr", 公开, 整数转换为 Cookie expires 字符串
    .参数 lpszBuff, 文本型
    .参数 piBuffLen, 整数型, 传址
    .参数 tmExpires, 长整数型

.DLL命令 HP_HttpCookie_HLP_ParseExpires, 逻辑型, "./cJSON.dll", "HP_HttpCookie_HLP_ParseExpires", 公开, Cookie expires 字符串转换为整数
    .参数 lpszExpires, 文本型
    .参数 ptmExpires, 长整数型, 传址

.DLL命令 HP_HttpCookie_MGR_IsEnableThirdPartyCookie, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_IsEnableThirdPartyCookie", 公开, 检查是否允许第三方 Cookie

.DLL命令 HP_HttpCookie_MGR_SetEnableThirdPartyCookie, , "./cJSON.dll", "HP_HttpCookie_MGR_SetEnableThirdPartyCookie", 公开, 设置是否允许第三方 Cookie
    .参数 bEnableThirdPartyCookie, 逻辑型

.DLL命令 HP_HttpCookie_MGR_DeleteCookie, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_DeleteCookie", 公开, 删除 Cookie
    .参数 lpszDomain, 文本型, , 域
    .参数 lpszPath, 文本型, , 路径
    .参数 lpszName, 文本型, , 名称

.DLL命令 HP_HttpCookie_MGR_SetCookie, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_SetCookie", 公开, 设置 Cookie
    .参数 lpszName, 文本型
    .参数 lpszValue, 文本型
    .参数 lpszDomain, 文本型
    .参数 lpszPath, 文本型
    .参数 iMaxAge, 整数型
    .参数 bHttpOnly, 逻辑型
    .参数 bSecure, 逻辑型
    .参数 enSameSite, 整数型
    .参数 bOnlyUpdateValueIfExists, 逻辑型

.DLL命令 HP_HttpCookie_MGR_RemoveExpiredCookies, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_RemoveExpiredCookies", 公开, 清理过期 Cookie
    .参数 lpszDomain, 文本型
    .参数 lpszPath, 文本型

.DLL命令 HP_HttpCookie_MGR_ClearCookies, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_ClearCookies", 公开, 清理 Cookie
    .参数 lpszDomain, 文本型
    .参数 lpszPath, 文本型

.DLL命令 HP_HttpCookie_MGR_SaveToFile, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_SaveToFile", 公开, 保存 Cookie 到文件
    .参数 lpszFile, 文本型
    .参数 bKeepExists, 逻辑型

.DLL命令 HP_HttpCookie_MGR_LoadFromFile, 逻辑型, "./cJSON.dll", "HP_HttpCookie_MGR_LoadFromFile", 公开, 从文件加载 Cookie
    .参数 lpszFile, 文本型
    .参数 bKeepExists, 逻辑型

.DLL命令 HP_HttpAgent_IsUseCookie, 逻辑型, "./cJSON.dll", "HP_HttpAgent_IsUseCookie", 公开, 检查是否使用 Cookie
    .参数 pAgent, 整数型

.DLL命令 HP_HttpAgent_SetUseCookie, , "./cJSON.dll", "HP_HttpAgent_SetUseCookie", 公开, 设置是否使用 Cookie
    .参数 pAgent, 整数型
    .参数 bUseCookie, 逻辑型

.DLL命令 HP_HttpClient_IsUseCookie, 逻辑型, "./cJSON.dll", "HP_HttpClient_IsUseCookie", 公开, 检查是否使用 Cookie
    .参数 pClient, 整数型

.DLL命令 HP_HttpClient_SetUseCookie, , "./cJSON.dll", "HP_HttpClient_SetUseCookie", 公开, 设置是否使用 Cookie
    .参数 pClient, 整数型
    .参数 bUseCookie, 逻辑型

.DLL命令 HP_Set_FN_ThreadPool_OnStartup, , "./cJSON.dll", "HP_Set_FN_ThreadPool_OnStartup", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_ThreadPool_OnShutdown, , "./cJSON.dll", "HP_Set_FN_ThreadPool_OnShutdown", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_ThreadPool_OnWorkerThreadStart, , "./cJSON.dll", "HP_Set_FN_ThreadPool_OnWorkerThreadStart", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 HP_Set_FN_ThreadPool_OnWorkerThreadEnd, , "./cJSON.dll", "HP_Set_FN_ThreadPool_OnWorkerThreadEnd", 公开
    .参数 pListener, 整数型
    .参数 fn, 子程序指针

.DLL命令 Destroy_HP_ThreadPoolListener, , "./cJSON.dll", "Destroy_HP_ThreadPoolListener", 公开, 销毁 IHPThreadPoolListener 对象
    .参数 pListener, 整数型

.DLL命令 Create_HP_ThreadPool, 整数型, "./cJSON.dll", "Create_HP_ThreadPool", 公开, 创建 IHPThreadPool 对象
    .参数 pListener, 整数型

.DLL命令 Destroy_HP_ThreadPool, , "./cJSON.dll", "Destroy_HP_ThreadPool", 公开, 销毁 IHPThreadPool 对象
    .参数 pThreadPool, 整数型

.DLL命令 Create_HP_SocketTaskObj, 整数型, "./cJSON.dll", "Create_HP_SocketTaskObj", 公开, 创建 TSocketTask 对象
    .参数 fnTaskProc, 子程序指针, , 任务入口函数
    .参数 pSender, 整数型, , 发起对象
    .参数 dwConnID, 整数型, , 连接 ID
    .参数 pBuffer, 整数型, , 数据缓冲区
    .参数 iBuffLen, 整数型, , 数据缓冲区长度
    .参数 enBuffType, 整数型, , 数据缓冲区类型#TBT_（默认：#TBT_COPY）
    .参数 wParam, 整数型, , 自定义参数
    .参数 lParam, 整数型, , 自定义参数

.DLL命令 Destroy_HP_SocketTaskObj, , "./cJSON.dll", "Destroy_HP_SocketTaskObj", 公开, 销毁 TSocketTask 对象
    .参数 pTask, 整数型

.DLL命令 HP_ThreadPool_Start, 逻辑型, "./cJSON.dll", "HP_ThreadPool_Start", 公开, 启动线程池组件,TRUE -- 成功,FALSE -- 失败，可通过 SYS_GetLastError() 获取系统错误代码
    .参数 pThreadPool, 整数型
    .参数 dwThreadCount, 整数型, , 线程数量，（默认：0）
    .参数 dwMaxQueueSize, 整数型, , 任务队列最大容量（0：不限制，默认：0）
    .参数 enRejectedPolicy, 整数型, , 任务拒绝处理策略,#TRP_ 开头常量
    .参数 dwStackSize, 整数型, , 线程堆栈空间大小（默认：0 -> 操作系统默认）

.DLL命令 HP_ThreadPool_Stop, 逻辑型, "./cJSON.dll", "HP_ThreadPool_Stop", 公开, 在规定时间内关闭线程池组件，如果工作线程在最大等待时间内未能正常关闭，会尝试强制关闭，这种情况下很可能会造成系统资源泄漏,TRUE -- 成功,FALSE -- 失败，可通过 SYS_GetLastError() 获取系统错误代码
    .参数 pThreadPool, 整数型
    .参数 dwMaxWait, 整数型, , 最大等待时间（毫秒，默认：INFINITE，一直等待）

.DLL命令 HP_ThreadPool_Submit, 逻辑型, "./cJSON.dll", "HP_ThreadPool_Submit", 公开, 向线程池提交异步任务,TRUE -- 成功,FALSE -- 失败，可通过 SYS_GetLastError() 获取系统错误代码,其中，错误码 #ERROR_DESTINATION_ELEMENT_FULL 表示任务队列已满
    .参数 pThreadPool, 整数型
    .参数 fnTaskProc, 子程序指针, , 任务处理函数
    .参数 pvArg, 整数型, , 任务参数
    .参数 dwMaxWait, 整数型, , 任务提交最大等待时间（仅对 TRP_WAIT_FOR 类型线程池生效，默认：INFINITE，一直等待）

.DLL命令 HP_ThreadPool_Submit_Task, 逻辑型, "./cJSON.dll", "HP_ThreadPool_Submit_Task", 公开, 向线程池提交异步 Socket 任务,TRUE -- 成功,FALSE -- 失败，可通过 SYS_GetLastError() 获取系统错误代码,其中，错误码 ERROR_DESTINATION_ELEMENT_FULL 表示任务队列已满
    .参数 pThreadPool, 整数型
    .参数 pTask, 整数型, , 任务参数
    .参数 dwMaxWait, 整数型, , 任务提交最大等待时间（仅对 TRP_WAIT_FOR 类型线程池生效，默认：INFINITE，一直等待）

.DLL命令 HP_ThreadPool_AdjustThreadCount, 逻辑型, "./cJSON.dll", "HP_ThreadPool_AdjustThreadCount", 公开, 增加或减少线程池的工作线程数量,TRUE -- 成功,FALSE -- 失败，可通过 SYS_GetLastError() 获取系统错误代码
    .参数 pThreadPool, 整数型
    .参数 dwNewThreadCount, 整数型, , 线程数量,>0 -> dwNewThreadCount,=0 -> (CPU核数 * 2 + 2),<0 -> (CPU核数 * (-dwNewThreadCount))

.DLL命令 HP_ThreadPool_Wait, 逻辑型, "./cJSON.dll", "HP_ThreadPool_Wait", 公开, 名称：等待 描述：等待线程池组件停止运行
    .参数 pThreadPool, 整数型
    .参数 dwMilliseconds, 整数型, , 超时时间（毫秒，默认：-1，永不超时）

.DLL命令 HP_ThreadPool_HasStarted, 逻辑型, "./cJSON.dll", "HP_ThreadPool_HasStarted", 公开, 检查线程池组件是否已启动
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetState, 整数型, "./cJSON.dll", "HP_ThreadPool_GetState", 公开, 查看线程池组件当前状态
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetQueueSize, 整数型, "./cJSON.dll", "HP_ThreadPool_GetQueueSize", 公开, 获取当前任务队列大小
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetTaskCount, 整数型, "./cJSON.dll", "HP_ThreadPool_GetTaskCount", 公开, 获取当前正在执行的任务数量
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetThreadCount, 整数型, "./cJSON.dll", "HP_ThreadPool_GetThreadCount", 公开, 获取工作线程数量
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetMaxQueueSize, 整数型, "./cJSON.dll", "HP_ThreadPool_GetMaxQueueSize", 公开, 获取任务队列最大容量
    .参数 pThreadPool, 整数型

.DLL命令 HP_ThreadPool_GetRejectedPolicy, 整数型, "./cJSON.dll", "HP_ThreadPool_GetRejectedPolicy", 公开, 获取任务拒绝处理策略
    .参数 pThreadPool, 整数型

.DLL命令 Destroy_HP_Compressor, , "./cJSON.dll", "Destroy_HP_Compressor", 公开, 销毁压缩器对象
    .参数 pCompressor, 整数型

.DLL命令 Destroy_HP_Decompressor, , "./cJSON.dll", "Destroy_HP_Decompressor", 公开, 销毁解压器对象
    .参数 pDecompressor, 整数型

.DLL命令 Create_HP_ZLibCompressor, 整数型, "./cJSON.dll", "Create_HP_ZLibCompressor", 公开, 创建 ZLib 压缩器对象（默认参数：iWindowBits = 15, iLevel = -1, iMethod = 8, iMemLevel = 8, iStrategy = 0）
    .参数 fnCallback, 子程序指针, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 Create_HP_ZLibCompressorEx, 整数型, "./cJSON.dll", "Create_HP_ZLibCompressor", 公开, 创建 ZLib 压缩器对象
    .参数 fnCallback, 子程序指针, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);
    .参数 iWindowBits, 整数型
    .参数 iLevel, 整数型
    .参数 iMethod, 整数型
    .参数 iMemLevel, 整数型
    .参数 iStrategy, 整数型

.DLL命令 Create_HP_GZipCompressor, 整数型, "./cJSON.dll", "Create_HP_GZipCompressor", 公开, 创建 GZip 压缩器对象（默认参数：iLevel = -1, iMethod = 8, iMemLevel = 8, iStrategy = 0）
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 Create_HP_GZipCompressorEx, 整数型, "./cJSON.dll", "Create_HP_GZipCompressorEx", 公开, 创建 GZip 压缩器对象
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);
    .参数 iLevel, 整数型
    .参数 iMethod, 整数型
    .参数 iMemLevel, 整数型
    .参数 iStrategy, 整数型

.DLL命令 Create_HP_ZLibDecompressor, 整数型, "./cJSON.dll", "Create_HP_ZLibDecompressor", 公开, 创建 ZLib 解压器对象（默认参数：iWindowBits = 15）
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 Create_HP_ZLibDecompressorEx, 整数型, "./cJSON.dll", "Create_HP_ZLibDecompressorEx", 公开, 创建 ZLib 解压器对象
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);
    .参数 iWindowBits, 整数型

.DLL命令 Create_HP_GZipDecompressor, 整数型, "./cJSON.dll", "Create_HP_GZipDecompressor", 公开, 创建 GZip 解压器对象
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 Create_HP_BrotliCompressor, 整数型, "./cJSON.dll", "Create_HP_BrotliCompressor", 公开, 创建 Brotli 压缩器对象（默认参数：iQuality -> 11，iWindow -> 22，iMode -> 0）
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 Create_HP_BrotliCompressorEx, 整数型, "./cJSON.dll", "Create_HP_BrotliCompressorEx", 公开, 创建 Brotli 压缩器对象（默认参数：iQuality -> 11，iWindow -> 22，iMode -> 0）
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);
    .参数 iQuality, 整数型
    .参数 iWindow, 整数型
    .参数 iMode, 整数型

.DLL命令 Create_HP_BrotliDecompressor, 整数型, "./cJSON.dll", "Create_HP_BrotliDecompressor", 公开, 创建 Brotli 解压器对象
    .参数 fnCallback, 整数型, , typedef BOOL (__HP_CALL *Fn_DataCallback)(const BYTE* pData, int iLength, PVOID pContext);

.DLL命令 HP_Compressor_Process, 逻辑型, "./cJSON.dll", "HP_Compressor_Process", 公开, 执行压缩,可循环调用以压缩流式或分段数据
    .参数 pCompressor, 整数型, , HP_Compressor
    .参数 pData, 整数型, , 待压缩数据缓冲区
    .参数 iLength, 整数型, , 待压缩数据长度
    .参数 bLast, 逻辑型
    .参数 pContext, 整数型, , 压缩回调函数 Fn_CompressDataCallback 的上下文参数

.DLL命令 HP_Compressor_Reset, 逻辑型, "./cJSON.dll", "HP_Compressor_Reset", 公开, 重置压缩器
    .参数 pCompressor, 整数型, , HP_Compressor

.DLL命令 HP_Decompressor_Process, 逻辑型, "./cJSON.dll", "HP_Decompressor_Process", 公开, 执行解压,可循环调用以解压流式或分段数据
    .参数 pDecompressor, 整数型, , HP_Decompressor
    .参数 pData, 整数型, , 待解压数据缓冲区
    .参数 iLength, 整数型, , 待解压数据长度
    .参数 pContext, 整数型, , 解压回调函数 Fn_DecompressDataCallback 的上下文参数

.DLL命令 HP_Decompressor_Reset, 逻辑型, "./cJSON.dll", "HP_Decompressor_Reset", 公开, 重置解压器
    .参数 pDecompressor, 整数型, , HP_Decompressor

.DLL命令 HP_Compressor_IsValid, 逻辑型, "./cJSON.dll", "HP_Compressor_IsValid", 公开, 检测压缩器是否可用
    .参数 pCompressor, 整数型, , HP_Compressor

.DLL命令 HP_Decompressor_IsValid, 逻辑型, "./cJSON.dll", "HP_Decompressor_IsValid", 公开, 检测解压器是否可用
    .参数 pDecompressor, 整数型, , HP_Decompressor

.DLL命令 malloc, 整数型, "crtdll.dll", "@malloc", 公开, 申请内存
    .参数 size, 整数型

.DLL命令 free, , "crtdll.dll", "@free", 公开, 释放内存
    .参数 block, 整数型

.DLL命令 realloc, 整数型, "crtdll.dll", "@realloc", 公开, 重置内存大小
    .参数 block, 整数型
    .参数 size, 整数型

.DLL命令 memset, 整数型, "crtdll.dll", "@memset", 公开, 填充内存
    .参数 _Dst, 整数型
    .参数 _Val, 整数型
    .参数 _Size, 整数型

.DLL命令 memcpy, 整数型, "crtdll.dll", "@memcpy", 公开, 复制内存
    .参数 _Dst, 整数型
    .参数 _Src, 整数型
    .参数 _Size, 整数型

.DLL命令 memmove, 整数型, "crtdll.dll", "@memmove", 公开, 移动内存
    .参数 _Dst, 整数型
    .参数 _Src, 整数型
    .参数 _Size, 整数型

.DLL命令 memcmp, 整数型, "crtdll.dll", "@memcmp", 公开, 比较前size个字节是否相同
    .参数 _Buf1, 整数型
    .参数 _Buf2, 整数型
    .参数 _Size, 整数型

.DLL命令 PathIsDirectoryA, 整数型, "shlwapi.dll", "PathIsDirectoryA", 公开, 目录是否存在
    .参数 lpszPath, 文本型

