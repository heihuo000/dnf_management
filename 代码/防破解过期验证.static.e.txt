.版本 2
.支持库 spec

.程序集 防破解过期验证
.子程序 过期判断
    .局部变量 过期日期, 文本型

    置入代码 (#VMP_S)
    
    ' 2024年8月1日 过期
    过期日期 ＝ “2025年8月1日”
    
    .如果真 (时间_取网络时间 () ≥ 到时间 (过期日期)) ' 时间设定
        调试输出 (过期日期)
        调试输出 (“试用结束”)
        _启动窗口.销毁 ()
        _主界面窗口.销毁 ()
        信息框 (“软件已过期，需要更新升级!”, 0, , )
        结束 ()
    .如果真结束
    
    
    .如果真 (时间_取北京时间 () ≥ 到时间 (过期日期)) ' 时间设定
        调试输出 (过期日期)
        ' 调试输出 (“试用结束”)
        _启动窗口.销毁 ()
        _主界面窗口.销毁 ()
        ' 信息框 (“软件已过期，需要更新升级!”, 0, , )
        结束 ()
        
    .如果真结束
    
    置入代码 (#VMP_E)
    

.子程序 获取启动器公告停用
    .局部变量 返回公告, 文本型
    .局部变量 返回公告fg, 文本型, , "0"
    .局部变量 加密内容, 文本型

    置入代码 (#VMP_S)
    
    加密内容 ＝ 文本_加密 (“登录器已过期*#*1*#*1”, “GZgS3QqK76dE9vukVP5hYWFBp”)
    调试输出 (加密内容)
    ' 2024年3月24日  最后编译使用文件名:  v2023.txt
    返回公告 ＝ 文本_解密 (网页_访问S (“http://ymdlq.ymfak.cn/test.txt”), “GZgS3QqK76dE9vukVP5hYWFBp”)
    
    调试输出 (返回公告)
    返回公告fg ＝ 分割文本 (返回公告, “*#*”, )
    .如果真 (取数组成员数 (返回公告fg) ＝ 3)
        ' 编辑框_全公告.内容 ＝ 返回公告fg [1]
        .如果真 (返回公告fg [2] ＝ “1”)
            信息框 (返回公告fg [1], 0, , )
        .如果真结束
        .如果真 (返回公告fg [3] ＝ “1”)
            信息框 (“当前版本已停用请更新最新版本！”, 0, , )
            存储变量IP地址 ＝ “0”
            结束 ()
        .如果真结束
        
    .如果真结束
    置入代码 (#VMP_E)

.子程序 加密运算, 文本型
    .参数 text, 文本型
    .参数 pass, 文本型, 可空
    .局部变量 z, 字节集
    .局部变量 a256, 字节型, , "256"
    .局部变量 b256, 字节型, , "256"
    .局部变量 i, 整数型
    .局部变量 p, 整数型
    .局部变量 ti, 整数型
    .局部变量 t4, 文本型
    .局部变量 tz, 字节型
    .局部变量 l, 整数型
    .局部变量 t1, 整数型
    .局部变量 t2, 文本型
    .局部变量 t3, 文本型
    .局部变量 key, 文本型

    t3 ＝ 到文本 (字符 (取随机数 (97, 122)))
    t3 ＝ 到大写 (t3 ＋ 到文本 (字符 (取随机数 (97, 122))))
    key ＝ pass ＋ t3
    z ＝ 到字节集 (text)
    .计次循环首 (256, i)
        a256 [i] ＝ i － 1
    .计次循环尾 ()
    p ＝ 1
    .计次循环首 (256, i)
        .如果真 (p ＞ 取文本长度 (key))
            p ＝ 1
        .如果真结束
        b256 [i] ＝ 取代码 (取文本中间 (key, p, 1), )
        p ＝ p ＋ 1
    .计次循环尾 ()
    p ＝ 0
    .计次循环首 (256, i)
        p ＝ (p ＋ a256 [i] ＋ b256 [i]) ％ 256 ＋ 1
        tz ＝ a256 [i]
        a256 [i] ＝ a256 [p]
        a256 [p] ＝ tz
    .计次循环尾 ()
    i ＝ 0
    p ＝ 0
    .计次循环首 (取字节集长度 (z), l)
        i ＝ (i ＋ 1) ％ 256 ＋ 1
        p ＝ (p ＋ a256 [i]) ％ 256 ＋ 1
        tz ＝ a256 [i]
        a256 [i] ＝ a256 [p]
        a256 [p] ＝ tz
        t1 ＝ (a256 [i] ＋ a256 [p] ％ 256) ％ 256 ＋ 1
        ti ＝ a256 [t1]
        t2 ＝ 加密子程序 (位异或 (z [l], ti))
        t4 ＝ t4 ＋ 选择 (取文本长度 (t2) ＞ 1, “”, “0”) ＋ t2
    .计次循环尾 ()
    返回 (t3 ＋ t4)

.子程序 加密子程序, 文本型
    .参数 i, 整数型

    返回 (多项选择 (右移 (i, 4) ＋ 1, “A”, “B”, “C”, “D”, “E”, “F”, “G”, “H”, “I”, “J”, “K”, “L”, “M”, “N”, “O”, “P”, “Q”, “R”, “S”, “T”, “U”, “V”, “W”, “X”, “Y”, “Z”) ＋ 多项选择 (位与 (i, 15) ＋ 1, “A”, “B”, “C”, “D”, “E”, “F”, “G”, “H”, “I”, “J”, “K”, “L”, “M”, “N”, “O”, “P”, “Q”, “R”, “S”, “T”, “U”, “V”, “W”, “X”, “Y”, “Z”))

.子程序 解密运算, 文本型
    .参数 text, 文本型
    .参数 pass, 文本型, 可空
    .局部变量 z, 字节型, , "0"
    .局部变量 a256, 字节型, , "256"
    .局部变量 b256, 字节型, , "256"
    .局部变量 i, 整数型
    .局部变量 p, 整数型
    .局部变量 t5, 整数型
    .局部变量 pw, 字节型, , "0"
    .局部变量 z2, 字节型
    .局部变量 l, 整数型
    .局部变量 t4, 整数型
    .局部变量 n, 整数型
    .局部变量 t1, 文本型
    .局部变量 t2, 文本型
    .局部变量 t3, 文本型

    .如果真 (text ＝ “”)
        返回 (“”)
    .如果真结束
    
    t1 ＝ 取文本左边 (text, 2)
    t2 ＝ 取文本右边 (text, 取文本长度 (text) － 2)
    t3 ＝ pass ＋ t1
    .变量循环首 (1, 取文本长度 (t2), 2, n)
        加入成员 (z, 到字节 (解密子程序 (取文本中间 (t2, n, 2))))
    .变量循环尾 ()
    .计次循环首 (256, i)
        a256 [i] ＝ i － 1
    .计次循环尾 ()
    p ＝ 1
    .计次循环首 (256, i)
        .如果真 (p ＞ 取文本长度 (t3))
            p ＝ 1
        .如果真结束
        b256 [i] ＝ 取代码 (取文本中间 (t3, p, 1), )
        p ＝ p ＋ 1
    .计次循环尾 ()
    p ＝ 0
    .计次循环首 (256, i)
        p ＝ (p ＋ a256 [i] ＋ b256 [i]) ％ 256 ＋ 1
        z2 ＝ a256 [i]
        a256 [i] ＝ a256 [p]
        a256 [p] ＝ z2
    .计次循环尾 ()
    i ＝ 0
    p ＝ 0
    .计次循环首 (取数组成员数 (z), l)
        i ＝ (i ＋ 1) ％ 256 ＋ 1
        p ＝ (p ＋ a256 [i]) ％ 256 ＋ 1
        z2 ＝ a256 [i]
        a256 [i] ＝ a256 [p]
        a256 [p] ＝ z2
        t4 ＝ (a256 [i] ＋ a256 [p] ％ 256) ％ 256 ＋ 1
        t5 ＝ a256 [t4]
        加入成员 (pw, 位异或 (z [l], t5))
    .计次循环尾 ()
    返回 (到文本 (pw))

.子程序 解密子程序, 整数型
    .参数 txt1, 文本型
    .参数 txt2, 文本型, 参考 可空
    .局部变量 t, 文本型
    .局部变量 l, 长整数型
    .局部变量 i, 整数型

    txt2 ＝ “”
    .变量循环首 (1, 取文本长度 (txt1), 1, i)
        t ＝ 取文本中间 (txt1, i, 1)
        l ＝ (寻找文本 (“ABCDEFGHIJKLMNOPQRSTUVWXYZ”, t, , 真) － 1) × 求次方 (16, 取文本长度 (txt1) － i) ＋ l
    .变量循环尾 ()
    .如果真 (是否为空 (txt2) ＝ 假)
        txt2 ＝ 到文本 (l)
    .如果真结束
    返回 (l)

.子程序 zh文本加密, 文本型
    .参数 加密文本内容, 文本型, , 可为任意汉字、大小写英文、特殊字符、数字或它们的组合，且长度不限。
    .参数 密钥, 文本型, 可空, 可为任意汉字、大小写英文、特殊字符、数字或它们的组合，且长度不限。
    .参数 循环加密次数, 整数型, 可空, 根据需要设定加密次数，一般一次就够了，次数越多加密解密耗时约长，默认加密1次。
    .局部变量 i, 整数型
    .局部变量 txt, 文本型

    .如果真 (加密文本内容 ＝ “”)
        返回 (“”)
    .如果真结束
    
    .如果真 (是否为空 (循环加密次数))
        循环加密次数 ＝ 1
    .如果真结束
    
    txt ＝ 加密文本内容
    .计次循环首 (循环加密次数, i)
        txt ＝ 加密运算 (txt, 密钥)
    .计次循环尾 ()
    返回 (txt)
    

.子程序 zh文本解密, 文本型
    .参数 解密文本内容, 文本型
    .参数 密钥, 文本型, 可空, 解密文本的密码，必须和加密文本的密码相同，否则无法解密出原始文本。
    .参数 循环解密次数, 整数型, 可空, 必须和加密次数相同，否则无法解密出原始文本。
    .局部变量 i, 整数型
    .局部变量 txt, 文本型

    .如果真 (解密文本内容 ＝ “”)
        返回 (“”)
    .如果真结束
    
    .如果真 (是否为空 (循环解密次数))
        循环解密次数 ＝ 1
    .如果真结束
    
    txt ＝ 解密文本内容
    .计次循环首 (循环解密次数, i) ' 可以根据需要设定加密次数，一般一次就够了，次数越多加密解密耗时约长。
        txt ＝ 解密运算 (txt, 密钥)
    .计次循环尾 ()
    返回 (txt)
    

